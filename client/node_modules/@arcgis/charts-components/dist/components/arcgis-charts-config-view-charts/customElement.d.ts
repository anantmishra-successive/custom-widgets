/// <reference types="../../index.d.ts" />
import { ChartModel } from '../../model';
import { SupportedLayer } from '@arcgis/charts-spec';
import { default as Sublayer } from '@arcgis/core/layers/support/Sublayer';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ModelListChangePayload } from '../../utils/components/event-payloads';

/** @private */
export declare class ArcgisChartsConfigViewCharts extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * The selectedChartId uniquely identifies the current selected chart in a layer or array of charts.
     *
     * @category Public
     */
    selectedChartId?: string;
    /**
     * The layer object associated with the charts.
     *
     * @category Public
     */
    layer: Sublayer | SupportedLayer | undefined;
    /**
     * Array of chart models passed to this component to view the different charts
     *
     * @category Public
     */
    modelList?: ChartModel[];
    /**
     * Prevents the list from being placed in a group. Mainly to avoid showing the layer title header.
     *
     * @category Public
     * @default false
     */
    noGroup: boolean;
    /**
     * Disable the three-dot menu for editing, renaming & deleting charts and disable re-ordering charts position in the charts list. Useful if the list is only intended for viewing.
     *
     * @category Public
     * @default false
     */
    disableEditing: boolean;
    /**
     * Event emitted when the model list order changes.
     *
     * @event
     */
    readonly arcgisChartsConfigModelListReorder: TargetedEvent<this, ModelListChangePayload>;
    /**
     * Event emitted when the chart to view changes.
     *
     * @event
     */
    readonly arcgisChartsConfigViewChartAddChart: TargetedEvent<this, {
        referenceElement: HTMLCalciteFabElement;
        layerId: string | undefined;
    }>;
    /**
     * Event emitted when the chart is deleted.
     *
     * @event
     */
    readonly arcgisChartsConfigViewChartDelete: TargetedEvent<this, {
        chartId: string | undefined;
    }>;
    /**
     * Event emitted when the chart to be edited.
     *
     * @event
     */
    readonly arcgisChartsConfigViewChartEdit: TargetedEvent<this, {
        chartId: string | undefined;
    }>;
    /**
     * Event emitted when the add chart button is clicked.
     *
     * @event
     */
    readonly arcgisChartsConfigViewChartSelect: TargetedEvent<this, {
        chartId: string | undefined;
    }>;
    private _messages;
}
