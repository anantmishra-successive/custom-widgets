import { ArcgisChart } from '../../components/arcgis-chart/customElement.js';
/**
 * Adds a listener on the feature layer, so every time the definition expression (filter) is modified we update
 * the chart.
 *
 * @param component The chart component
 */
export declare function addLayerFilterListener(component: ArcgisChart): Promise<IHandle | undefined>;
/**
 * Adds a listener on the feature layer, so every time the renderer is modified we update the chart.
 *
 * @param component The chart component
 */
export declare function addLayerRendererListener(component: ArcgisChart): Promise<IHandle | undefined>;
/**
 * Adds a listener on the feature layer view, so every time the view's extent is modified we update
 * the chart.
 *
 * @param props.component The chart component
 */
export declare function addExtentChangeListener(component: ArcgisChart): Promise<IHandle[] | undefined>;
/**
 * Adds a listener on the view's time extent, so every time extent is modified we update the chart.
 * @param component The chart component
 */
export declare function addViewTimeExtentListener(component: ArcgisChart): Promise<IHandle | undefined>;
/**
 * Adds a listener on the feature layer, so every time the fields are modified we update the chart.
 *
 * @param component The chart component
 */
export declare function addLayerFieldsListener(component: ArcgisChart): Promise<IHandle | undefined>;
/**
 * Adds a listener on the layer's view; so every time the selection data is modified, we update the chart.
 * @param component The chart component
 */
export declare function addSelectionsChangeInViewListener(component: ArcgisChart): Promise<IHandle | undefined>;
