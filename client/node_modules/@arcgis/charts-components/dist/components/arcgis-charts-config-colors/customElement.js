import { c as i } from "../../chunks/runtime.js";
import { html as l } from "lit-html";
import { l as c } from "../../chunks/chart-ui-utils2.js";
import { u as g } from "../../chunks/useT9n.js";
import { LitElement as h, createEvent as m } from "@arcgis/lumina";
import { css as n } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const u = "arcgis-charts-config-storage-colors", v = n`:host{--calcite-color-border-1: transparent}.color-header{margin-bottom:.5rem}`;
class b extends h {
  constructor() {
    super(...arguments), this._messages = g(), this.colorSelect = m();
  }
  static {
    this.properties = { messageOverrides: 0, rgba: 0, heading: 1 };
  }
  static {
    this.styles = v;
  }
  onColorSelect(s) {
    const { value: e } = s.target;
    if (e !== null) {
      const { r: t, g: r, b: a } = e, o = [t, r, a, 255];
      this.isNewColor(o) && this.colorSelect.emit(o);
    }
  }
  isNewColor(s) {
    let e = !1;
    return this.rgba === void 0 ? e = !0 : s === void 0 ? e = !1 : e = s[0] !== this.rgba[0] || s[1] !== this.rgba[1] || s[2] !== this.rgba[2], e;
  }
  render() {
    let s;
    if (this.rgba !== void 0) {
      const [e, t, r] = this.rgba;
      s = { r: e, g: t, b: r };
    }
    return l`<calcite-label>${this.heading ?? this._messages.color}</calcite-label><calcite-color-picker .value=${c(s)} @calciteColorPickerInput=${this.onColorSelect} .messageOverrides=${{
      g: this._messages.g,
      green: this._messages.green,
      h: this._messages.h,
      hex: this._messages.hex,
      hsv: this._messages.hsv,
      hue: this._messages.hue,
      r: this._messages.r,
      red: this._messages.red,
      rgb: this._messages.rgb,
      s: this._messages.s,
      saturation: this._messages.saturation,
      saveColor: this._messages.saveColor,
      saved: this._messages.saved,
      v: this._messages.v,
      value: this._messages.value
    }} clearable .storageId=${u} format=rgb></calcite-color-picker>`;
  }
}
i("arcgis-charts-config-colors", b);
export {
  b as ArcgisChartsConfigColors
};
