import { IDrawingInfo } from '@arcgis/charts-spec';
import { ChartConfig } from '../../../utils';
/**
 * Gets the version of the chart configuration.
 * @returns {string}
 */
export declare const getVersion: (config: ChartConfig) => string | undefined;
/**
 * Gets the title text of the chart from the config
 * @param config The config object
 */
export declare const getTitleText: (config: ChartConfig) => string;
/**
 * Sets the title text of the chart
 * @param titleText The title text
 * @param config The config object
 */
export declare const setTitleText: (titleText: string, config: ChartConfig) => void;
/**
 * Gets the subtitle text of the chart from the config
 * @param config The config object
 */
export declare const getSubtitleText: (config: ChartConfig) => string;
/**
 * Sets the subtitle text of the chart
 * @param subtitleText The subtitle text
 * @param config The config object
 */
export declare const setSubtitleText: (subtitleText: string, config: ChartConfig) => void;
/**
 * Gets the description text
 * @param config The config object
 */
export declare const getDescriptionText: (config: ChartConfig) => string;
/**
 * Sets the description text of the chart
 * @param descriptionText  The description text
 * @param config The config object
 */
export declare const setDescriptionText: (descriptionText: string, config: ChartConfig) => void;
/**
 * Gets whether the chart title is visible.
 * @param config The config object
 */
export declare const getChartTitleVisibility: (config: ChartConfig) => boolean;
/**
 * Sets whether to the chart title is visible.
 * @param visibility Whether or not to show the chart title
 * @param config The config object
 */
export declare const setChartTitleVisibility: (visibility: boolean, config: ChartConfig) => void;
/**
 * Gets whether the chart subtitle is visible.
 * @param config The config object
 */
export declare const getChartSubtitleVisibility: (config: ChartConfig) => boolean;
/**
 * Sets whether to the chart subtitle is visible.
 * @param visibility Whether or not to show the chart subtitle
 * @param config The config object
 */
export declare const setChartSubtitleVisibility: (visibility: boolean, config: ChartConfig) => void;
/**
 * Gets whether the description is visible.
 * @param config The config object
 */
export declare const getDescriptionVisibility: (config: ChartConfig) => boolean;
/**
 * Sets whether the description is visible.
 * @param visibility Whether or not to show the description
 * @param config The config object
 */
export declare const setDescriptionVisibility: (visibility: boolean, config: ChartConfig) => void;
/**
 * Gets the chart renderer from the chart config.
 * @param config  The chart config
 * @returns {IDrawingInfo["renderer"] | undefined} The chart renderer if defined, otherwise undefined.
 */
export declare const getChartRenderer: (config: ChartConfig) => IDrawingInfo["renderer"] | undefined;
/**
 * Sets the chart renderer in the chart config.
 * @param renderer The chart renderer to set.
 * @param config The chart config to set the renderer on.
 */
export declare const setChartRenderer: (renderer: IDrawingInfo["renderer"] | undefined, config: ChartConfig) => void;
