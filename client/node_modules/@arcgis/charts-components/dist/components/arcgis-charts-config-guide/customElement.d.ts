/// <reference types="../../index.d.ts" />
import { ModelWithGuides } from '../../model/mixins';
import { CalculatedMinMaxBoundsPayload } from '@arcgis/charts-spec';
import { default as MapView } from '@arcgis/core/views/MapView';
import { PopoverChangePayload, PopoverOpenChangePayload } from '../../utils/components/event-payloads';
import { GuideChangePayload } from './resource';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { GuideOrientation } from '../../model';

/** @private */
export declare class ArcgisChartsConfigGuide extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Chart Model.
     *
     * @category Public
     */
    model: ModelWithGuides;
    /**
     * Custom time zone for the chart.
     *
     * @type {MapView["timeZone"] | undefined}
     * @category Public
     * @default undefined
     */
    timeZone?: MapView["timeZone"];
    /**
     * Min/Max bounds computed by the chart
     *
     * @category Public
     */
    calculatedMinMaxBounds?: CalculatedMinMaxBoundsPayload[];
    /**
     * Index to identify the guide.
     *
     * @category Public
     */
    index: number;
    /**
     * Orientation of the guide.
     *
     * @category Public
     */
    orientation: GuideOrientation;
    /**
     * List position of the latest guide to be opened.
     *
     * @category Private
     * @default 0
     */
    latestGuidePosition: number;
    /**
     * Guide change event emitted with the new guide.
     *
     * @category Public
     */
    readonly arcgisChartsConfigGuideChange: TargetedEvent<this, GuideChangePayload>;
    /**
     * Event when there is change in guide popover.
     *
     * @category Public
     */
    readonly arcgisChartsConfigGuidePopoverChange: TargetedEvent<this, PopoverChangePayload>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverOpenChange: TargetedEvent<this, PopoverOpenChangePayload>;
    private _messages;
}
