/// <reference types="../../index.d.ts" />
import { LineChartModel } from '../../model';
import { SeriesSymbolsMap } from '../../utils';
import { CalculatedMinMaxBoundsPayload, SupportedLayer } from '@arcgis/charts-spec';
import { default as MapView } from '@arcgis/core/views/MapView';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { PropertyValues } from 'lit';
import { ChartAuthoringPages } from '../../interfaces';

/** @private */
export declare class ArcgisChartsConfigLineChart extends LitElement {
    /**
     * Line Chart Model.
     *
     * @category Public
     */
    model: LineChartModel;
    /**
     * Custom time zone for the chart.
     *
     * @type {MapView["timeZone"] | undefined}
     * @category Public
     * @default undefined
     */
    timeZone?: MapView["timeZone"];
    /**
     * Popover placement use it from the viewer to place the popover.
     *
     * @category Public
     * @default "leading"
     */
    popoverPlacement: HTMLCalcitePopoverElement["placement"];
    /**
     * list of series color
     *
     * @category Public
     */
    seriesColor?: SeriesSymbolsMap;
    /**
     * Data min and max values for x and y fields
     *
     * @category Public
     */
    calculatedDataMinMaxBounds?: CalculatedMinMaxBoundsPayload[];
    /**
     * Min/Max bounds computed by the chart
     *
     * @category Public
     */
    calculatedMinMaxBounds?: CalculatedMinMaxBoundsPayload[];
    /**
     * Specific page to be opened
     *
     * @category Public
     */
    page?: ChartAuthoringPages;
    /**
     * layer instance on which the charts are created or edited.
     *
     * @category Public
     */
    layer?: SupportedLayer;
    /**
     * usePopupTemplateFieldsInfo can be set to true to read the fields from layer.popupTemplate
     *
     * @category Public
     * @default false
     */
    usePopupTemplateFieldsInfo?: boolean;
    readonly arcgisChartsConfigNoSeriesUpdate: TargetedEvent<this, void>;
}
