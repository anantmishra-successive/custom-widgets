import { c as l } from "../../chunks/runtime.js";
import { html as u } from "lit-html";
import { b as h, m as r, s as d, c as m } from "../../chunks/chart-ui-utils2.js";
import { u as p } from "../../chunks/useT9n.js";
import { createRef as g, ref as b } from "lit-html/directives/ref.js";
import { LitElement as f, createEvent as v, safeClassMap as i } from "@arcgis/lumina";
import { css as x } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const n = {
  container: "container",
  label: "label",
  numberInput: "number-input"
}, F = x`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}.container{width:var(--arcgis-charts-config-calcite-block-width, var(--arcgis-charts-config-calcite-block-default-width));height:var(--arcgis-charts-config-calcite-block-height, var(--arcgis-charts-config-calcite-block-default-height));margin-top:.5rem}.container>.number-input{margin-bottom:.5rem;display:flex}.container>.number-input>div{width:100%}.label{display:flex;margin-bottom:.5rem;justify-content:space-between}`;
class w extends f {
  constructor() {
    super(...arguments), this._messages = p(), this.decimalPlacesInputElement = g(), this.arcgisChartsConfigNumberFormatChange = v();
  }
  static {
    this.properties = { messageOverrides: 0, numberFormat: 0 };
  }
  static {
    this.styles = F;
  }
  onDecimalPlacesChange() {
    const t = this.decimalPlacesInputElement.value?.value, a = Math.floor(Number(t)), s = a === Number(t) && a >= 0;
    if (t !== void 0 && s && h(t, this.decimalPlacesInputElement.value?.min, this.decimalPlacesInputElement.value?.max)) {
      const o = Number.parseInt(t), e = {
        minimumFractionDigits: this.numberFormat?.minimumFractionDigits,
        maximumFractionDigits: o
      };
      e.maximumFractionDigits !== void 0 && e.minimumFractionDigits !== void 0 && e.minimumFractionDigits > e.maximumFractionDigits && (e.minimumFractionDigits = e.maximumFractionDigits);
      const c = this.getUpdatedNumberFormat(e);
      this.arcgisChartsConfigNumberFormatChange.emit(c), this.decimalPlacesInputElement.value && r({
        inputElement: this.decimalPlacesInputElement.value,
        status: m.IDLE
      });
    } else this.decimalPlacesInputElement.value && r({
      inputElement: this.decimalPlacesInputElement.value,
      status: m.INVALID
    });
  }
  onShowThousandsSeparatorChange(t) {
    const a = t.target.checked, s = this.getUpdatedNumberFormat({
      useGrouping: a
    });
    this.arcgisChartsConfigNumberFormatChange.emit(s);
  }
  getUpdatedNumberFormat(t) {
    return {
      ...this.numberFormat,
      ...t
    };
  }
  render() {
    return u`<div><div class=${i(n.container)}><calcite-label class=${i(n.label)}>${this._messages.decimalPlaces}<calcite-input type=number class=${i(n.numberInput)} min=0 max=20 step=1 .value=${d(this.numberFormat?.maximumFractionDigits, 2)} @calciteInputInput=${this.onDecimalPlacesChange} ${b(this.decimalPlacesInputElement)}></calcite-input></calcite-label><calcite-label layout=inline-space-between class=${i(n.label)}>${this._messages.showThousandSeparators}<calcite-switch name=useGrouping .checked=${!!(this.numberFormat?.useGrouping ?? !0)} @calciteSwitchChange=${this.onShowThousandsSeparatorChange}></calcite-switch></calcite-label></div></div>`;
  }
}
l("arcgis-charts-config-number-format", w);
export {
  w as ArcgisChartsConfigNumberFormat
};
