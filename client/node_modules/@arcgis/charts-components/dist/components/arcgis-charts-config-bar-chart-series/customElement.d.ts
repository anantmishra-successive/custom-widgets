/// <reference types="../../index.d.ts" />
import { BarChartModel } from '../../model';
import { DataChangeErrorPayload, PopoverOpenChangePayload } from '../../utils/components/event-payloads';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisChartsConfigBarChartSeriesPopover } from '../arcgis-charts-config-bar-chart-series-popover/customElement.js';

/** @private */
export declare class ArcgisChartsConfigBarChartSeries extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Bar Chart Model.
     *
     * @category Public
     */
    model: BarChartModel;
    /**
     * To open the config of the selected series.
     *
     * @category Public
     * @default false
     */
    configSeriesOpen: boolean;
    /**
     * Whether the chart is actively using color match at the moment.
     *
     * @category Private
     * @default false
     */
    activeColorMatch: boolean;
    /**
     * Place the popover in this placement.
     *
     * @category Public
     * @default "leading"
     */
    popoverPlacement: HTMLCalcitePopoverElement["placement"];
    /**
     * Event when there is change in series popover.
     *
     * @category Public
     */
    readonly arcgisChartsConfigBarChartSeriesPopoverChange: TargetedEvent<this, {
        open: boolean;
        element: ArcgisChartsConfigBarChartSeriesPopover["el"] | null | undefined;
    }>;
    /**
     * Event emitted when there is data related error.
     *
     * @category Public
     */
    readonly arcgisChartsConfigDataChangeError: TargetedEvent<this, DataChangeErrorPayload>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverOpenChange: TargetedEvent<this, PopoverOpenChangePayload>;
    private _messages;
}
