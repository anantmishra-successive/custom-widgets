import { ChartConfig } from '../../../utils';
import { WebChartCalendarBinningUnits, WebChartFixedDateBinningUnits, WebChartNullPolicyTypes, WebChartTimeAggregationTypes, WebChartTemporalBinningTypes } from '@arcgis/charts-spec';
/**
 * Gets the date binning type.
 * @param config The chart configuration.
 */
export declare const getTemporalBinningType: (config: ChartConfig) => WebChartTemporalBinningTypes | undefined;
/**
 * Gets the time interval size.
 * @param config The chart configuration.
 */
export declare const getTemporalBinningSize: (config: ChartConfig) => number | undefined;
/**
 * Gets the time interval units.
 * @param config The chart configuration.
 */
export declare const getTemporalBinningUnit: (config: ChartConfig) => WebChartCalendarBinningUnits | WebChartFixedDateBinningUnits | undefined;
/**
 * Gets the time aggregation type.
 * @param config The chart configuration.
 */
export declare const getTimeAggregationType: (config: ChartConfig) => WebChartTimeAggregationTypes | undefined;
/**
 * Gets whether to trim incomplete time interval.
 * @param config The chart configuration.
 */
export declare const getTrimIncompleteTimeInterval: (config: ChartConfig) => boolean | undefined;
/**
 * Gets the null policy.
 * @param config The chart configuration.
 */
export declare const getNullPolicy: (config: ChartConfig) => WebChartNullPolicyTypes | undefined;
/**
 * Sets the temporal binning type.
 * @param type The new value for the date binning type.
 * @param config The chart configuration.
 */
export declare const setTemporalBinningType: (type: WebChartTemporalBinningTypes, config: ChartConfig) => void;
/**
 * Sets the time interval size by updating the config accordingly.
 * @param newBinCount The new value for the interval size.
 * @param config The chart configuration.
 */
export declare const setTemporalBinningSize: (newBinCount: number | undefined, config: ChartConfig) => void;
/**
 * Sets the null policy by updating the config accordingly.
 * @param newNullPolicy The new value for the null policy.
 * @param config The chart configuration.
 */
export declare const setNullPolicy: (newNullPolicy: WebChartNullPolicyTypes | undefined, config: ChartConfig) => void;
/**
 * Sets the time interval units by updating the config accordingly.
 * @param newUnit The new value for the interval units.
 * @param config The chart configuration.
 */
export declare const setTemporalBinningUnit: (newUnit: WebChartFixedDateBinningUnits | undefined, config: ChartConfig) => void;
/**
 * Sets the time aggregation type by updating the config accordingly.
 * @param newTimeAggregationType The new value for the aggregation type.
 * @param config The chart configuration.
 */
export declare const setTimeAggregationType: (newTimeAggregationType: WebChartTimeAggregationTypes | undefined, config: ChartConfig) => void;
/**
 * Sets whether to trim incomplete time interval by updating the config accordingly.
 * @param newTrimIncompleteTimeInterval The new value for the trim incomplete time interval property.
 * @param config The chart configuration.
 */
export declare const setTrimIncompleteTimeInterval: (newTrimIncompleteTimeInterval: boolean | undefined, config: ChartConfig) => void;
/**
 * Resets the time interval by setting its size to 0.
 * @param config The chart configuration.
 */
export declare const resetTimeInterval: (config: ChartConfig) => void;
