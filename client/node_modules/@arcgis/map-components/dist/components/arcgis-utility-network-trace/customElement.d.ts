/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/lumina/controllers';
import { default as UtilityNetworkTrace } from '@arcgis/core/widgets/UtilityNetworkTrace.js';
import { PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useUtilityNetworkTraceWidget: (component: LitElement & Pick<UtilityNetworkTrace, "icon" | "label" | "viewModel" | "defaultGraphicColor" | "disabled" | "enableResultArea" | "flags" | "gdbVersion" | "inputSettings" | "resultAreaProperties" | "selectedTraces"> & {
    state?: unknown;
    viewModel?: __esri.UtilityNetworkTraceViewModel | undefined;
    closed?: boolean;
    icon: import('@arcgis/components-utils').Nil | string;
    label: import('@arcgis/components-utils').Nil | string;
    referenceElement?: ArcgisReferenceElement | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/lumina').EventEmitter;
    arcgisPropertyChange: import('@arcgis/lumina').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.LinkChartView | __esri.MapView | __esri.SceneView;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}) => UtilityNetworkTrace;
/**
 * Utility Network Trace component provides a way to run traces in a Utility Network based on connectivity or traversability from set input flags. Input flags (starting points and barriers) can be set by clicking the view.
 *
 * > The Utility Network Trace component does not support proxied feature services or feature services that utilize stored credentials.
 *
 * Note: Sign in to access the data in this sample, U/P: `viewer01`/`I68VGU^nMurF`
 *
 * [Read more...](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-utility-network-trace/)
 */
export declare class ArcgisUtilityNetworkTrace extends LitElement {
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the [destroy](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-utility-network-trace/#destroy) method when you are done to
     * prevent memory leaks.
     *
     * @default false
     */
    autoDestroyDisabled: boolean;
    /**
     * The default color to assign the aggregated geometry of a trace result.
     *
     * @default
     * {
     * color: [255, 255, 0, 0.6],
     * haloOpacity: 0.9,
     * fillOpacity: 0.2,
     * hex: "#FFFF00"
     * }
     */
    defaultGraphicColor: __esri.GraphicColor;
    /**
     * When true, the widget is visually withdrawn and cannot be interacted with.
     *
     * @default true
     */
    disabled: boolean;
    /**
     * When `true`, provides the ability to show the convex hull or buffer.
     *
     * @default false
     */
    enableResultArea: boolean;
    /**
     * An array of map points to load into the widget to lookup flags.
     *
     * @default []
     */
    flags: __esri.FlagProperty[];
    /**
     * The Geodatabase version to pass into the trace.
     *
     * @deprecated `gdbVersion` is deprecated since version 4.31.
     * @default "sde.DEFAULT"
     */
    gdbVersion: string;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     *
     * @see [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/)
     * @default "utility-network-trace"
     */
    icon: string;
    /**
     * Custom labels, descriptions, and symbol for the input [flags](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-UtilityNetworkTrace.html#flags).
     *
     * @default []
     */
    inputSettings: __esri.InputSetting[];
    /**
     * The widget's default label.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-UtilityNetworkTrace.html#label)
     */
    label: string;
    /** @default "top-right" */
    position: __esri.UIPosition;
    /**
     * By assigning the `id` attribute of the Map or Scene component to this property, you can position a child component anywhere in the DOM while still maintaining a connection to the Map or Scene.
     *
     * @see [Associate components with a Map or Scene component](https://developers.arcgis.com/javascript/latest/programming-patterns/#associate-components-with-a-map-or-scene-component)
     */
    referenceElement?: ArcgisReferenceElement | string;
    /**
     * The properties to determine the size and color of the result area convex hull or buffer, and determines if it displays on the map when the trace completes.
     *
     * @default
     * {
     * type: "convexhull",
     * distance: 10,
     * unit: "meters",
     * areaUnit: "square-meters",
     * color: {
     * color: [255, 165, 0, 0.5],
     * haloOpacity: 0.9,
     * fillOpacity: 0.2,
     * hex: "#ffa500"
     * },
     * show: false
     * }
     */
    resultAreaProperties: __esri.ResultAreaPropertiesExtend;
    /**
     * When true, the utility network elements are selected in the view when traces are completed.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-UtilityNetworkTrace.html#selectOnComplete)
     *
     * @default true
     */
    selectOnCompleteDisabled: boolean;
    /**
     * A list of global Ids of traces to select on load.
     *
     * @default []
     */
    selectedTraces: string[];
    /**
     * When true, a graphic layer is added to the view to highlight the utility network elements when traces are completed.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-UtilityNetworkTrace.html#showGraphicsOnComplete)
     *
     * @default true
     */
    showGraphicsOnCompleteDisabled: boolean;
    /**
     * Determines whether to show list of selection attributes.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-UtilityNetworkTrace.html#showSelectionAttributes)
     *
     * @default true
     */
    showSelectionAttributesDisabled: boolean;
    /**
     * The current state of the component.
     *
     * @default "ready"
     */
    readonly state: "ready" | "loading";
    checkCanTrace(): Promise<void>;
    confirmReset(): Promise<void>;
    /** Permanently destroy the component. */
    destroy(): Promise<void>;
    readonly arcgisAddFlag: TargetedEvent<this, __esri.UtilityNetworkTraceAddFlagEvent>;
    readonly arcgisAddFlagComplete: TargetedEvent<this, __esri.UtilityNetworkTraceAddFlagCompleteEvent>;
    readonly arcgisAddFlagError: TargetedEvent<this, __esri.UtilityNetworkTraceAddFlagErrorEvent>;
    readonly arcgisAddResultArea: TargetedEvent<this, __esri.UtilityNetworkTraceAddResultAreaEvent>;
    /** Emitted when the value of a property is changed. Use this to listen to changes to properties. */
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state";
    }>;
    /** Emitted when the component associated with a map or scene view is is ready to be interacted with. */
    readonly arcgisReady: TargetedEvent<this, void>;
    readonly arcgisRemoveResultArea: TargetedEvent<this, __esri.UtilityNetworkTraceRemoveResultAreaEvent>;
}
export {};
