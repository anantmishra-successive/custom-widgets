/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/lumina/controllers';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { PropertyValues } from 'lit';
import { useView } from '../../controllers/useView';
import { ArcgisReferenceElement } from '../../utils/component-utils';

type NavigationToggleState = "disabled" | "ready";
type NavigationMode = "pan" | "rotate";
type LayoutMode = "horizontal" | "vertical";
/**
 * The Navigation Toggle component can be used to control the navigation mode of a Scene component.
 *
 * When the navigation mode is set to "pan" (default), the mouse drag gesture pans the view and right-click + drag allows the user
 * to rotate the view. When the navigation mode is set to "rotate", the mouse drag gesture rotates the view and
 * right-click + drag pans the view.
 *
 * **Known limitations**
 *
 * Navigation Toggle is only supported in a 3D [Scene](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-scene/) component.
 *
 * [Read more...](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-navigation-toggle/)
 */
export declare class ArcgisNavigationToggle extends LitElement {
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     *
     * @see [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/)
     */
    icon?: HTMLCalciteIconElement["icon"];
    /** The component's default label. */
    label?: string;
    /**
     * The layout direction of the component.
     *
     * @default "vertical"
     */
    layout: LayoutMode;
    /**
     * Replace localized message strings with your own strings.
     *
     * _**Note**: Individual message keys may change between releases._
     */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * The navigation mode of the view. The possible values:
     *
     * * `pan` - The mouse drag gesture pans the view. Right-click + drag allows the user to perform a 3D rotate around the center of the view.
     * * `rotate` - The mouse drag gesture performs a 3D rotate around the center of the view and the right-click + drag gesture pans the view.
     *
     * @default "pan"
     */
    navigationMode: NavigationMode;
    /** @default "top-left" */
    position: __esri.UIPosition;
    /**
     * By assigning the `id` attribute of the Map or Scene component to this property, you can position a child component anywhere in the DOM while still maintaining a connection to the Map or Scene.
     *
     * @see [Associate components with a Map or Scene component](https://developers.arcgis.com/javascript/latest/programming-patterns/#associate-components-with-a-map-or-scene-component)
     */
    referenceElement?: ArcgisReferenceElement | string;
    /** The current state of the component. */
    get state(): NavigationToggleState;
    toggle(): Promise<void>;
    /** Emitted when the value of a property is changed. Use this to listen to changes to properties. */
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "layout";
    }>;
    /** Emitted when the component associated with a map or scene view is is ready to be interacted with. */
    readonly arcgisReady: TargetedEvent<this, void>;
    private _messages: Partial<{
        componentLabel: string;
        pan: string;
        rotate: string;
    }> & import('@arcgis/lumina/controllers').T9nMeta<{
        componentLabel: string;
        pan: string;
        rotate: string;
    }>;
}
export {};
