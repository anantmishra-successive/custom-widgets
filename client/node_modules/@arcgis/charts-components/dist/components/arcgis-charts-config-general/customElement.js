import { c as r } from "../../chunks/runtime.js";
import { p as o, h as n, j as c } from "../../chunks/type-guards.js";
import { WebChartLegendPositions as l } from "@arcgis/charts-spec";
import { isEmpty as m } from "lodash-es";
import { m as g, c as d } from "../../chunks/chart-ui-utils2.js";
import { u as b } from "../../chunks/useT9n.js";
import { html as a } from "lit";
import { createRef as p, ref as u } from "lit-html/directives/ref.js";
import { LitElement as x, safeClassMap as i } from "@arcgis/lumina";
import { css as f } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const s = {
  textInput: "text-input",
  label: "label",
  labelContainer: "label-container",
  select: "select"
}, $ = f`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}:host{display:flex;flex-direction:column;margin-top:var(--arcgis-charts-top-section-margin)}.text-input,.select{margin-bottom:var(--arcgis-charts-inter-section-margin)}.label{display:flex;justify-content:space-between}.label-container{display:flex;flex-direction:column;margin-left:var(--arcgis-charts-config-margin-minor);margin-right:var(--arcgis-charts-config-margin-minor);margin-bottom:var(--arcgis-charts-config-margin-minor);justify-content:space-between}`;
class C extends x {
  constructor() {
    super(...arguments), this._messages = b(), this.characterLimitInputElement = p(), this.onModelConfigChange = () => {
      this.requestUpdate();
    }, this.isChartTitleInvalid = !1, this.open = !1;
  }
  static {
    this.properties = { isChartTitleInvalid: 16, messageOverrides: 0, model: 0, open: 7 };
  }
  static {
    this.styles = $;
  }
  load() {
    this.modelChange(this.model);
  }
  willUpdate(e) {
    e.has("model") && this.modelChange(this.model, e.get("model"));
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.model.removeEventListener("arcgisChartsModelConfigChange", this.onModelConfigChange);
  }
  modelChange(e, t) {
    t?.removeEventListener("arcgisChartsModelConfigChange", this.onModelConfigChange), e?.addEventListener("arcgisChartsModelConfigChange", this.onModelConfigChange);
  }
  setChartTitle(e) {
    const { value: t } = e.target;
    this.isChartTitleInvalid = m(t.trim()), this.characterLimitInputElement.value && g({
      inputElement: this.characterLimitInputElement.value,
      status: this.isChartTitleInvalid ? d.INVALID : d.IDLE
    }), this.isChartTitleInvalid || this.model.setTitleText(t);
  }
  setChartLegendTitle(e) {
    const { value: t } = e.target;
    t !== void 0 && o(this.model) && this.model.setLegendTitleText(t);
  }
  setChartXAxisTitle(e) {
    const { value: t } = e.target;
    t !== void 0 && n(this.model) && this.model.setXAxisTitleText(t);
  }
  setChartYAxisTitle(e) {
    const { value: t } = e.target;
    t !== void 0 && c(this.model) && this.model.setYAxisTitleText(t);
  }
  setChartDescription(e) {
    const { value: t } = e.target;
    t !== void 0 && this.model.setDescriptionText(t);
  }
  enableChartTitle(e) {
    const t = e.target.checked;
    this.model.setChartTitleVisibility(t);
  }
  enableXAxisTitle(e) {
    const t = e.target.checked;
    n(this.model) && this.model.setXAxisTitleVisibility(t);
  }
  enableYAxisTitle(e) {
    const t = e.target.checked;
    c(this.model) && this.model.setYAxisTitleVisibility(t);
  }
  enableLegendTitle(e) {
    const t = e.target.checked;
    o(this.model) && this.model.setLegendTitleVisibility(t);
  }
  enableDescription(e) {
    const t = e.target.checked;
    this.model.setDescriptionVisibility(t);
  }
  legendPositionChange(e) {
    const h = e.target?.selectedItems[0]?.value;
    o(this.model) && this.model.setLegendPosition(h);
  }
  renderLegendPositions() {
    return o(this.model) ? [
      a`<calcite-combobox-item .value=${l.Right} .textLabel=${this._messages.legendRightPosition} .selected=${this.model.getLegendPosition() === l.Right} icon=right-edge></calcite-combobox-item>`,
      a`<calcite-combobox-item .value=${l.Left} .textLabel=${this._messages.legendLeftPosition} .selected=${this.model.getLegendPosition() === l.Left} icon=left-edge></calcite-combobox-item>`,
      a`<calcite-combobox-item .value=${l.Top} .textLabel=${this._messages.legendTopPosition} .selected=${this.model.getLegendPosition() === l.Top} icon=upload-to></calcite-combobox-item>`,
      a`<calcite-combobox-item .value=${l.Bottom} .textLabel=${this._messages.legendBottomPosition} .selected=${this.model.getLegendPosition() === l.Bottom} icon=download-to></calcite-combobox-item>`
    ] : [];
  }
  render() {
    return a`<div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.chartTitle}<calcite-switch .checked=${this.model.getChartTitleVisibility()} @calciteSwitchChange=${this.enableChartTitle}></calcite-switch></calcite-label><calcite-input class=${i(s.textInput)} type=text .disabled=${!this.model.getChartTitleVisibility()} .value=${this.model.getTitleText()} @calciteInputInput=${this.setChartTitle} ${u(this.characterLimitInputElement)}></calcite-input><arcgis-charts-config-invalid-input-message .invalidInputMessage=${this._messages.emptyChartTitle} .isInvalid=${this.isChartTitleInvalid}></arcgis-charts-config-invalid-input-message></div>${n(this.model) ? [
      a`<div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.xAxisTitle}<calcite-switch .checked=${this.model.getXAxisTitleVisibility()} @calciteSwitchChange=${this.enableXAxisTitle}></calcite-switch></calcite-label><calcite-input class=${i(s.textInput)} type=text .disabled=${!this.model.getXAxisTitleVisibility()} .value=${this.model.getXAxisTitleText()} @calciteInputInput=${this.setChartXAxisTitle}></calcite-input></div>`,
      c(this.model) ? a`<div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.yAxisTitle}<calcite-switch .checked=${this.model.getYAxisTitleVisibility()} @calciteSwitchChange=${this.enableYAxisTitle}></calcite-switch></calcite-label><calcite-input class=${i(s.textInput)} tabindex=1 type=text .disabled=${!this.model.getYAxisTitleVisibility()} .value=${this.model.getYAxisTitleText()} @calciteInputInput=${this.setChartYAxisTitle}></calcite-input></div>` : null
    ] : null}${o(this.model) ? a`<div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.legendTitle}<calcite-switch .checked=${this.model.getLegendTitleVisibility()} @calciteSwitchChange=${this.enableLegendTitle}></calcite-switch></calcite-label><calcite-input class=${i(s.textInput)} type=text .disabled=${!this.model.getLegendTitleVisibility()} .value=${this.model.getLegendTitleText()} @calciteInputInput=${this.setChartLegendTitle}></calcite-input></div>` : null}<div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.legendPosition}</calcite-label><calcite-combobox clear-disabled label class=${i(s.select)} @calciteComboboxChange=${this.legendPositionChange} selection-mode=single>${this.renderLegendPositions()}</calcite-combobox></div><div class=${i(s.labelContainer)}><calcite-label layout=inline-space-between class=${i(s.label)}>${this._messages.description}<calcite-switch .checked=${this.model.getDescriptionVisibility()} @calciteSwitchChange=${this.enableDescription}></calcite-switch></calcite-label><calcite-text-area .disabled=${!this.model.getDescriptionVisibility()} .value=${this.model.getDescriptionText()} @calciteTextAreaInput=${this.setChartDescription}></calcite-text-area></div>`;
  }
}
r("arcgis-charts-config-general", C);
export {
  C as ArcgisChartsConfigGeneral
};
