/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisArcadeEditor } from '../arcgis-arcade-editor/customElement.js';
import { ResponseDisplayCard } from './functional';
import { HistoryItem, FeedbackState, Context } from './types';
import { PropertyValues } from 'lit';

/**
 * Arcade Assistant component for AI-powered Arcade code generation.
 *
 * @private
 */
export declare class ArcgisArcadeCodingAssistant extends LitElement {
    closePanel?: (e: Event) => void;
    insertText?: (text: string) => void;
    /** @default "" */
    helpBase?: string;
    /**
     * Whether ai assistants are enabled in the organization's settings.
     *
     * @default false
     */
    assistantsEnabled: boolean;
    layer: __esri.CatalogFootprintLayer | __esri.CSVLayer | __esri.FeatureLayer | __esri.GeoJSONLayer | __esri.OGCFeatureLayer | __esri.OrientedImageryLayer | __esri.SceneLayer | __esri.Sublayer | __esri.SubtypeSublayer | __esri.VoxelLayer | __esri.WFSLayer;
    portalUrl: string;
    serviceUrl: string;
    /** @default false */
    closed: boolean;
    editorRef: ArcgisArcadeEditor;
    feedbackServiceUrl?: string;
    appVersion?: string;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
}
