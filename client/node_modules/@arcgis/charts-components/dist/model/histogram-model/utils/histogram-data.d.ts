import { HistogramOverlays, ISimpleFillSymbol, ISimpleLineSymbol, WebChartDataTransformations } from '@arcgis/charts-spec';
import { HistogramConfig } from '../../../utils';
import { LayerInfo } from '../../interfaces/common';
/**
 * Gets the numeric field from the config
 * @param config The histogram config
 */
export declare const getNumericField: (config: HistogramConfig) => string;
/**
 * Sets the numeric field in the config
 * @param numericField The numeric field
 * @param config The histogram config
 */
export declare const setNumericField: (numericField: string, config: HistogramConfig, layerInfo: LayerInfo) => Promise<void>;
/**
 * Gets the data transformation type from the config
 * @param config The histogram config
 */
export declare const getDataTransformationType: (config: HistogramConfig) => WebChartDataTransformations;
/**
 * Sets the data transformation type in the config
 * @param dataTransformationType The data transformation type
 * @param config The histogram config
 */
export declare const setDataTransformationType: (dataTransformationType: WebChartDataTransformations, config: HistogramConfig) => void;
/**
 * Gets the bin count from the config
 * @param config the histogram config
 * @returns the bin count
 */
export declare const getBinCount: (config: HistogramConfig) => number;
/**
 * Sets the bin count in the config
 * @param binCount The bin count
 * @param config The histogram config
 */
export declare const setBinCount: (binCount: number, config: HistogramConfig) => void;
/**
 * Gets the bin symbol from the config
 * @param config The histogram config
 */
export declare const getBinSymbol: (config: HistogramConfig) => ISimpleFillSymbol;
/**
 * Sets the bin symbol in the config
 * @param symbol The bin symbol
 * @param config The histogram config
 */
export declare const setBinSymbol: (symbol: ISimpleFillSymbol, config: HistogramConfig) => void;
/**
 * Gets the normal distribution symbol from the config
 * @param config The histogram config
 */
export declare const getNormalDistSymbol: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * Sets the normal distribution symbol in the config
 * @param symbol The normal distribution symbol
 * @param config The histogram config
 */
export declare const setNormalDistSymbol: (symbol: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * Gets the mean symbol from the config
 * @param config The histogram config
 */
export declare const getMeanSymbol: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * Sets the mean symbol in the config
 * @param symbol The mean symbol
 * @param config The histogram config
 */
export declare const setMeanSymbol: (symbol: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * Gets the median symbol from the config
 * @param config The histogram config
 */
export declare const getMedianSymbol: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * Sets the median symbol in the config
 * @param symbol The median symbol
 * @param config The histogram config
 */
export declare const setMedianSymbol: (symbol: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * Gets the standard deviation symbol from the config
 * @param config The histogram config
 */
export declare const getStandardDevSymbol: (config: HistogramConfig) => ISimpleLineSymbol;
/**
 * Sets the standard deviation symbol in the config
 * @param symbol The standard deviation symbol
 * @param config The histogram config
 */
export declare const setStandardDevSymbol: (symbol: ISimpleLineSymbol, config: HistogramConfig) => void;
/**
 * Gets the show normal distribution overlay setting from the config
 * @param config The histogram config
 */
export declare const getShowNormalDistOverlay: (config: HistogramConfig) => boolean;
/**
 * Sets the show normal distribution overlay in the config
 * @param show Wheter to show the normal distribution overlay
 * @param config The histogram config
 */
export declare const setShowNormalDistOverlay: (show: boolean, config: HistogramConfig) => void;
/**
 * Gets the show mean overlay setting from the config
 * @param config The histogram config
 */
export declare const getShowMeanOverlay: (config: HistogramConfig) => boolean;
/**
 * Sets the show mean overlay in the config
 * @param show Whether to show the mean overlay
 * @param config The histogram config
 */
export declare const setShowMeanOverlay: (show: boolean, config: HistogramConfig) => void;
/**
 * Gets the show median overlay setting from the config
 * @param config The histogram config
 */
export declare const getShowMedianOverlay: (config: HistogramConfig) => boolean;
/**
 * Sets the show median overlay in the config
 * @param show Whether to show the median overlay
 * @param config The histogram config
 */
export declare const setShowMedianOverlay: (show: boolean, config: HistogramConfig) => void;
/**
 * Gets the show standard deviation overlay setting from the config
 * @param config The histogram config
 */
export declare const getShowStandardDevOverlay: (config: HistogramConfig) => boolean;
/**
 * Sets the show standard deviation overlay in the config
 * @param show Whether to show standard deviation overlay
 * @param config The histogram config
 */
export declare const setShowStandardDevOverlay: (show: boolean, config: HistogramConfig) => void;
/**
 * Gets the chart overlays for the series. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**.
 * @param config The histogram config
 */
export declare const getSeriesOverlays: (config: HistogramConfig) => HistogramOverlays | undefined;
/**
 * Sets the chart overlays for the series. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**.
 * @param overlays The overlays
 * @param config The histogram config
 */
export declare const setSeriesOverlays: (overlays: HistogramOverlays, config: HistogramConfig) => void;
