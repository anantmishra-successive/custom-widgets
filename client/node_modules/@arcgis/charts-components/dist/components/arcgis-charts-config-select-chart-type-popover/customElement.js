import { c as l } from "../../chunks/runtime.js";
import { html as a } from "lit-html";
import "@arcgis/charts-spec";
import "lodash-es";
import "d3-array";
import "../../chunks/interfaces.js";
import "@arcgis/core/geometry/support/jsonUtils.js";
import "@arcgis/core/rest/support/AttributeBinsQuery.js";
import "@arcgis/core/rest/support/Query.js";
import "@arcgis/core/rest/support/StatisticDefinition.js";
import "@arcgis/core/time/TimeExtent.js";
import "@arcgis/core/core/promiseUtils.js";
import "@arcgis/core/request.js";
import { e as c } from "../../chunks/popover-ui-utils.js";
import { U as r } from "../../chunks/chart-ui-utils2.js";
import { u as p } from "../../chunks/useT9n.js";
import { createRef as n, ref as h } from "lit-html/directives/ref.js";
import { LitElement as m, createEvent as o, safeClassMap as s } from "@arcgis/lumina";
import { css as d } from "@lit/reactive-element/css-tag.js";
import { M as e } from "../../chunks/common.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const i = {
  selectChartComponent: "select-chart-component",
  jsAppFlyout: "js-app-flyout",
  panel: "panel"
}, g = d`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}.select-chart-component{width:var(--arcgis-charts-config-panel-width);height:var(--arcgis-charts-config-panel-height)}calcite-block{width:var(--arcgis-charts-config-calcite-block-default-width);height:var(--arcgis-charts-config-calcite-block-default-height);margin:var(--arcgis-charts-config-calcite-block-default-margin)}.label{display:flex;margin-left:1rem;margin-bottom:.5rem;justify-content:space-between}.header{margin:0}.panel{max-height:60vh}`;
class f extends m {
  constructor() {
    super(...arguments), this._messages = p(), this.selectChartTypePopover = n(), this.arcgisChartsConfigPopoverClose = o(), this.arcgisChartsConfigSelectChartTypeChange = o();
  }
  static {
    this.properties = { messageOverrides: 0, headerTitle: 3, layerId: 3, open: 7, popoverReferenceElement: 0, popoverPlacement: 3, selectedModelType: 3 };
  }
  static {
    this.styles = g;
  }
  async reposition() {
    await this.selectChartTypePopover.value?.reposition();
  }
  updated() {
    c(this.selectChartTypePopover.value, this.open), this.hasUpdated || setTimeout(() => {
      this.selectChartTypePopover.value?.reposition();
    }, r.PopoverTimer);
  }
  buildChartTypesList() {
    return a`<calcite-list label @click=${this.onChartTypeClick}><calcite-list-item .label=${this._messages.barChart} .value=${e.BarChart} .selected=${this.selectedModelType === e.BarChart}><calcite-icon slot=content-start icon=graph-bar></calcite-icon></calcite-list-item><calcite-list-item .label=${this._messages.lineChart} .value=${e.LineChart} .selected=${this.selectedModelType === e.LineChart}><calcite-icon slot=content-start icon=graph-time-series></calcite-icon></calcite-list-item><calcite-list-item .label=${this._messages.pieChart} .value=${e.PieChart} .selected=${this.selectedModelType === e.PieChart}><calcite-icon slot=content-start icon=pie-chart></calcite-icon></calcite-list-item><calcite-list-item .label=${this._messages.histogram} .value=${e.Histogram} .selected=${this.selectedModelType === e.Histogram}><calcite-icon slot=content-start icon=graph-histogram></calcite-icon></calcite-list-item><calcite-list-item .label=${this._messages.scatterplot} .value=${e.Scatterplot} .selected=${this.selectedModelType === e.Scatterplot}><calcite-icon slot=content-start icon=graph-scatter-plot></calcite-icon></calcite-list-item><calcite-list-item .label=${this._messages.boxPlot} .value=${e.BoxPlot} .selected=${this.selectedModelType === e.BoxPlot}><calcite-icon slot=content-start icon=box-chart></calcite-icon></calcite-list-item></calcite-list>`;
  }
  onChartTypeClick(t) {
    t.target?.localName === "calcite-list-item" ? this.selectedModelType = t.target?.value : this.selectedModelType = t.target?.parentNode?.value, this.arcgisChartsConfigSelectChartTypeChange.emit();
  }
  popoverOpen() {
    setTimeout(async () => await this.selectChartTypePopover.value?.setFocus(), 250);
  }
  popoverClose() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit(), setTimeout(async () => await this.popoverReferenceElement?.setFocus(), 250);
  }
  render() {
    return a`<div class=${s({
      [i.selectChartComponent]: !0,
      [i.jsAppFlyout]: !0
    })}><calcite-popover .referenceElement=${this.popoverReferenceElement ?? document.body} .placement=${this.popoverPlacement} .flipPlacements=${["top", "bottom"]} @calcitePopoverOpen=${this.popoverOpen} @calcitePopoverClose=${this.popoverClose} .open=${this.open} label ${h(this.selectChartTypePopover)}><calcite-panel class=${s(i.panel)} .heading=${this.headerTitle ?? this._messages.chooseChartType} closable @calcitePanelClose=${this.popoverClose} .closed=${!this.open}>${this.buildChartTypesList()}</calcite-panel></calcite-popover></div>`;
  }
}
l("arcgis-charts-config-select-chart-type-popover", f);
export {
  f as ArcgisChartsConfigSelectChartTypePopover
};
