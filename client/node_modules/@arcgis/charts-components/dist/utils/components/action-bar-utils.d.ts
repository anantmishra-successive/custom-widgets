import { WebChart } from '@arcgis/charts-spec';
import { ArcgisChart } from '../../components/arcgis-chart/customElement.js';
import { ArcgisChartsActionBar } from '../../components/arcgis-charts-action-bar/customElement.js';
import { ChartTypes, DefaultChartActions } from '../../utils';
/**
 * Returns the default actions for a given chart type
 *
 * @param {ChartTypes} chartType The chart type for which to get the default actions
 * @returns {DefaultChartActions[]} The default actions for the given chart type
 */
export declare function getDefaultChartActions(chartType: ChartTypes | undefined): DefaultChartActions[];
/**
 * Creates a new tooltip object and adds it to the DOM
 *
 * @param innerHTML HTML to be displayed inside tooltip
 * @param referenceElement Element for which the tooltip will be shown
 * @returns The tooltip object that was created
 */
export declare function createTooltip(innerHTML: string, referenceElement?: HTMLElement): HTMLCalciteTooltipElement;
/**
 * Destroys tooltip by removing it from the DOM
 *
 * @param tooltip The tooltip to be destroyed
 * @returns Null return for caller to easily reset tooltip object to null
 */
export declare function destroyTooltip(tooltip: HTMLCalciteTooltipElement | null): null;
/**
 * Event handler for action bar slot change.
 *
 * @param e
 * @param layer
 */
export declare const onActionBarSlotChange: (e: Event, chartComponent: HTMLArcgisChartElement, config?: WebChart) => HTMLArcgisChartsActionBarElement | undefined;
/**
 * Updates the action bar states based on the properties of the chart component and the config object.
 *
 * @param actionBar
 * @param chartComponent
 * @param config
 */
export declare function updateActionBarStates(actionBar: HTMLArcgisChartsActionBarElement, chartComponent: HTMLArcgisChartElement, config?: WebChart): void;
