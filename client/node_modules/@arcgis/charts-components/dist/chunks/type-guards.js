import { WebChartTypes as i } from "@arcgis/charts-spec";
import { M as t } from "./common.js";
import { g as a } from "./series-types.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
function s(e) {
  switch (e) {
    case i.BarSeries:
      return t.BarChart;
    case i.LineSeries:
      return t.LineChart;
    case i.ComboLineAndBarSeries:
      return t.ComboBarLineChart;
    case i.BoxPlotSeries:
      return t.BoxPlot;
    case i.PieSeries:
      return t.PieChart;
    case i.ScatterSeries:
      return t.Scatterplot;
    case i.HistogramSeries:
      return t.Histogram;
    case i.GaugeSeries:
      return t.Gauge;
    case i.RadarSeries:
      return t.RadarChart;
    default:
      return;
  }
}
function d(e) {
  const r = a(e.series);
  return s(r);
}
function h(e, r) {
  const n = s(e?.getChartType());
  return e !== void 0 && n === r;
}
function g(e) {
  return e !== void 0 && "getConfig" in e;
}
function p(e) {
  return e !== void 0 && e.getChartType() === i.BarSeries;
}
function S(e) {
  return e !== void 0 && e.getChartType() === i.LineSeries;
}
function T(e) {
  return e !== void 0 && (e.getChartType() === i.LineSeries || e.getChartType() === i.BarSeries || e.getChartType() === i.ComboLineAndBarSeries || e.getChartType() === i.RadarSeries);
}
function C(e) {
  return e !== void 0 && e.getChartType() === i.PieSeries;
}
function y(e) {
  return e !== void 0 && e.getChartType() === i.BoxPlotSeries;
}
function f(e) {
  return e !== void 0 && e.getChartType() === i.ScatterSeries;
}
function l(e) {
  return e !== void 0 && e.getChartType() === i.HistogramSeries;
}
function M(e) {
  return e !== void 0 && "getXAxisTitleText" in e;
}
function v(e) {
  const r = [
    i.BarSeries,
    i.BoxPlotSeries,
    i.HistogramSeries,
    i.ScatterSeries,
    i.LineSeries,
    i.ComboLineAndBarSeries
  ];
  return e !== void 0 && r.includes(e.getChartType()) && "getYAxisTitleText" in e;
}
function B(e) {
  return e !== void 0 && "getRotatedState" in e;
}
function x(e) {
  return e !== void 0 && "getDataLabelsVisibility" in e;
}
function L(e) {
  return e !== void 0 && "getGuideVisibility" in e;
}
function b(e) {
  return e !== void 0 && "addXAxisGuide" in e;
}
function W(e) {
  return e !== void 0 && "addYAxisGuide" in e;
}
function A(e) {
  return e !== void 0 && "getLegendVisibility" in e;
}
function P(e) {
  return e !== void 0 && "getTemporalBinningSize" in e;
}
function G(e, r) {
  const n = s(e?.getChartType());
  return e !== void 0 && n === r;
}
export {
  p as a,
  S as b,
  T as c,
  C as d,
  y as e,
  f,
  l as g,
  M as h,
  g as i,
  v as j,
  B as k,
  x as l,
  L as m,
  b as n,
  W as o,
  A as p,
  P as q,
  G as r,
  d as s,
  h as t,
  s as u
};
