import { c as p } from "../../chunks/runtime.js";
import { html as l } from "lit-html";
import { RESTSymbolType as m, RESTSimpleLineSymbolStyle as t } from "@arcgis/charts-spec";
import { b as u, m as a, s as g, c } from "../../chunks/chart-ui-utils2.js";
import { u as y } from "../../chunks/useT9n.js";
import { createRef as r, ref as d } from "lit-html/directives/ref.js";
import { LitElement as f, createEvent as h, safeClassMap as s, nothing as n } from "@arcgis/lumina";
import { css as S } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const o = {
  sizeSection: "size-section",
  dropdownText: "dropdown-text",
  colorPickerContainer: "color-picker-container"
}, w = S`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}:host{overflow-y:auto}:host arcgis-charts-config-colors{padding:var(--arcgis-charts-panel-padding);padding-bottom:1rem}:host .size-section{padding:1rem;display:flex}:host .size-section calcite-label{flex:1 1 0px;width:0}:host .size-section calcite-label .dropdown-text{max-width:75px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;cursor:pointer}:host .color-picker-container{display:flex}:host .color-picker-container calcite-label{flex:1 1 0px;width:0}:host .color-picker-container calcite-label .dropdown-text{max-width:75px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;cursor:pointer}`;
class b extends f {
  constructor() {
    super(...arguments), this._messages = y(), this.lineWidthInputElement = r(), this.lineStyleDropdownElement = r(), this.lineStyle = {
      type: m.SLS
    }, this.arcgisChartsConfigLineStyleChange = h(), this.arcgisChartsConfigLineStyleClose = h();
  }
  static {
    this.properties = { messageOverrides: 0, lineStyle: 2, header: 1, open: 7, enableClose: 7, usePanel: 7 };
  }
  static {
    this.styles = w;
  }
  closePanel(e) {
    e.target.closed && this.enableClose === !0 && (this.open = !1, this.arcgisChartsConfigLineStyleClose.emit());
  }
  colorChange(e) {
    this.lineStyle.color = e.detail, this.emitLineStyleEvent();
  }
  lineStyleChange() {
    const e = this.lineStyleDropdownElement.value?.selectedItems[0].accessKey;
    this.lineStyle.style !== e && (this.lineStyle.style = e, this.lineStyle = { ...this.lineStyle }, this.emitLineStyleEvent());
  }
  selectedLineStyle() {
    let e, i;
    switch (this.lineStyle?.style) {
      case t.Dot:
        e = "line-dotted", i = this._messages.dot ?? "";
        break;
      case t.Dash:
        e = "line-dashed", i = this._messages.dash ?? "";
        break;
      case t.Solid:
      default:
        e = "line-solid", i = this._messages.solid ?? "";
        break;
    }
    return { icon: e, style: i };
  }
  widthChange() {
    const e = this.lineWidthInputElement.value?.value;
    e !== void 0 && u(e, this.lineWidthInputElement.value?.min, this.lineWidthInputElement.value?.max) ? (this.lineStyle.width = Number.parseInt(e), this.emitLineStyleEvent(), this.lineWidthInputElement.value && a({
      inputElement: this.lineWidthInputElement.value,
      status: c.IDLE
    })) : this.lineWidthInputElement.value && a({
      inputElement: this.lineWidthInputElement.value,
      status: c.INVALID
    });
  }
  emitLineStyleEvent() {
    Number.isNaN(Number.parseInt(this.lineStyle?.color?.[0]?.toString() ?? "")) && (this.lineStyle.color = void 0), this.arcgisChartsConfigLineStyleChange.emit(this.lineStyle);
  }
  render() {
    const e = [
      l`<div class=${s(o.sizeSection)}><calcite-label>${this._messages.style}<calcite-dropdown @calciteDropdownSelect=${this.lineStyleChange} ${d(this.lineStyleDropdownElement)}><calcite-button .iconEnd=${this.selectedLineStyle().icon} slot=trigger kind=neutral appearance=outline-fill scale=m><label class=${s(o.dropdownText)}>${this.selectedLineStyle().style}</label></calcite-button><calcite-dropdown-group><calcite-dropdown-item icon-end=line-solid .selected=${this.lineStyle?.style === t.Solid} accesskey=${t.Solid ?? n}>${this._messages.solid}</calcite-dropdown-item><calcite-dropdown-item icon-end=line-dotted .selected=${this.lineStyle?.style === t.Dot} accesskey=${t.Dot ?? n}>${this._messages.dot}</calcite-dropdown-item><calcite-dropdown-item icon-end=line-dashed .selected=${this.lineStyle?.style === t.Dash} accesskey=${t.Dash ?? n}>${this._messages.dash}</calcite-dropdown-item></calcite-dropdown-group></calcite-dropdown></calcite-label><calcite-label>${this._messages.width}<calcite-input type=number min=1 step=any .value=${g(this.lineStyle?.width)} @calciteInputInput=${this.widthChange} ${d(this.lineWidthInputElement)}></calcite-input></calcite-label></div>`,
      l`<div class=${s(o.colorPickerContainer)}><arcgis-charts-config-colors .rgba=${this.lineStyle?.color ?? void 0} @colorSelect=${this.colorChange}></arcgis-charts-config-colors></div>`
    ];
    return this.usePanel !== !1 ? l`<calcite-panel .heading=${this.header ?? this._messages.header} .closed=${this.open === !1} .closable=${this.enableClose} @calcitePanelClose=${this.closePanel}>${e}</calcite-panel>` : e;
  }
}
p("arcgis-charts-config-line-style", b);
export {
  b as ArcgisChartsConfigLineStyle
};
