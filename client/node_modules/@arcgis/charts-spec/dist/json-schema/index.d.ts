export namespace WebChartJSONSchemas {
    let $schema: string;
    let definitions: {
        ValueConversion: {
            type: string;
            properties: {
                factor: {
                    type: string;
                    description: string;
                };
                offset: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        WebChartAxisScrollBar: {
            type: string;
            properties: {
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                width: {
                    type: string;
                    description: string;
                };
                color: {
                    $ref: string;
                    description: string;
                };
                gripSize: {
                    type: string;
                    description: string;
                };
                margin: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        Color: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            title: string;
        };
        WebChartTextSymbol: {
            type: string;
            properties: {
                xoffset: {
                    type: string[];
                    description: string;
                };
                yoffset: {
                    type: string[];
                    description: string;
                };
                angle: {
                    type: string;
                    description: string;
                };
                style: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                };
                color: {
                    $ref: string;
                };
                backgroundColor: {
                    $ref: string;
                };
                borderLineSize: {
                    type: string;
                };
                borderLineColor: {
                    $ref: string;
                };
                haloSize: {
                    type: string;
                };
                haloColor: {
                    $ref: string;
                };
                verticalAlignment: {
                    type: string;
                    enum: string[];
                };
                horizontalAlignment: {
                    type: string;
                    enum: string[];
                };
                rightToLeft: {
                    type: string;
                };
                kerning: {
                    type: string;
                };
                font: {
                    $ref: string;
                };
                text: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Omit<ITextSymbol,(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>": {
            $ref: string;
            title: string;
        };
        "Pick<ITextSymbol,Exclude<(\"type\"|\"color\"|\"backgroundColor\"|\"borderLineSize\"|\"borderLineColor\"|\"haloSize\"|\"haloColor\"|\"verticalAlignment\"|\"horizontalAlignment\"|\"rightToLeft\"|\"kerning\"|\"font\"|\"text\"|\"angle\"|\"xoffset\"|\"yoffset\"|\"style\"|string),(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>>": {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                color: {
                    $ref: string;
                };
                backgroundColor: {
                    $ref: string;
                };
                borderLineSize: {
                    type: string;
                };
                borderLineColor: {
                    $ref: string;
                };
                haloSize: {
                    type: string;
                };
                haloColor: {
                    $ref: string;
                };
                verticalAlignment: {
                    type: string;
                    enum: string[];
                };
                horizontalAlignment: {
                    type: string;
                    enum: string[];
                };
                rightToLeft: {
                    type: string;
                };
                kerning: {
                    type: string;
                };
                font: {
                    $ref: string;
                };
                text: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        IFont: {
            type: string;
            properties: {
                family: {
                    type: string;
                };
                size: {
                    type: string;
                };
                style: {
                    type: string;
                    enum: string[];
                };
                weight: {
                    type: string;
                    enum: string[];
                };
                decoration: {
                    type: string;
                    enum: string[];
                };
            };
            title: string;
        };
        WebChartText: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                content: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartCursorCrosshair: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                style: {
                    $ref: string;
                    description: string;
                };
                verticalLineVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                horizontalLineVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ISimpleLineSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    $ref: string;
                };
                color: {
                    $ref: string;
                };
                width: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        ISymbol: {
            type: string;
            properties: {
                type: {
                    $ref: string;
                };
                style: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        SymbolType: {
            type: string;
            enum: string[];
            title: string;
        };
        SimpleLineSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartLegend: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                body: {
                    $ref: string;
                    description: string;
                };
                position: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                maxHeight: {
                    type: string[];
                    description: string;
                    default: any;
                };
                roundMarkers: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartLegendPositions: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartPieChartLegend: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                body: {
                    $ref: string;
                    description: string;
                };
                position: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                maxHeight: {
                    type: string[];
                    description: string;
                    default: any;
                };
                roundMarkers: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayCategory: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayNumericValue: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayPercentage: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                labelMaxWidth: {
                    type: string;
                    description: string;
                    default: number;
                };
                valueLabelMaxWidth: {
                    type: string;
                    description: string;
                    default: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartOverlay: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                created: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                symbol: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        NumberFormatOptions: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                intlOptions: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Intl.NumberFormatOptions": {
            type: string;
            properties: {
                localeMatcher: {
                    type: string;
                    enum: string[];
                };
                style: {
                    $ref: string;
                };
                currency: {
                    type: string;
                };
                currencyDisplay: {
                    $ref: string;
                };
                useGrouping: {
                    $ref: string;
                };
                minimumIntegerDigits: {
                    type: string;
                };
                minimumFractionDigits: {
                    type: string;
                };
                maximumFractionDigits: {
                    type: string;
                };
                minimumSignificantDigits: {
                    type: string;
                };
                maximumSignificantDigits: {
                    type: string;
                };
            };
            title: string;
        };
        "Intl.NumberFormatOptionsStyle": {
            title: string;
        };
        "Intl.NumberFormatOptionsCurrencyDisplay": {
            title: string;
        };
        "Intl.NumberFormatOptionsUseGrouping": {
            type: string;
            title: string;
        };
        WebChartDateTimeUnitFormatOptions: {
            type: string;
            properties: {
                year: {
                    $ref: string;
                };
                month: {
                    $ref: string;
                };
                day: {
                    $ref: string;
                };
                hour: {
                    $ref: string;
                };
                minute: {
                    $ref: string;
                };
                second: {
                    $ref: string;
                };
            };
            description: string;
            title: string;
        };
        "Intl.DateTimeFormatOptions": {
            type: string;
            properties: {
                localeMatcher: {
                    type: string;
                    enum: string[];
                };
                weekday: {
                    type: string;
                    enum: string[];
                };
                era: {
                    type: string;
                    enum: string[];
                };
                year: {
                    type: string;
                    enum: string[];
                };
                month: {
                    type: string;
                    enum: string[];
                };
                day: {
                    type: string;
                    enum: string[];
                };
                hour: {
                    type: string;
                    enum: string[];
                };
                minute: {
                    type: string;
                    enum: string[];
                };
                second: {
                    type: string;
                    enum: string[];
                };
                timeZoneName: {
                    type: string;
                    enum: string[];
                };
                formatMatcher: {
                    type: string;
                    enum: string[];
                };
                hour12: {
                    type: string;
                };
                timeZone: {
                    type: string;
                };
            };
            title: string;
        };
        DateTimeFormatOptions: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                intlOptions: {
                    $ref: string;
                    description: string;
                };
                formatPerDateTimeUnit: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        CategoryFormatOptions: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                characterLimit: {
                    type: string[];
                    description: string;
                    minimum: number;
                    multipleOf: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartGuide: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                start: {
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    description: string;
                };
                end: {
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    description: string;
                };
                style: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                label: {
                    $ref: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                above: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                tooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ISimpleFillSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    $ref: string;
                };
                color: {
                    $ref: string;
                };
                outline: {
                    $ref: string;
                };
            };
            required: string[];
            title: string;
        };
        SimpleFillSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartAxis: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                isLogarithmic: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                valueFormat: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                minimum: {
                    type: string[];
                    description: string;
                };
                maximum: {
                    type: string[];
                    description: string;
                };
                grid: {
                    $ref: string;
                    description: string;
                };
                guides: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                };
                scrollbar: {
                    $ref: string;
                    description: string;
                };
                displayZeroLine: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                integerOnlyValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayCursorTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                buffer: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                tickSpacing: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                dateBaseInterval: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        TimeIntervalInfo: {
            type: string;
            properties: {
                unit: {
                    $ref: string;
                };
                size: {
                    type: string;
                };
            };
            title: string;
        };
        WebChartTemporalBinningUnits: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartGaugeAxisTick: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartNeedle: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                symbol: {
                    $ref: string;
                    description: string;
                };
                startWidth: {
                    type: string[];
                    description: string;
                    minimum: number;
                    default: number;
                };
                endWidth: {
                    type: string[];
                    description: string;
                    minimum: number;
                    default: number;
                };
                innerRadius: {
                    type: string[];
                    description: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                displayPin: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartGaugeAxis: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                isLogarithmic: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                valueFormat: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                minimum: {
                    type: string[];
                    description: string;
                };
                maximum: {
                    type: string[];
                    description: string;
                };
                grid: {
                    $ref: string;
                    description: string;
                };
                guides: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                };
                scrollbar: {
                    $ref: string;
                    description: string;
                };
                displayZeroLine: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                integerOnlyValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayCursorTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                buffer: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                tickSpacing: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                dateBaseInterval: {
                    $ref: string;
                    description: string;
                };
                innerLabel: {
                    $ref: string;
                    description: string;
                };
                needle: {
                    $ref: string;
                    description: string;
                };
                ticks: {
                    $ref: string;
                    description: string;
                };
                labelsIncrement: {
                    type: string;
                    description: string;
                    default: string;
                };
                onlyShowFirstAndLastLabels: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                minimumValueConversion: {
                    $ref: string;
                    description: string;
                };
                maximumValueConversion: {
                    $ref: string;
                    description: string;
                };
                minimumFromField: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
                maximumFromField: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IStatisticDefinition: {
            type: string;
            properties: {
                statisticType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                statisticParameters: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                        };
                        orderBy: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                    description: string;
                };
                onStatisticField: {
                    type: string;
                    description: string;
                };
                outStatisticFieldName: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        WebChartRadarChartAxis: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                isLogarithmic: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                valueFormat: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                minimum: {
                    type: string[];
                    description: string;
                };
                maximum: {
                    type: string[];
                    description: string;
                };
                grid: {
                    $ref: string;
                    description: string;
                };
                guides: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                labels: {
                    $ref: string;
                    description: string;
                };
                scrollbar: {
                    $ref: string;
                    description: string;
                };
                displayZeroLine: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                integerOnlyValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayCursorTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                buffer: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                tickSpacing: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                dateBaseInterval: {
                    $ref: string;
                    description: string;
                };
                labelsOrientation: {
                    $ref: string;
                    description: string;
                    default: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartRadarChartAxisLabelsOrientation: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartQuery: {
            type: string;
            properties: {
                outFields: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                where: {
                    type: string;
                    description: string;
                };
                groupByFieldsForStatistics: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                    maxItems: number;
                };
                outStatistics: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                orderByFields: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                gdbVersion: {
                    type: string;
                    description: string;
                };
                geometry: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                spatialRelationship: {
                    description: string;
                };
                distance: {
                    type: string;
                    description: string;
                };
                units: {
                    $ref: string;
                    description: string;
                };
                timeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                start: {
                    type: string;
                    description: string;
                };
                num: {
                    type: string;
                    description: string;
                };
                returnDistinctValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                fetchNullValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                objectIds: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IEnvelope: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                xmin: {
                    type: string;
                };
                xmax: {
                    type: string;
                };
                ymin: {
                    type: string;
                };
                ymax: {
                    type: string;
                };
                zmin: {
                    type: string;
                };
                zmax: {
                    type: string;
                };
                mmin: {
                    type: string;
                };
                mmax: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IGeometry: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
            };
            description: string;
            title: string;
        };
        ISpatialReference: {
            type: string;
            properties: {
                wkid: {
                    type: string[];
                };
                latestWkid: {
                    type: string;
                };
                vcsWkid: {
                    type: string;
                };
                latestVcsWkid: {
                    type: string;
                };
                wkt: {
                    type: string[];
                };
                latestWkt: {
                    type: string;
                };
            };
            description: string;
            title: string;
        };
        IExtent: {
            type: string;
            properties: {
                xmin: {
                    type: string;
                };
                ymin: {
                    type: string;
                };
                zmin: {
                    type: string;
                };
                xmax: {
                    type: string;
                };
                ymax: {
                    type: string;
                };
                zmax: {
                    type: string;
                };
                spatialReference: {
                    $ref: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IPoint: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                x: {
                    type: string;
                };
                y: {
                    type: string;
                };
                z: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IHasZM: {
            type: string;
            properties: {
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
            };
            description: string;
            title: string;
        };
        IPolygon: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                rings: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                };
            };
            required: string[];
            title: string;
        };
        Position: {
            anyOf: ({
                $ref: string;
                type?: undefined;
                items?: undefined;
                minItems?: undefined;
                maxItems?: undefined;
            } | {
                type: string;
                items: {
                    type: string;
                };
                minItems: number;
                maxItems: number;
                $ref?: undefined;
            })[];
            title: string;
        };
        Position2D: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            title: string;
        };
        IPolygonWithCurves: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                curveRings: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
            };
            required: string[];
            title: string;
        };
        JsonCurve: {
            anyOf: {
                $ref: string;
            }[];
            title: string;
        };
        IArc: {
            type: string;
            properties: {
                a: {
                    type: string;
                    minItems: number;
                    items: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    maxItems: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IBezierCurve: {
            type: string;
            properties: {
                b: {
                    type: string;
                    minItems: number;
                    items: {
                        $ref: string;
                    }[];
                    maxItems: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ICircularArc: {
            type: string;
            properties: {
                c: {
                    type: string;
                    minItems: number;
                    items: {
                        $ref: string;
                    }[];
                    maxItems: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IOldCircularArc: {
            type: string;
            properties: {
                a: {
                    type: string;
                    minItems: number;
                    items: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    maxItems: number;
                };
            };
            required: string[];
            title: string;
        };
        IPolyline: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                paths: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                };
            };
            required: string[];
            title: string;
        };
        RESTUnits: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartSeriesQuery: {
            $ref: string;
            description: string;
            title: string;
        };
        "Omit<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>": {
            $ref: string;
            title: string;
        };
        "Pick<WebChartQuery,Exclude<(\"outFields\"|\"where\"|\"groupByFieldsForStatistics\"|\"outStatistics\"|\"orderByFields\"|\"gdbVersion\"|\"geometry\"|\"spatialRelationship\"|\"distance\"|\"units\"|\"timeExtent\"|\"start\"|\"num\"|\"returnDistinctValues\"|\"fetchNullValues\"|\"objectIds\"|string),(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>>": {
            type: string;
            properties: {
                outFields: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                where: {
                    type: string;
                    description: string;
                };
                groupByFieldsForStatistics: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                    maxItems: number;
                };
                outStatistics: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                returnDistinctValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                fetchNullValues: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            title: string;
        };
        WebChartDataFilters: {
            $ref: string;
            description: string;
            title: string;
        };
        "Pick<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"objectIds\"|\"spatialRelationship\"|\"timeExtent\"|\"units\"|\"where\")>": {
            type: string;
            properties: {
                distance: {
                    type: string;
                    description: string;
                };
                gdbVersion: {
                    type: string;
                    description: string;
                };
                geometry: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                objectIds: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                spatialRelationship: {
                    description: string;
                };
                timeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                units: {
                    $ref: string;
                    description: string;
                };
                where: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        WebChartSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartFixedDateBinning: {
            type: string;
            properties: {
                size: {
                    type: string;
                    description: string;
                };
                trimIncompleteTimeInterval: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                timeAggregationType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                nullPolicy: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                type: {
                    type: string;
                    const: string;
                };
                unit: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartDateBinning: {
            type: string;
            properties: {
                size: {
                    type: string;
                    description: string;
                };
                trimIncompleteTimeInterval: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                timeAggregationType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                nullPolicy: {
                    $ref: string;
                    description: string;
                    default: string;
                };
            };
            title: string;
        };
        WebChartTimeAggregationTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartNullPolicyTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartFixedDateBinningUnits: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartCalendarBasedBinning: {
            type: string;
            properties: {
                size: {
                    type: string;
                    description: string;
                };
                trimIncompleteTimeInterval: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                timeAggregationType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                nullPolicy: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                type: {
                    type: string;
                    const: string;
                };
                unit: {
                    $ref: string;
                    description: string;
                };
                start: {
                    type: string;
                    description: string;
                };
                end: {
                    type: string;
                    description: string;
                };
                offset: {
                    type: string;
                    properties: {
                        unit: {
                            $ref: string;
                        };
                        size: {
                            type: string;
                        };
                    };
                    required: string[];
                    description: string;
                };
                outTimeZone: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartCalendarBinningUnits: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartCalendarBinningOffsetUnits: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartTemporalSeries: {
            type: string;
            properties: {
                binTemporalData: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                temporalBinning: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        WebChartBarChartSeries: {
            type: string;
            properties: {
                binTemporalData: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                temporalBinning: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
                hideOversizedStackedLabels: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                hideOversizedSideBySideLabels: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        HistogramOverlays: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                mean: {
                    $ref: string;
                    description: string;
                };
                median: {
                    $ref: string;
                    description: string;
                };
                standardDeviation: {
                    $ref: string;
                    description: string;
                };
                comparisonDistribution: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartHistogramSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                binCount: {
                    type: string[];
                    description: string;
                    minimum: number;
                    multipleOf: number;
                    default: number;
                };
                overlays: {
                    $ref: string;
                    description: string;
                };
                dataTransformationType: {
                    $ref: string;
                    description: string;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartDataTransformations: {
            type: string;
            enum: string[];
            title: string;
        };
        ScatterplotOverlays: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                trendLine: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        SizePolicy: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                scaleType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                field: {
                    type: string;
                    description: string;
                };
                minSize: {
                    type: string;
                    description: string;
                    default: number;
                    multipleOf: number;
                };
                maxSize: {
                    type: string;
                    description: string;
                    default: number;
                    multipleOf: number;
                };
            };
            required: string[];
            title: string;
        };
        SizePolicyScaleTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartScatterplotSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                markerSymbol: {
                    $ref: string;
                    description: string;
                };
                overlays: {
                    $ref: string;
                    description: string;
                };
                sizePolicy: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ISimpleMarkerSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    $ref: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
                color: {
                    $ref: string;
                };
                size: {
                    type: string;
                };
                outline: {
                    $ref: string;
                };
            };
            required: string[];
            title: string;
        };
        IMarkerSymbol: {
            type: string;
            properties: {
                type: {
                    $ref: string;
                };
                style: {
                    type: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        SimpleMarkerSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartPieChartTick: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartPieChartSlice: {
            type: string;
            properties: {
                sliceId: {
                    type: string;
                    description: string;
                };
                originalLabel: {
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    description: string;
                };
                label: {
                    type: string;
                    description: string;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartPieChartGroupSlice: {
            type: string;
            properties: {
                sliceId: {
                    type: string;
                    description: string;
                };
                originalLabel: {
                    anyOf: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    description: string;
                };
                label: {
                    type: string;
                    description: string;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
                percentageThreshold: {
                    type: string;
                    description: string;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartPieChartSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                innerRadius: {
                    type: string[];
                    description: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                startAngle: {
                    type: string[];
                    default: number;
                };
                endAngle: {
                    type: string[];
                    default: number;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
                displayCategoryOnDataLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayNumericValueOnDataLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayPercentageOnDataLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayCategoryOnTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayNumericValueOnTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                displayPercentageOnTooltip: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                numericValueFormat: {
                    $ref: string;
                    description: string;
                };
                percentValueFormat: {
                    $ref: string;
                    description: string;
                };
                valuePrefix: {
                    type: string;
                    description: string;
                };
                valueSuffix: {
                    type: string;
                    description: string;
                };
                percentagePrefix: {
                    type: string;
                    description: string;
                };
                percentageSuffix: {
                    type: string;
                    description: string;
                };
                dataLabelsCharacterLimit: {
                    type: string[];
                    description: string;
                    default: string;
                    minimum: number;
                    multipleOf: number;
                };
                ticks: {
                    $ref: string;
                    description: string;
                };
                dataLabelsInside: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataLabelsOffset: {
                    type: string;
                    description: string;
                    default: number;
                };
                alignDataLabels: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                optimizeDataLabelsOverlapping: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                sliceGrouping: {
                    $ref: string;
                    description: string;
                };
                slices: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartGaugeSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                valueConversion: {
                    $ref: string;
                    description: string;
                };
                featureIndex: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartLineChartSeries: {
            type: string;
            properties: {
                binTemporalData: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                temporalBinning: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                lineSmoothed: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                showArea: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                markerVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                markerSymbol: {
                    $ref: string;
                    description: string;
                };
                areaColor: {
                    $ref: string;
                    description: string;
                };
                stackNegativeValuesToBaseline: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                connectLines: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartBoxPlotSeries: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    description: string;
                };
                fillSymbol: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartRadarChartSeries: {
            $ref: string;
            title: string;
        };
        "WebChartLineChartSeries<\"radarSeries\">": {
            type: string;
            properties: {
                binTemporalData: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                temporalBinning: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipReverseColor: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                dataTooltipValueFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipPercentFormat: {
                    $ref: string;
                    description: string;
                };
                dataTooltipDateFormat: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                query: {
                    $ref: string;
                    description: string;
                };
                x: {
                    type: string;
                    description: string;
                    minLength: number;
                };
                dataLabels: {
                    $ref: string;
                    description: string;
                };
                assignToSecondValueAxis: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                y: {
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                lineSmoothed: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                showArea: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                markerVisible: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                markerSymbol: {
                    $ref: string;
                    description: string;
                };
                areaColor: {
                    $ref: string;
                    description: string;
                };
                stackNegativeValuesToBaseline: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                connectLines: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartSeriesType: {
            anyOf: {
                $ref: string;
            }[];
            description: string;
            title: string;
        };
        WebChart: {
            type: string;
            properties: {
                version: {
                    type: string;
                    const: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                iLayer: {
                    $ref: string;
                    description: string;
                };
                dataFilters: {
                    $ref: string;
                    description: string;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                subtitle: {
                    $ref: string;
                    description: string;
                };
                footer: {
                    $ref: string;
                    description: string;
                };
                background: {
                    $ref: string;
                    description: string;
                    default: number[];
                };
                cursorCrosshair: {
                    $ref: string;
                    description: string;
                };
                legend: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                axes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                horizontalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                verticalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                series: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                    minItems: number;
                };
                rotated: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                stackedType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                colorMatch: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                chartRenderer: {
                    description: string;
                };
                orderOptions: {
                    type: string;
                    properties: {
                        series: {
                            $ref: string;
                            description: string;
                        };
                        data: {
                            anyOf: {
                                $ref: string;
                            }[];
                            description: string;
                        };
                        orderByFields: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                    };
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IFeatureLayer: {
            type: string;
            properties: {
                timeAnimation: {
                    type: string;
                    description: string;
                };
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                capabilities: {
                    type: string;
                    description: string;
                };
                definitionEditor: {
                    $ref: string;
                    description: string;
                };
                disablePopup: {
                    type: string;
                    const: boolean;
                    description: string;
                };
                featureCollection: {
                    description: string;
                };
                featureCollectionType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                layerDefinition: {
                    $ref: string;
                    description: string;
                };
                mode: {
                    type: string;
                    enum: number[];
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
                showLabels: {
                    type: string;
                    const: boolean;
                    description: string;
                };
                visibleLayers: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ILayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        ISupportsTime: {
            type: string;
            properties: {
                timeAnimation: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        IDefinitionEditor: {
            type: string;
            properties: {
                inputs: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                parameterizedExpression: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IDefinitionInput: {
            type: string;
            properties: {
                hint: {
                    type: string;
                    description: string;
                };
                parameters: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                prompt: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        IDefinitionParameter: {
            type: string;
            properties: {
                defaultValue: {
                    type: string[];
                    description: string;
                };
                fieldName: {
                    type: string;
                    description: string;
                };
                parameterId: {
                    description: string;
                };
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                utcValue: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        ILayerDefinition: {
            type: string;
            properties: {
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                allowGeometryUpdates: {
                    type: string;
                    description: string;
                };
                capabilities: {
                    type: string;
                    description: string;
                };
                copyrightText: {
                    type: string;
                    description: string;
                };
                currentVersion: {
                    type: string;
                    description: string;
                };
                defaultVisibility: {
                    type: string;
                    description: string;
                };
                definitionEditor: {
                    $ref: string;
                    description: string;
                };
                definitionExpression: {
                    type: string;
                    description: string;
                };
                description: {
                    type: string;
                    description: string;
                };
                displayField: {
                    type: string;
                    description: string;
                };
                drawingInfo: {
                    description: string;
                };
                extent: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
                editingInfo: {
                    $ref: string;
                    description: string;
                };
                featureReduction: {
                    description: string;
                };
                fields: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                geometryType: {
                    $ref: string;
                    description: string;
                };
                globalIdField: {
                    type: string;
                    description: string;
                };
                hasAttachments: {
                    type: string;
                    description: string;
                };
                hasStaticData: {
                    type: string;
                    description: string;
                };
                htmlPopupType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                isDataVersioned: {
                    type: string;
                    description: string;
                };
                maxRecordCount: {
                    type: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                objectIdField: {
                    type: string;
                    description: string;
                };
                overrideSymbols: {
                    type: string;
                    description: string;
                };
                rangeInfos: {
                    description: string;
                };
                source: {
                    description: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                };
                supportedQueryFormats: {
                    type: string;
                    description: string;
                };
                supportsAdvancedQueries: {
                    type: string;
                    description: string;
                };
                supportsAttachmentsByUploadId: {
                    type: string;
                    description: string;
                };
                supportsCalculate: {
                    type: string;
                    description: string;
                };
                supportsRollbackOnFailureParameter: {
                    type: string;
                    description: string;
                };
                supportsStatistics: {
                    type: string;
                    description: string;
                };
                supportsValidateSql: {
                    type: string;
                    description: string;
                };
                templates: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                timeInfo: {
                    description: string;
                };
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                typeIdField: {
                    type: string;
                    description: string;
                };
                types: {
                    description: string;
                };
                visibilityField: {
                    type: string;
                    description: string;
                };
                relationships: {
                    type: string;
                    items: {};
                };
                editFieldsInfo: {
                    type: string;
                    properties: {
                        creationDateField: {
                            type: string;
                        };
                        creatorField: {
                            type: string;
                        };
                        editDateField: {
                            type: string;
                        };
                        editorField: {
                            type: string;
                        };
                    };
                };
                parentLayerId: {
                    type: string;
                };
                ownershipBasedAccessControlForFeatures: {
                    type: string;
                };
                syncCanReturnChanges: {
                    type: string;
                };
                archivingInfo: {
                    type: string;
                    properties: {
                        supportsQueryWithHistoricMoment: {
                            type: string;
                        };
                        startArchivingMoment: {
                            type: string;
                        };
                    };
                };
                supportsValidateSQL: {
                    type: string;
                };
                advancedQueryCapabilities: {
                    type: string;
                    properties: {
                        supportsPagination: {
                            type: string;
                        };
                        supportsTrueCurve: {
                            type: string;
                        };
                        supportsQueryWithDistance: {
                            type: string;
                        };
                        supportsReturningQueryExtent: {
                            type: string;
                        };
                        supportsStatistics: {
                            type: string;
                        };
                        supportsOrderBy: {
                            type: string;
                        };
                        supportsDistinct: {
                            type: string;
                        };
                        supportsSqlExpression: {
                            type: string;
                        };
                        supportsPercentileStatistics: {
                            type: string;
                        };
                    };
                };
                allowTrueCurvesUpdates: {
                    type: string;
                };
                onlyAllowTrueCurveUpdatesByTrueCurveClients: {
                    type: string;
                };
                supportsApplyEditsWithGlobalIds: {
                    type: string;
                };
                subtypeField: {
                    type: string;
                };
                indexes: {
                    type: string;
                    items: {};
                };
                dateFieldsTimeReference: {
                    type: string;
                    properties: {
                        timeZone: {
                            type: string;
                        };
                        respectsDaylightSaving: {
                            type: string;
                        };
                    };
                };
                useStandardizedQueries: {
                    type: string;
                };
            };
            description: string;
            title: string;
        };
        IEditingInfo: {
            type: string;
            properties: {
                lastEditDate: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        IField: {
            type: string;
            properties: {
                name: {
                    type: string;
                    description: string;
                };
                type: {
                    $ref: string;
                    description: string;
                };
                alias: {
                    type: string;
                    description: string;
                };
                domain: {
                    $ref: string;
                    description: string;
                };
                editable: {
                    type: string;
                    description: string;
                };
                exactMatch: {
                    type: string;
                    description: string;
                };
                length: {
                    type: string;
                    description: string;
                };
                nullable: {
                    type: string;
                    description: string;
                };
                defaultValue: {
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        FieldType: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        IDomain: {
            type: string;
            properties: {
                type: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                range: {
                    type: string;
                    items: {
                        type: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                codedValues: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                description: {
                    type: string;
                    description: string;
                };
                mergePolicy: {
                    type: string;
                    description: string;
                };
                splitPolicy: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        DomainType: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        ICodedValue: {
            type: string;
            properties: {
                name: {
                    type: string;
                    description: string;
                };
                code: {
                    type: string[];
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        GeometryType: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        ITemplate: {
            type: string;
            properties: {
                description: {
                    description: string;
                };
                drawingTool: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                prototype: {
                    $ref: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        FeatureEditTool: {
            type: string;
            enum: string[];
            title: string;
        };
        IFeature: {
            type: string;
            properties: {
                geometry: {
                    $ref: string;
                };
                attributes: {
                    $ref: string;
                };
                symbol: {
                    $ref: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Record<string,any>": {
            type: string;
            title: string;
        };
        IPopupInfo: {
            type: string;
            properties: {
                description: {
                    type: string[];
                    description: string;
                };
                expressionInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                fieldInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                layerOptions: {
                    type: string;
                    properties: {
                        showNoDataRecords: {
                            type: string;
                            description: string;
                        };
                    };
                    required: string[];
                    description: string;
                };
                mediaInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                popupElements: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                relatedRecordsInfo: {
                    $ref: string;
                    description: string;
                };
                showAttachments: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IPopupExpressionInfo: {
            type: string;
            properties: {
                expression: {
                    type: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                returnType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IFieldInfo: {
            type: string;
            properties: {
                fieldName: {
                    description: string;
                };
                format: {
                    $ref: string;
                    description: string;
                };
                isEditable: {
                    type: string;
                    description: string;
                };
                label: {
                    type: string;
                    description: string;
                };
                stringFieldOption: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                tooltip: {
                    type: string;
                    description: string;
                };
                visible: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IFieldFormat: {
            type: string;
            properties: {
                dateFormat: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                digitSeparator: {
                    type: string;
                    description: string;
                };
                places: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IMediaInfo: {
            type: string;
            properties: {
                caption: {
                    description: string;
                };
                refreshInterval: {
                    description: string;
                };
                title: {
                    type: string[];
                    description: string;
                };
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                value: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IMediaInfoValue: {
            type: string;
            properties: {
                fields: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                linkURL: {
                    type: string;
                    description: string;
                };
                normalizeField: {
                    type: string;
                    description: string;
                };
                sourceURL: {
                    type: string;
                    description: string;
                };
                tooltipField: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IPopupElement: {
            type: string;
            properties: {
                displayType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                fieldInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                mediaInfos: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                text: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IRelatedRecordsInfo: {
            type: string;
            properties: {
                orderByFields: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                showRelatedRecords: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IOrderByField: {
            type: string;
            properties: {
                field: {
                    type: string;
                    description: string;
                };
                order: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        WebChartLabelBehavior: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartStackedKinds: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartOrderSeriesBy: {
            type: string;
            properties: {
                preferLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                orderBy: {
                    $ref: string;
                    description: string;
                    default: string;
                };
            };
            description: string;
            title: string;
        };
        WebChartSortOrderKinds: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartDirectionalDataOrder: {
            type: string;
            properties: {
                orderType: {
                    $ref: string;
                    description: string;
                };
                orderBy: {
                    $ref: string;
                    description: string;
                };
                preferLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartOrderDataByTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartPredefinedLabelsDataOrder: {
            type: string;
            properties: {
                orderType: {
                    type: string;
                    const: string;
                    description: string;
                };
                orderBy: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                preferLabel: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebGaugeChart: {
            type: string;
            properties: {
                version: {
                    type: string;
                    const: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                iLayer: {
                    $ref: string;
                    description: string;
                };
                dataFilters: {
                    $ref: string;
                    description: string;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                subtitle: {
                    $ref: string;
                    description: string;
                };
                footer: {
                    $ref: string;
                    description: string;
                };
                background: {
                    $ref: string;
                    description: string;
                    default: number[];
                };
                cursorCrosshair: {
                    $ref: string;
                    description: string;
                };
                legend: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                axes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                horizontalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                verticalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                series: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                    minItems: number;
                };
                rotated: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                stackedType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                colorMatch: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                chartRenderer: {
                    description: string;
                };
                orderOptions: {
                    type: string;
                    properties: {
                        series: {
                            $ref: string;
                            description: string;
                        };
                        data: {
                            anyOf: {
                                $ref: string;
                            }[];
                            description: string;
                        };
                        orderByFields: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                    };
                    description: string;
                };
                innerRadius: {
                    type: string[];
                    description: string;
                    default: number;
                };
                startAngle: {
                    type: string[];
                    description: string;
                    default: number;
                };
                endAngle: {
                    type: string[];
                    description: string;
                    default: number;
                };
                subType: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        GaugeChartSubTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebBoxPlot: {
            type: string;
            properties: {
                version: {
                    type: string;
                    const: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                iLayer: {
                    $ref: string;
                    description: string;
                };
                dataFilters: {
                    $ref: string;
                    description: string;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                subtitle: {
                    $ref: string;
                    description: string;
                };
                footer: {
                    $ref: string;
                    description: string;
                };
                background: {
                    $ref: string;
                    description: string;
                    default: number[];
                };
                cursorCrosshair: {
                    $ref: string;
                    description: string;
                };
                legend: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                axes: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                horizontalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                verticalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                series: {
                    type: string;
                    items: {
                        anyOf: {
                            $ref: string;
                        }[];
                    };
                    description: string;
                };
                rotated: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                stackedType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                colorMatch: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                chartRenderer: {
                    description: string;
                };
                orderOptions: {
                    type: string;
                    properties: {
                        series: {
                            $ref: string;
                            description: string;
                        };
                        data: {
                            anyOf: {
                                $ref: string;
                            }[];
                            description: string;
                        };
                        orderByFields: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                    };
                    description: string;
                };
                showOutliers: {
                    type: string;
                    description: string;
                };
                standardizeValues: {
                    type: string;
                    description: string;
                };
                showMean: {
                    type: string;
                    description: string;
                    default: boolean;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebRadarChart: {
            type: string;
            properties: {
                version: {
                    type: string;
                    const: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                iLayer: {
                    $ref: string;
                    description: string;
                };
                dataFilters: {
                    $ref: string;
                    description: string;
                };
                title: {
                    $ref: string;
                    description: string;
                };
                subtitle: {
                    $ref: string;
                    description: string;
                };
                footer: {
                    $ref: string;
                    description: string;
                };
                background: {
                    $ref: string;
                    description: string;
                    default: number[];
                };
                cursorCrosshair: {
                    $ref: string;
                    description: string;
                };
                legend: {
                    anyOf: {
                        $ref: string;
                    }[];
                    description: string;
                };
                axes: {
                    type: string;
                    minItems: number;
                    items: {
                        $ref: string;
                    }[];
                    maxItems: number;
                    description: string;
                };
                horizontalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                verticalAxisLabelsBehavior: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                series: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                    minItems: number;
                };
                rotated: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                stackedType: {
                    $ref: string;
                    description: string;
                    default: string;
                };
                colorMatch: {
                    type: string;
                    description: string;
                    default: boolean;
                };
                chartRenderer: {
                    description: string;
                };
                orderOptions: {
                    type: string;
                    properties: {
                        series: {
                            $ref: string;
                            description: string;
                        };
                        data: {
                            anyOf: {
                                $ref: string;
                            }[];
                            description: string;
                        };
                        orderByFields: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                    };
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        SupportedLayer: {
            anyOf: {
                $ref: string;
            }[];
            description: string;
            title: string;
        };
        "__esri.FeatureLayer": {
            type: string;
            properties: {
                useViewTime: {
                    type: string;
                };
                maxScale: {
                    type: string;
                };
                minScale: {
                    type: string;
                };
                publishingInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                persistenceEnabled: {
                    type: string;
                };
                capabilities: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                copyright: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                dateFieldsTimeZone: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                datesInUnknownTimezone: {
                    type: string;
                };
                definitionExpression: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                displayField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                editFieldsInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                editingInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                effectiveCapabilities: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                effectiveEditingEnabled: {
                    type: string;
                };
                fieldsIndex: {
                    $ref: string;
                };
                gdbVersion: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                geometryFieldsInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                geometryType: {
                    anyOf: ({
                        type: string;
                        const: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        const?: undefined;
                    })[];
                };
                globalIdField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                hasM: {
                    type: string;
                };
                hasZ: {
                    type: string;
                };
                isTable: {
                    type: string;
                };
                layerId: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                objectIdField: {
                    type: string;
                };
                preferredTimeZone: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                relationships: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                    })[];
                };
                returnM: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                returnZ: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                serviceDefinitionExpression: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                serviceItemId: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                sourceJSON: {
                    anyOf: ({
                        $ref?: undefined;
                    } | {
                        $ref: string;
                    })[];
                };
                subtypeField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                subtypes: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                    })[];
                };
                title: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                url: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                version: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                displayFilterEnabled: {
                    type: string;
                };
                displayFilterInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                customParameters: {
                    anyOf: ({
                        $ref?: undefined;
                    } | {
                        $ref: string;
                    })[];
                };
                blendMode: {
                    type: string;
                    enum: string[];
                };
                effect: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                apiKey: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                uid: {
                    type: string;
                };
                loadError: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                loadStatus: {
                    type: string;
                    enum: string[];
                };
                loadWarnings: {
                    type: string;
                    items: {};
                };
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Layer": {
            type: string;
            properties: {
                uid: {
                    type: string;
                };
                loadError: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                loadStatus: {
                    type: string;
                    enum: string[];
                };
                loadWarnings: {
                    type: string;
                    items: {};
                };
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Accessor": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Loadable": {
            type: string;
            properties: {
                loadError: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                loadStatus: {
                    type: string;
                    enum: string[];
                };
                loadWarnings: {
                    type: string;
                    items: {};
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Error": {
            type: string;
            properties: {
                details: {
                    anyOf: ({
                        $ref?: undefined;
                    } | {
                        $ref: string;
                    })[];
                    description: string;
                };
                message: {
                    type: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        nullish: {
            anyOf: ({
                type: string;
                not?: undefined;
            } | {
                not: {};
                type?: undefined;
            })[];
            title: string;
        };
        "__esri.Evented": {
            type: string;
            title: string;
        };
        "__esri.Identifiable": {
            type: string;
            properties: {
                uid: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.APIKeyMixin": {
            type: string;
            properties: {
                apiKey: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.BlendLayer": {
            type: string;
            properties: {
                blendMode: {
                    type: string;
                    enum: string[];
                };
                effect: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Effect": {
            anyOf: ({
                type: string;
                items: {};
            } | {
                type: string;
                items?: undefined;
            })[];
            description: string;
            title: string;
        };
        "__esri.Clonable": {
            type: string;
            title: string;
        };
        "__esri.CustomParametersMixin": {
            type: string;
            properties: {
                customParameters: {
                    anyOf: ({
                        $ref?: undefined;
                    } | {
                        $ref: string;
                    })[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.DisplayFilteredLayer": {
            type: string;
            properties: {
                displayFilterEnabled: {
                    type: string;
                };
                displayFilterInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.DisplayFilterInfo": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.JSONSupport": {
            type: string;
            title: string;
        };
        "__esri.FeatureEffectLayer": {
            type: string;
            title: string;
        };
        "__esri.FeatureLayerBase": {
            type: string;
            properties: {
                capabilities: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                copyright: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                dateFieldsTimeZone: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                datesInUnknownTimezone: {
                    type: string;
                };
                definitionExpression: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                displayField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                editFieldsInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                editingInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                effectiveCapabilities: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                effectiveEditingEnabled: {
                    type: string;
                };
                fieldsIndex: {
                    $ref: string;
                };
                gdbVersion: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                geometryFieldsInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                geometryType: {
                    anyOf: ({
                        type: string;
                        const: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        const?: undefined;
                    })[];
                };
                globalIdField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                hasM: {
                    type: string;
                };
                hasZ: {
                    type: string;
                };
                isTable: {
                    type: string;
                };
                layerId: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                objectIdField: {
                    type: string;
                };
                preferredTimeZone: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                relationships: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                    })[];
                };
                returnM: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                returnZ: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                serviceDefinitionExpression: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                serviceItemId: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                sourceJSON: {
                    anyOf: ({
                        $ref?: undefined;
                    } | {
                        $ref: string;
                    })[];
                };
                subtypeField: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                subtypes: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        items?: undefined;
                    })[];
                };
                title: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                url: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                version: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Capabilities": {
            type: string;
            properties: {
                analytics: {
                    $ref: string;
                };
                attachment: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                data: {
                    $ref: string;
                };
                editing: {
                    $ref: string;
                };
                metadata: {
                    $ref: string;
                };
                operations: {
                    $ref: string;
                };
                query: {
                    $ref: string;
                };
                queryAttributeBins: {
                    $ref: string;
                };
                queryRelated: {
                    $ref: string;
                };
                queryTopFeatures: {
                    $ref: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "__esri.CapabilitiesAnalytics": {
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesAttachment": {
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                };
                supportsContentType: {
                    type: string;
                };
                supportsExifInfo: {
                    type: string;
                };
                supportsKeywords: {
                    type: string;
                };
                supportsOrderByFields: {
                    type: string;
                };
                supportsName: {
                    type: string;
                };
                supportsSize: {
                    type: string;
                };
                supportsResize: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesData": {
            type: string;
            properties: {
                isVersioned: {
                    type: string;
                };
                isBranchVersioned: {
                    type: string;
                };
                supportsAttachment: {
                    type: string;
                };
                supportsM: {
                    type: string;
                };
                supportsZ: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesEditing": {
            type: string;
            properties: {
                supportsDeleteByAnonymous: {
                    type: string;
                };
                supportsDeleteByOthers: {
                    type: string;
                };
                supportsGeometryUpdate: {
                    type: string;
                };
                supportsGlobalId: {
                    type: string;
                };
                supportsRollbackOnFailure: {
                    type: string;
                };
                supportsUpdateByAnonymous: {
                    type: string;
                };
                supportsUpdateByOthers: {
                    type: string;
                };
                supportsUploadWithItemId: {
                    type: string;
                };
                supportsUpdateWithoutM: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesMetadata": {
            type: string;
            properties: {
                supportsAdvancedFieldProperties: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesOperations": {
            type: string;
            properties: {
                supportsAdd: {
                    type: string;
                };
                supportsCalculate: {
                    type: string;
                };
                supportsDelete: {
                    type: string;
                };
                supportsEditing: {
                    type: string;
                };
                supportsQuery: {
                    type: string;
                };
                supportsQueryAttachments: {
                    type: string;
                };
                supportsResizeAttachments: {
                    type: string;
                };
                supportsQueryTopFeatures: {
                    type: string;
                };
                supportsUpdate: {
                    type: string;
                };
                supportsValidateSql: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesQuery": {
            type: string;
            properties: {
                maxRecordCount: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                maxUniqueIDCount: {
                    anyOf: ({
                        type: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                    })[];
                };
                supportsCacheHint: {
                    type: string;
                };
                supportsCentroid: {
                    type: string;
                };
                supportsDisjointSpatialRelationship: {
                    type: string;
                };
                supportsDistance: {
                    type: string;
                };
                supportsDistinct: {
                    type: string;
                };
                supportsExtent: {
                    type: string;
                };
                supportsGeometryProperties: {
                    type: string;
                };
                supportsHavingClause: {
                    type: string;
                };
                supportsHistoricMoment: {
                    type: string;
                };
                supportsMaxRecordCountFactor: {
                    type: string;
                };
                supportsOrderBy: {
                    type: string;
                };
                supportsPagination: {
                    type: string;
                };
                supportsPercentileStatistics: {
                    type: string;
                };
                supportsQuantization: {
                    type: string;
                };
                supportsQuantizationEditMode: {
                    type: string;
                };
                supportsQueryGeometry: {
                    type: string;
                };
                supportsResultType: {
                    type: string;
                };
                supportsReturnMesh: {
                    type: string;
                };
                supportsStandardizedQueriesOnly: {
                    type: string;
                };
                supportsStatistics: {
                    type: string;
                };
                supportsSqlExpression: {
                    type: string;
                };
                supportsSpatialAggregationStatistics: {
                    type: string;
                };
                supportsTrueCurve: {
                    type: string;
                };
                supportedSpatialAggregationStatistics: {
                    $ref: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesQuerySupportedSpatialAggregationStatistics": {
            type: string;
            properties: {
                centroid: {
                    type: string;
                };
                envelope: {
                    type: string;
                };
                convexHull: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesQueryAttributeBins": {
            type: string;
            properties: {
                supportsDate: {
                    type: string;
                };
                supportsFixedInterval: {
                    type: string;
                };
                supportsAutoInterval: {
                    type: string;
                };
                supportsFixedBoundaries: {
                    type: string;
                };
                supportsStackBy: {
                    type: string;
                };
                supportsSplitBy: {
                    type: string;
                };
                supportsSnapToData: {
                    type: string;
                };
                supportsReturnFullIntervalBin: {
                    type: string;
                };
                supportsFirstDayOfWeek: {
                    type: string;
                };
                supportsNormalization: {
                    type: string;
                };
                supportedNormalizationTypes: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                supportedStatistics: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesQueryAttributeBinsSupportedNormalizationTypes": {
            type: string;
            properties: {
                field: {
                    type: string;
                };
                log: {
                    type: string;
                };
                naturalLog: {
                    type: string;
                };
                percentOfTotal: {
                    type: string;
                };
                squareRoot: {
                    type: string;
                };
            };
            title: string;
        };
        "__esri.CapabilitiesQueryAttributeBinsSupportedStatistics": {
            type: string;
            properties: {
                count: {
                    type: string;
                };
                sum: {
                    type: string;
                };
                avg: {
                    type: string;
                };
                var: {
                    type: string;
                };
                stddev: {
                    type: string;
                };
                min: {
                    type: string;
                };
                max: {
                    type: string;
                };
                percentileContinuous: {
                    type: string;
                };
                percentileDiscrete: {
                    type: string;
                };
            };
            title: string;
        };
        "__esri.CapabilitiesQueryRelated": {
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                };
                supportsCount: {
                    type: string;
                };
                supportsOrderBy: {
                    type: string;
                };
                supportsPagination: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.CapabilitiesQueryTopFeatures": {
            type: string;
            properties: {
                supportsCacheHint: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.EditFieldsInfo": {
            type: string;
            properties: {
                creatorField: {
                    type: string;
                };
                creationDateField: {
                    type: string;
                };
                editorField: {
                    type: string;
                };
                editDateField: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "__esri.EditingInfo": {
            type: string;
            properties: {
                lastEditDate: {
                    anyOf: ({
                        type: string;
                        format: string;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        type?: undefined;
                        format?: undefined;
                    })[];
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "__esri.FieldsIndex": {
            type: string;
            properties: {
                dateFields: {
                    anyOf: ({
                        type: string;
                        items: {
                            $ref: string;
                        };
                    } | {
                        type: string;
                        items: {
                            $ref?: undefined;
                        };
                    })[];
                    description: string;
                    default: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Field": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.GeometryFieldsInfo": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Relationship": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.Subtype": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.FeatureReductionLayer": {
            type: string;
            title: string;
        };
        "__esri.OperationalLayer": {
            type: string;
            properties: {
                persistenceEnabled: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.OrderedLayer": {
            type: string;
            title: string;
        };
        "__esri.PortalLayer": {
            type: string;
            title: string;
        };
        "__esri.PublishableLayer": {
            type: string;
            properties: {
                publishingInfo: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
            required: string[];
            title: string;
        };
        "__esri.PublishingInfo": {
            type: string;
            properties: {
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
                status: {
                    type: string;
                    enum: string[];
                    description: string;
                    default: string;
                };
                updating: {
                    type: string;
                    description: string;
                    default: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.ScaleRangeLayer": {
            type: string;
            properties: {
                maxScale: {
                    type: string;
                };
                minScale: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.TemporalLayer": {
            type: string;
            properties: {
                useViewTime: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        "__esri.TrackableLayer": {
            type: string;
            title: string;
        };
        "__esri.SubtypeSublayer": {
            type: string;
            properties: {
                uid: {
                    type: string;
                };
                loadError: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
                loadStatus: {
                    type: string;
                    enum: string[];
                };
                loadWarnings: {
                    type: string;
                    items: {};
                };
                destroyed: {
                    type: string;
                };
                initialized: {
                    type: string;
                };
                declaredClass: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        RGBObject: {
            type: string;
            properties: {
                r: {
                    type: string;
                };
                g: {
                    type: string;
                };
                b: {
                    type: string;
                };
                a: {
                    type: string;
                    default: number;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IRendererSymbol: {
            type: string;
            properties: {
                style: {
                    type: string;
                };
                color: {
                    $ref: string;
                };
                outline: {
                    $ref: string;
                };
                label: {
                    type: string;
                };
                uniqueValue: {
                    type: string;
                };
                type: {
                    $ref: string;
                };
            };
            required: string[];
            title: string;
        };
        WebChartDataItemColor: {
            anyOf: ({
                $ref: string;
                type?: undefined;
            } | {
                type: string;
                $ref?: undefined;
            })[];
            title: string;
        };
        RGBArray: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            title: string;
        };
        WebChartDataItemValue: {
            anyOf: ({
                type: string;
                format: string;
                $ref?: undefined;
                items?: undefined;
                not?: undefined;
            } | {
                $ref: string;
                type?: undefined;
                format?: undefined;
                items?: undefined;
                not?: undefined;
            } | {
                type: string;
                items: {
                    type: string;
                    $ref?: undefined;
                };
                format?: undefined;
                $ref?: undefined;
                not?: undefined;
            } | {
                type: string;
                items: {
                    $ref: string;
                    type?: undefined;
                };
                format?: undefined;
                $ref?: undefined;
                not?: undefined;
            } | {
                type: string;
                format?: undefined;
                $ref?: undefined;
                items?: undefined;
                not?: undefined;
            } | {
                not: {};
                type?: undefined;
                format?: undefined;
                $ref?: undefined;
                items?: undefined;
            })[];
            title: string;
        };
        WebChartDataItem: {
            $ref: string;
            description: string;
            title: string;
        };
        "Record<string,WebChartDataItemValue>": {
            type: string;
            additionalProperties: {
                $ref: string;
            };
            title: string;
        };
        WebChartBoxPlotDataItem: {
            type: string;
            properties: {
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                outliers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                meanLines: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ScatterplotTrendLineData: {
            type: string;
            properties: {
                r2: {
                    type: string;
                };
                trendLinePoints: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    maxItems: number;
                };
            };
            description: string;
            title: string;
        };
        WebChartScatterplotDataItem: {
            type: string;
            properties: {
                r2: {
                    type: string;
                };
                trendLinePoints: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    maxItems: number;
                };
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartGenericDataItem: {
            type: string;
            properties: {
                dataItems: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                timeIntervalInfo: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartBin: {
            type: string;
            properties: {
                count: {
                    type: string;
                };
                minValue: {
                    type: string;
                    description: string;
                };
                maxValue: {
                    type: string;
                    description: string;
                };
                symbol: {
                    $ref: string;
                    description: string;
                };
                isLastBin: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartHistogramDataItem: {
            type: string;
            properties: {
                mean: {
                    type: string;
                };
                median: {
                    type: string;
                };
                stddev: {
                    type: string;
                };
                max: {
                    type: string;
                };
                min: {
                    type: string;
                };
                sum: {
                    type: string;
                    description: string;
                };
                count: {
                    type: string;
                    description: string;
                };
                nulls: {
                    type: string;
                    description: string;
                };
                bins: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        WebChartDataTypes: {
            anyOf: {
                $ref: string;
            }[];
            title: string;
        };
        WebChartTypes: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartStatisticType: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartColoringPatterns: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartBoxPlotMultipleSeriesKinds: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartLineSmoothedKinds: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartTemporalBinningTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        WebChartVersionStatus: {
            type: string;
            enum: string[];
            title: string;
        };
        WebChartAxisTypes: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        RESTFieldType: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTSimpleLineSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTSimpleMarkerSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTSimpleFillSymbolStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTHorizontalAlignment: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTVerticalAlignment: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTSymbolType: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTFontStyle: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTFontWeight: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTFontDecoration: {
            type: string;
            enum: string[];
            title: string;
        };
        RESTRendererType: {
            type: string;
            enum: string[];
            title: string;
        };
        OverlayTerms: {
            type: string;
            enum: string[];
            title: string;
        };
        CalculatedMinMaxBoundsPayload: {
            type: string;
            properties: {
                isXAxis: {
                    type: string;
                };
                isSecondValueAxis: {
                    type: string;
                };
                minimum: {
                    type: string[];
                    description: string;
                };
                maximum: {
                    type: string[];
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ChartDeletePayload: {
            type: string;
            properties: {
                chartId: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        LegendItemVisibility: {
            type: string;
            properties: {
                visible: {
                    type: string;
                };
                seriesId: {
                    type: string;
                };
                overlayType: {
                    $ref: string;
                };
                sliceId: {
                    type: string;
                };
                sliceData: {
                    $ref: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IFeatureSet: {
            type: string;
            properties: {
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                objectIdFieldName: {
                    type: string;
                };
                globalIdFieldName: {
                    type: string;
                };
                displayFieldName: {
                    type: string;
                };
                geometryType: {
                    $ref: string;
                };
                spatialReference: {
                    $ref: string;
                };
                fields: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                features: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                fieldAliases: {
                    $ref: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Record<string,string>": {
            type: string;
            additionalProperties: {
                type: string;
            };
            title: string;
        };
        ILocation: {
            type: string;
            properties: {
                latitude: {
                    type: string;
                };
                longitude: {
                    type: string;
                };
                lat: {
                    type: string;
                };
                long: {
                    type: string;
                };
                z: {
                    type: string;
                };
            };
            description: string;
            title: string;
        };
        IPolylineWithCurves: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                curvePaths: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
            };
            required: string[];
            title: string;
        };
        ElipticArc: {
            $ref: string;
            title: string;
        };
        SpatialRelationship: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        IMultipoint: {
            type: string;
            properties: {
                spatialReference: {
                    $ref: string;
                };
                hasZ: {
                    type: string;
                };
                hasM: {
                    type: string;
                };
                points: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        Units: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        GroupMembership: {
            type: string;
            enum: string[];
            description: string;
            title: string;
        };
        IGroupAdd: {
            type: string;
            properties: {
                title: {
                    type: string;
                };
                access: {
                    type: string;
                    enum: string[];
                };
                owner: {
                    type: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                description: {
                    type: string;
                };
                phone: {
                    type: string;
                };
                sortField: {
                    type: string;
                    enum: string[];
                };
                sortOrder: {
                    type: string;
                    enum: string[];
                };
                isViewOnly: {
                    type: string;
                };
                isInvitationOnly: {
                    type: string;
                };
                thumbnail: {
                    type: string;
                };
                autoJoin: {
                    type: string;
                };
                snippet: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IGroup: {
            type: string;
            properties: {
                title: {
                    type: string;
                };
                access: {
                    type: string;
                    enum: string[];
                };
                owner: {
                    type: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                description: {
                    type: string;
                };
                phone: {
                    type: string;
                };
                sortField: {
                    type: string;
                    enum: string[];
                };
                sortOrder: {
                    type: string;
                    enum: string[];
                };
                isViewOnly: {
                    type: string;
                };
                isInvitationOnly: {
                    type: string;
                };
                thumbnail: {
                    type: string;
                };
                autoJoin: {
                    type: string;
                };
                snippet: {
                    type: string;
                };
                id: {
                    type: string;
                };
                created: {
                    type: string;
                };
                modified: {
                    type: string;
                };
                protected: {
                    type: string;
                };
                isOpenData: {
                    type: string;
                };
                isFav: {
                    type: string;
                };
                userMembership: {
                    type: string;
                    properties: {
                        username: {
                            type: string;
                        };
                        memberType: {
                            $ref: string;
                        };
                        applications: {
                            type: string;
                        };
                    };
                };
                hasCategorySchema: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IItemAdd: {
            type: string;
            properties: {
                title: {
                    type: string;
                };
                type: {
                    type: string;
                };
                owner: {
                    type: string;
                };
                typeKeywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                description: {
                    type: string;
                };
                snippet: {
                    type: string;
                };
                documentation: {
                    type: string;
                };
                extent: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                spatialReference: {
                    $ref: string;
                };
                culture: {
                    type: string;
                };
                properties: {};
                url: {
                    type: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IItemUpdate: {
            type: string;
            properties: {
                id: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IItem: {
            type: string;
            properties: {
                title: {
                    type: string;
                };
                type: {
                    type: string;
                };
                owner: {
                    type: string;
                };
                typeKeywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                description: {
                    type: string;
                };
                snippet: {
                    type: string;
                };
                documentation: {
                    type: string;
                };
                extent: {
                    type: string;
                    items: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                spatialReference: {
                    $ref: string;
                };
                culture: {
                    type: string;
                };
                properties: {};
                url: {
                    type: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                id: {
                    type: string;
                };
                created: {
                    type: string;
                };
                modified: {
                    type: string;
                };
                numViews: {
                    type: string;
                };
                size: {
                    type: string;
                };
                protected: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IFolder: {
            type: string;
            properties: {
                username: {
                    type: string;
                };
                id: {
                    type: string;
                };
                title: {
                    type: string;
                };
                created: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IFeatureServiceDefinition: {
            type: string;
            properties: {
                currentVersion: {
                    type: string;
                };
                serviceDescription: {
                    type: string;
                };
                hasVersionedData: {
                    type: string;
                };
                supportsDisconnectedEditing: {
                    type: string;
                };
                supportsReturnDeleteResults: {
                    type: string;
                };
                hasStaticData: {
                    type: string;
                    description: string;
                };
                maxRecordCount: {
                    type: string;
                    description: string;
                };
                supportedQueryFormats: {
                    type: string;
                    description: string;
                };
                supportsRelationshipsResource: {
                    type: string;
                };
                capabilities: {
                    type: string;
                    description: string;
                };
                description: {
                    type: string;
                    description: string;
                };
                copyrightText: {
                    type: string;
                    description: string;
                };
                advancedEditingCapabilities: {
                    $ref: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                };
                initialExtent: {
                    $ref: string;
                };
                fullExtent: {
                    $ref: string;
                };
                allowGeometryUpdates: {
                    type: string;
                    description: string;
                };
                units: {
                    type: string;
                };
                syncEnabled: {
                    type: string;
                };
                returnServiceEditsHaveSR: {
                    type: string;
                };
                validationSystemLayers: {
                    type: string;
                    properties: {
                        validationPointErrorlayerId: {
                            type: string;
                        };
                        validationLineErrorlayerId: {
                            type: string;
                        };
                        validationPolygonErrorlayerId: {
                            type: string;
                        };
                        validationObjectErrortableId: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                extractChangesCapabilities: {
                    type: string;
                    properties: {
                        supportsReturnIdsOnly: {
                            type: string;
                        };
                        supportsReturnExtentOnly: {
                            type: string;
                        };
                        supportsReturnAttachments: {
                            type: string;
                        };
                        supportsLayerQueries: {
                            type: string;
                        };
                        supportsSpatialFilter: {
                            type: string;
                        };
                        supportsReturnFeature: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                syncCapabilities: {
                    type: string;
                    properties: {
                        supportsASync: {
                            type: string;
                        };
                        supportsRegisteringExistingData: {
                            type: string;
                        };
                        supportsSyncDirectionControl: {
                            type: string;
                        };
                        supportsPerLayerSync: {
                            type: string;
                        };
                        supportsPerReplicaSync: {
                            type: string;
                        };
                        supportsRollbackOnFailure: {
                            type: string;
                        };
                        supportedSyncDataOptions: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                editorTrackingInfo: {
                    type: string;
                    properties: {
                        enableEditorTracking: {
                            type: string;
                        };
                        enableOwnershipAccessControl: {
                            type: string;
                        };
                        allowOthersToUpdate: {
                            type: string;
                        };
                        allowOthersToDelete: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                documentInfo: {
                    $ref: string;
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                tables: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                relationships: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                type: string;
                            };
                            name: {
                                type: string;
                            };
                            backwardPathLabel: {
                                type: string;
                            };
                            originLayerId: {
                                type: string;
                            };
                            originPrimaryKey: {
                                type: string;
                            };
                            forwardPathLabel: {
                                type: string;
                            };
                            destinationLayerId: {
                                type: string;
                            };
                            originForeignKey: {
                                type: string;
                            };
                            relationshipTableId: {
                                type: string;
                            };
                            destinationPrimaryKey: {
                                type: string;
                            };
                            destinationForeignKey: {
                                type: string;
                            };
                            rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        ruleID: {
                                            type: string;
                                        };
                                        originSubtypeCode: {
                                            type: string;
                                        };
                                        originMinimumCardinality: {
                                            type: string;
                                        };
                                        originMaximumCardinality: {
                                            type: string;
                                        };
                                        destinationSubtypeCode: {
                                            type: string;
                                        };
                                        destinationMinimumCardinality: {
                                            type: string;
                                        };
                                        destinationMaximumCardinality: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                minItems: number;
                                maxItems: number;
                            };
                            cardinality: {
                                type: string;
                                enum: string[];
                            };
                            attributed: {
                                type: string;
                            };
                            composite: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    minItems: number;
                    maxItems: number;
                };
                enableZDefaults: {
                    type: string;
                };
                isLocationTrackingService: {
                    type: string;
                };
                isLocationTrackingView: {
                    type: string;
                };
                zDefault: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Record<string,boolean>": {
            type: string;
            additionalProperties: {
                type: string;
            };
            title: string;
        };
        ITable: {
            type: string;
            properties: {
                name: {
                    type: string;
                    description: string;
                };
                capabilities: {
                    type: string;
                    description: string;
                };
                definitionEditor: {
                    $ref: string;
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerDefinition: {
                    $ref: string;
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IServiceInfo: {
            type: string;
            properties: {
                adminServiceInfo: {
                    type: string;
                    properties: {
                        name: {
                            type: string;
                        };
                        type: {
                            type: string;
                        };
                        status: {
                            type: string;
                        };
                        database: {
                            type: string;
                            properties: {
                                datasource: {
                                    type: string;
                                    properties: {
                                        name: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    required: string[];
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        "Record<string,unknown>": {
            type: string;
            additionalProperties: {};
            title: string;
        };
        IViewServiceSource: {
            type: string;
            properties: {
                name: {
                    type: string;
                };
                type: {
                    type: string;
                };
                url: {
                    type: string;
                };
                serviceItemId: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IViewServiceSources: {
            type: string;
            properties: {
                currentVersion: {
                    type: string;
                };
                services: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IServiceNameAvailable: {
            type: string;
            properties: {
                available: {
                    type: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IPictureSourced: {
            type: string;
            properties: {
                url: {
                    type: string;
                };
                imageData: {
                    type: string;
                };
                contentType: {
                    type: string;
                };
                width: {
                    type: string;
                };
                height: {
                    type: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
            };
            title: string;
        };
        IPictureFillSymbol: {
            type: string;
            properties: {
                url: {
                    type: string;
                };
                imageData: {
                    type: string;
                };
                contentType: {
                    type: string;
                };
                width: {
                    type: string;
                };
                height: {
                    type: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    type: string;
                };
                outline: {
                    $ref: string;
                };
                xscale: {
                    type: string;
                };
                yscale: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        IPictureMarkerSymbol: {
            type: string;
            properties: {
                url: {
                    type: string;
                };
                imageData: {
                    type: string;
                };
                contentType: {
                    type: string;
                };
                width: {
                    type: string;
                };
                height: {
                    type: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        ITextSymbol: {
            type: string;
            properties: {
                type: {
                    type: string;
                    const: string;
                };
                style: {
                    type: string;
                };
                angle: {
                    type: string;
                };
                xoffset: {
                    type: string;
                };
                yoffset: {
                    type: string;
                };
                color: {
                    $ref: string;
                };
                backgroundColor: {
                    $ref: string;
                };
                borderLineSize: {
                    type: string;
                };
                borderLineColor: {
                    $ref: string;
                };
                haloSize: {
                    type: string;
                };
                haloColor: {
                    $ref: string;
                };
                verticalAlignment: {
                    type: string;
                    enum: string[];
                };
                horizontalAlignment: {
                    type: string;
                    enum: string[];
                };
                rightToLeft: {
                    type: string;
                };
                kerning: {
                    type: string;
                };
                font: {
                    $ref: string;
                };
                text: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        IUser: {
            type: string;
            properties: {
                username: {
                    type: string;
                };
                fullName: {
                    type: string;
                };
                availableCredits: {
                    type: string;
                };
                assignedCredits: {
                    type: string;
                };
                firstName: {
                    type: string;
                };
                lastName: {
                    type: string;
                };
                preferredView: {};
                description: {
                    type: string;
                };
                email: {
                    type: string;
                };
                idpUsername: {
                    type: string;
                };
                favGroupId: {
                    type: string;
                };
                lastLogin: {
                    type: string;
                };
                mfaEnabled: {
                    type: string;
                };
                access: {
                    type: string;
                };
                storageUsage: {
                    type: string;
                };
                storageQuota: {
                    type: string;
                };
                orgId: {
                    type: string;
                };
                cOrgId: {
                    type: string;
                };
                role: {
                    type: string;
                    enum: string[];
                };
                privileges: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                roleId: {
                    type: string;
                };
                level: {
                    type: string;
                };
                disabled: {
                    type: string;
                };
                units: {
                    type: string;
                };
                tags: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                culture: {
                    type: string;
                };
                region: {
                    type: string;
                };
                thumbnail: {
                    type: string;
                };
                created: {
                    type: string;
                };
                modified: {
                    type: string;
                };
                groups: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                provider: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
            title: string;
        };
        IPagingParams: {
            type: string;
            properties: {
                start: {
                    type: string;
                };
                num: {
                    type: string;
                };
            };
            description: string;
            title: string;
        };
        IPagedResponse: {
            type: string;
            properties: {
                start: {
                    type: string;
                };
                num: {
                    type: string;
                };
                total: {
                    type: string;
                    description: string;
                };
                nextStart: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IWebMapBackground: {
            type: string;
            properties: {
                color: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            examples: {
                background: {
                    color: number[];
                };
            }[];
            title: string;
        };
        IBookmark: {
            type: string;
            properties: {
                extent: {
                    $ref: string;
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IMapRangeInfo: {
            type: string;
            properties: {
                activeRangeName: {
                    type: string;
                    description: string;
                };
                currentRangeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                fullRangeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            description: string;
            examples: {
                mapRangeInfo: {
                    activeRangeName: string;
                    currentRangeExtent: number[];
                    fullRangeExtent: number[];
                };
            }[];
            title: string;
        };
        IMapLocation: {
            type: string;
            properties: {
                centerPoint: {
                    $ref: string;
                    description: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IVisibleLayer: {
            type: string;
            properties: {
                featureVisibility: {
                    type: string;
                    items: {
                        type: string;
                        items: {};
                    };
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                subLayerIds: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            description: string;
            examples: {
                visibleLayer: {
                    featureVisibility: number[][];
                    id: string;
                };
            }[];
            title: string;
        };
        IVisiblePopup: {
            type: string;
            properties: {
                anchorPoint: {
                    $ref: string;
                    description: string;
                };
                featureId: {
                    type: string;
                    description: string;
                };
                layerId: {
                    type: string;
                    description: string;
                };
                subLayerId: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        ISlide: {
            type: string;
            properties: {
                baseMap: {
                    $ref: string;
                    description: string;
                };
                extent: {
                    $ref: string;
                    description: string;
                };
                hidden: {
                    type: string;
                    description: string;
                };
                mapLocation: {
                    $ref: string;
                    description: string;
                };
                timeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    minItems: number;
                    maxItems: number;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                visibleLayers: {
                    $ref: string;
                    description: string;
                };
                visiblePopup: {
                    $ref: string;
                    description: string;
                };
            };
            title: string;
        };
        IBaseMap: {
            type: string;
            properties: {
                baseMapLayers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IPresentation: {
            type: string;
            properties: {
                displayTimeSlider: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                slideAdvancementInterval: {
                    type: string;
                    description: string;
                };
                slides: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                useTimeExtentOfSlide: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        IWebmap: {
            type: string;
            properties: {
                applicationProperties: {
                    $ref: string;
                    description: string;
                };
                authoringApp: {
                    type: string;
                    description: string;
                };
                authoringAppVersion: {
                    type: string;
                    description: string;
                };
                background: {
                    $ref: string;
                    description: string;
                };
                baseMap: {
                    $ref: string;
                    description: string;
                };
                bookmarks: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                mapRangeInfo: {
                    $ref: string;
                    description: string;
                };
                operationalLayers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                presentation: {
                    description: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                };
                tables: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                version: {
                    type: string;
                    description: string;
                };
                widgets: {
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IApplicationProperties: {
            type: string;
            properties: {
                editing: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
                offline: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
                viewing: {
                    anyOf: ({
                        $ref: string;
                        type?: undefined;
                    } | {
                        type: string;
                        $ref?: undefined;
                    })[];
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IEditingProperties: {
            type: string;
            properties: {
                locationTracking: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ILocationTracking: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                info: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ILocationTrackingInfo: {
            type: string;
            properties: {
                layerId: {
                    description: string;
                };
                updateInterval: {
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IOfflineInfo: {
            type: string;
            properties: {
                editableLayers: {
                    $ref: string;
                    description: string;
                };
                readonlyLayers: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IEditableLayers: {
            type: string;
            properties: {
                download: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                sync: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IReadOnlyLayers: {
            type: string;
            properties: {
                downloadAttachments: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IViewingInfo: {
            type: string;
            properties: {
                basemapGallery: {
                    $ref: string;
                    description: string;
                };
                measure: {
                    $ref: string;
                    description: string;
                };
                routing: {
                    $ref: string;
                    description: string;
                };
                search: {
                    $ref: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IEnableable: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        ISearch: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                disablePlaceFinder: {
                    description: string;
                };
                hintText: {
                    description: string;
                };
                layers: {
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IRange: {
            type: string;
            properties: {
                interactionMode: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                numberOfStops: {
                    description: string;
                };
                stopInterval: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IWidget: {
            type: string;
            properties: {
                range: {
                    $ref: string;
                    description: string;
                };
                timeSlider: {
                    $ref: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        ITimeSliderProperties: {
            type: string;
            properties: {
                currentTimeExtent: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                endTime: {
                    type: string;
                    description: string;
                };
                numberOfStops: {
                    type: string;
                    description: string;
                };
                startTime: {
                    type: string;
                    description: string;
                };
                thumbCount: {
                    type: string;
                    description: string;
                };
                thumbMovingRate: {
                    type: string;
                    description: string;
                };
                timeStopInterval: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        ITimeSlider: {
            type: string;
            properties: {
                properties: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IBingLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                bingKey: {
                    type: string;
                    description: string;
                };
                canShareBingPublic: {
                    type: string;
                    description: string;
                };
                portalUrl: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IImageServiceLayer: {
            type: string;
            properties: {
                timeAnimation: {
                    type: string;
                    description: string;
                };
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                bandIds: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                compressionQuality: {
                    description: string;
                };
                definitionEditor: {
                    description: string;
                };
                disablePopup: {
                    type: string;
                    description: string;
                };
                format: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                interpolation: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                isReference: {
                    type: string;
                    description: string;
                };
                layerDefinition: {
                    description: string;
                };
                mosaicRule: {
                    description: string;
                };
                noData: {
                    description: string;
                };
                noDataInterpretation: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                pixelType: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
                renderingRule: {
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IImageVectorLayer: {
            type: string;
            properties: {
                timeAnimation: {
                    type: string;
                    description: string;
                };
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                definitionEditor: {
                    description: string;
                };
                disablePopup: {
                    description: string;
                };
                isReference: {
                    type: string;
                    description: string;
                };
                layerDefinition: {
                    description: string;
                };
                mosaicRule: {
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                symbolTileSize: {
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IChildLayer: {
            type: string;
            properties: {
                defaultVisibility: {
                    description: string;
                };
                definitionEditor: {
                    $ref: string;
                    description: string;
                };
                featureSet: {
                    $ref: string;
                    description: string;
                };
                field: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                id: {
                    type: string;
                    description: string;
                };
                layerDefinition: {
                    description: string;
                };
                layerUrl: {
                    description: string;
                };
                maxScale: {
                    description: string;
                };
                minScale: {
                    description: string;
                };
                nextObjectId: {
                    description: string;
                };
                parentLayerId: {
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                showLegend: {
                    description: string;
                };
                subLayer: {
                    description: string;
                };
                subLayerIds: {
                    description: string;
                };
                title: {
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IMapServiceLayer: {
            type: string;
            properties: {
                timeAnimation: {
                    type: string;
                    description: string;
                };
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                isReference: {
                    description: string;
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
                thematicGroup: {
                    $ref: string;
                    description: string;
                };
                visibleLayers: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IThematicGroup: {
            type: string;
            properties: {
                fieldNames: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                layerIds: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        IDrawingInfo: {
            type: string;
            properties: {
                fixedSymbols: {
                    description: string;
                };
                labelingInfo: {
                    description: string;
                };
                renderer: {
                    description: string;
                };
                scaleSymbols: {
                    description: string;
                };
                showLabels: {
                    type: string;
                    description: string;
                };
                transparency: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        ITypeInfoDomain: {
            type: string;
            properties: {
                type: {
                    type: string;
                };
            };
            required: string[];
            title: string;
        };
        ITypeInfo: {
            type: string;
            properties: {
                domains: {
                    $ref: string;
                    description: string;
                };
                id: {
                    type: string[];
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                templates: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
            };
            title: string;
        };
        "Record<string,ITypeInfoDomain>": {
            type: string;
            additionalProperties: {
                $ref: string;
            };
            title: string;
        };
        IOpenStreetMapLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ITiledImageServiceLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                isReference: {
                    type: string;
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IExclusionArea: {
            type: string;
            properties: {
                geometry: {
                    $ref: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                maxZoom: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                minZoom: {
                    type: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        ITiledMapServiceLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                displayLevels: {
                    anyOf: ({
                        type: string;
                        items: {
                            type: string;
                        };
                    } | {
                        type: string;
                        items?: undefined;
                    })[];
                    description: string;
                };
                exclusionAreas: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                isReference: {
                    description: string;
                };
                layers: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IVectorTileLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                styleUrl: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        ILod: {
            type: string;
            properties: {
                level: {
                    type: string;
                    description: string;
                };
                levelValue: {
                    type: string;
                    description: string;
                };
                resolution: {
                    type: string;
                    description: string;
                };
                scale: {
                    type: string;
                    description: string;
                };
            };
            title: string;
        };
        ITileInfo: {
            type: string;
            properties: {
                cols: {
                    description: string;
                };
                compressionQuality: {
                    description: string;
                };
                dpi: {
                    description: string;
                };
                format: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                lods: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                origin: {
                    $ref: string;
                    description: string;
                };
                rows: {
                    description: string;
                };
                spatialReference: {
                    $ref: string;
                    description: string;
                };
            };
            description: string;
            title: string;
        };
        IWebMapTileServiceInfo: {
            type: string;
            properties: {
                customLayerParameters: {
                    description: string;
                };
                customParameters: {
                    description: string;
                };
                layerIdentifier: {
                    type: string;
                    description: string;
                };
                tileMatrixSet: {
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IWebTiledLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                copyright: {
                    description: string;
                };
                fullExtent: {
                    $ref: string;
                    description: string;
                };
                isReference: {
                    description: string;
                };
                refreshInterval: {
                    description: string;
                };
                subDomains: {
                    description: string;
                };
                templateUrl: {
                    description: string;
                };
                tileInfo: {
                    $ref: string;
                    description: string;
                };
                wmtsInfo: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        ICsvLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                columnDelimiter: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                layerDefinition: {
                    $ref: string;
                    description: string;
                };
                locationInfo: {
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            description: string;
            title: string;
        };
        IGeoRssLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                lineSymbol: {
                    $ref: string;
                    description: string;
                };
                pointSymbol: {
                    $ref: string;
                    description: string;
                };
                polygonSymbol: {
                    $ref: string;
                    description: string;
                };
                refreshInterval: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IKmlLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    description: string;
                };
                minScale: {
                    description: string;
                };
                opacity: {
                    description: string;
                };
                showLegend: {
                    description: string;
                };
                title: {
                    description: string;
                };
                type: {
                    type: string;
                    const: string;
                    description: string;
                    deprecated: string;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                refreshInterval: {
                    description: string;
                };
                visibleFolders: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
        IArcGisStreamLayer: {
            type: string;
            properties: {
                id: {
                    description: string;
                };
                name: {
                    type: string;
                    description: string;
                };
                itemId: {
                    type: string;
                    description: string;
                };
                layerType: {
                    type: string;
                    const: string;
                    description: string;
                };
                maxScale: {
                    type: string;
                    description: string;
                };
                minScale: {
                    type: string;
                    description: string;
                };
                opacity: {
                    type: string;
                    description: string;
                };
                showLegend: {
                    type: string;
                    description: string;
                };
                title: {
                    type: string;
                    description: string;
                };
                type: {
                    type: string;
                    description: string;
                    deprecated: boolean;
                };
                visibility: {
                    type: string;
                    description: string;
                };
                url: {
                    type: string;
                    description: string;
                };
                definitionEditor: {
                    $ref: string;
                    description: string;
                };
                disablePopup: {
                    type: string;
                    description: string;
                };
                layerDefinition: {
                    $ref: string;
                    description: string;
                };
                popupInfo: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            title: string;
        };
    };
    let $ref: string;
}
declare namespace _default {
    export { WebChartJSONSchemas };
}
export default _default;
