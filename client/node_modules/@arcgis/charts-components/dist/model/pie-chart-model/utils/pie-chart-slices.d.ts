import { WebChartPieChartGroupSlice, WebChartPieChartSlice, Color } from '@arcgis/charts-spec';
import { ChartConfig } from '../../../utils';
import { ModelTypes } from '../../interfaces/common';
export declare const getOriginalName: (sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => Date | number | string | null | undefined;
/**
 * Gets the name of the slice
 * @param sliceIndex The index of the slice
 * @param config The chart configuration
 * @returns {string | undefined}
 */
export declare const getName: (sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => string | undefined;
/**
 * Sets the name of the slice
 * @param name The name of the slice
 * @param sliceIndex The index of the slice to set the name
 * @param config The chart configuration
 */
export declare const setName: (name: string, sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets the color of the slice
 * @param sliceIndex The index of the slice
 * @param config The chart configuration
 * @returns {Color | undefined}
 */
export declare const getColor: (sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => Color | undefined;
/**
 * Sets the color of the slice
 * @param color The color to set
 * @param sliceIndex The index of the slice to set the color
 * @param config The chart configuration
 */
export declare const setColor: (color: Color | undefined, sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets original values of the slice
 * @param config The chart configuration
 * @returns {string[] | undefined}
 */
export declare const getOrderOfSlices: (config: ChartConfig<typeof ModelTypes.PieChart>) => string[] | undefined;
/**
 * Sets the slices in the order specified
 * @param sliceOrder The slice order
 * @param config The chart configuration
 */
export declare const setOrderOfSlices: (sliceOrder: string[], config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets the grouping of slices
 * @param config The chart configuration
 * @returns {WebChartPieChartGroupSlice | undefined}
 */
export declare const getSliceGrouping: (config: ChartConfig<typeof ModelTypes.PieChart>) => WebChartPieChartGroupSlice | undefined;
/**
 * Sets the grouping of slices
 * @param sliceGrouping The slice grouping
 * @param config The chart configuration
 */
export declare const setSliceGrouping: (sliceGrouping: WebChartPieChartGroupSlice | undefined, config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets the grouping threshold
 * @param config The chart configuration
 * @returns {number | undefined}
 */
export declare const getGroupingThreshold: (config: ChartConfig<typeof ModelTypes.PieChart>) => number | undefined;
/**
 * Sets the grouping threshold
 * @param groupingThreshold The grouping threshold
 * @param config The chart configuration
 */
export declare const setGroupingThreshold: (groupingThreshold: number, config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets the slices of the pie chart
 * @param config The chart configuration
 * @returns {WebChartPieChartSlice[] | undefined}
 */
export declare const getSlices: (config: ChartConfig<typeof ModelTypes.PieChart>) => WebChartPieChartSlice[] | undefined;
/**
 * Sets the slices of the pie chart
 * @param slices The slices to set
 * @param config The chart configuration
 */
export declare const setSlices: (slices: WebChartPieChartSlice[] | undefined, config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Resets the slices of the pie chart
 * @param config The chart configuration
 */
export declare const resetSlices: (config: ChartConfig<typeof ModelTypes.PieChart>) => void;
/**
 * Gets the slice id
 * @param sliceIndex The index of the slice
 * @param config The chart configuration
 * @returns {string | undefined}
 */
export declare const getSliceId: (sliceIndex: number, config: ChartConfig<typeof ModelTypes.PieChart>) => string | undefined;
/**
 * Gets the slice index
 * @param sliceId The slice id
 * @param config The chart configuration
 * @returns {number | undefined}
 */
export declare const getSliceIndex: (sliceId: string, config: ChartConfig<typeof ModelTypes.PieChart>) => number | undefined;
/**
 * Gets the number of slices in a pie chart
 * @param config The chart configuration
 * @returns {number}
 */
export declare const getSlicesLength: (config: ChartConfig<typeof ModelTypes.PieChart>) => number;
