/// <reference types="../../index.d.ts" />
import { IField } from '@arcgis/charts-spec';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { PropertyValues } from 'lit';
import { LineChartModel } from '../../model';
import { DataChangeErrorPayload } from '../../utils/components/event-payloads';

/** @private */
export declare class ArcgisChartsConfigLineChartData extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Line Chart Model.
     *  `@category` Public
     */
    model: LineChartModel;
    /**
     * call back when the time interval is reset.
     *
     * @category Public
     */
    resetTimeInterval?: () => void;
    /**
     * Fields Information of the Feature layer
     *
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * When true, the content of the component will be displayed.
     *
     * @default false
     */
    open?: boolean;
    readonly arcgisChartsConfigCustomizedTimeInterval: TargetedEvent<this, void>;
    readonly arcgisChartsConfigDataChangeError: TargetedEvent<this, DataChangeErrorPayload>;
    readonly arcgisChartsConfigLineChartDataNumericFieldValidate: TargetedEvent<this, void>;
    readonly arcgisChartsConfigResetTimeInterval: TargetedEvent<this, void>;
    private _messages;
}
