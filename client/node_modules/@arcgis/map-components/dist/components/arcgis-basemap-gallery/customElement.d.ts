/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/lumina/controllers';
import { default as BasemapGalleryViewModel } from '@arcgis/core/widgets/BasemapGallery/BasemapGalleryViewModel.js';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { HeadingLevel } from '../../support/heading';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useBasemapGalleryViewModel: (component: LitElement & Pick<BasemapGalleryViewModel, never> & import('../../controllers/useViewModel').ViewModelControllerUses<BasemapGalleryViewModel>) => BasemapGalleryViewModel;
/**
 * The Basemap Gallery component displays a collection images representing basemaps from [ArcGIS.com](https://www.arcgis.com/index.html) or a user-defined set of map or image services. When a new basemap is selected from the Basemap Gallery, the map's basemap layers are removed and replaced with the basemap layers of the associated basemap selected in the gallery.
 *
 * [Read more...](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-basemap-gallery/)
 */
export declare class ArcgisBasemapGallery extends LitElement {
    /** The map's current [basemap](https://developers.arcgis.com/javascript/latest/api-reference/esri-Map.html#basemap). */
    activeBasemap?: __esri.BasemapProperties | string;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the [destroy](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-basemap-gallery/#destroy) method when you are done to
     * prevent memory leaks.
     *
     * @default false
     */
    autoDestroyDisabled: boolean;
    /**
     * When `true`, sets the component to a disabled state so the user cannot interact with it.
     *
     * @default false
     */
    disabled: boolean;
    /**
     * Indicates the heading level to use for the message "No basemaps available"
     * when no basemaps are available in the Basemap Gallery.
     *
     * @default 2
     */
    headingLevel: HeadingLevel;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     *
     * @see [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/)
     * @default "basemap"
     */
    icon: string;
    /**
     * The component's default label.
     *
     * @default ""
     */
    label: string;
    /**
     * Replace localized message strings with your own strings.
     *
     * _**Note**: Individual message keys may change between releases._
     */
    messageOverrides?: typeof this.messages._overrides;
    /** @default "bottom-left" */
    position: __esri.UIPosition;
    /**
     * By assigning the `id` attribute of the Map or Scene component to this property, you can position a child component anywhere in the DOM while still maintaining a connection to the Map or Scene.
     *
     * @see [Associate components with a Map or Scene component](https://developers.arcgis.com/javascript/latest/programming-patterns/#associate-components-with-a-map-or-scene-component)
     */
    referenceElement?: ArcgisReferenceElement | string;
    /** The source for basemaps that the component will display. */
    source: __esri.LocalBasemapsSource | __esri.PortalBasemapsSource;
    /**
     * The current state of the component.
     *
     * @default "disabled"
     */
    readonly state: "ready" | "loading" | "disabled" | "unsupported";
    /** Permanently destroy the component. */
    destroy(): Promise<void>;
    /** Emitted when the value of a property is changed. Use this to listen to changes to properties. */
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "activeBasemap";
    }>;
    /** Emitted when the component associated with a map or scene view is is ready to be interacted with. */
    readonly arcgisReady: TargetedEvent<this, void>;
    private messages: Partial<{
        componentLabel: string;
        noBasemaps: string;
        tagBeta: string;
        tag3D: string;
        unsupported: string;
    }> & import('@arcgis/lumina/controllers').T9nMeta<{
        componentLabel: string;
        noBasemaps: string;
        tagBeta: string;
        tag3D: string;
        unsupported: string;
    }>;
}
export {};
