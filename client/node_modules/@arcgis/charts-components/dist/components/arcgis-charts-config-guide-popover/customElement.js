import { c as r } from "../../chunks/runtime.js";
import { html as o } from "lit-html";
import { RESTSymbolType as l } from "@arcgis/charts-spec";
import "lodash-es";
import "d3-array";
import "../../chunks/interfaces.js";
import "@arcgis/core/geometry/support/jsonUtils.js";
import "@arcgis/core/rest/support/AttributeBinsQuery.js";
import "@arcgis/core/rest/support/Query.js";
import "@arcgis/core/rest/support/StatisticDefinition.js";
import "@arcgis/core/time/TimeExtent.js";
import "@arcgis/core/core/promiseUtils.js";
import "@arcgis/core/request.js";
import { e as a } from "../../chunks/popover-ui-utils.js";
import { g as i } from "../../chunks/default.js";
import { u as n } from "../../chunks/useT9n.js";
import { createRef as p, ref as c } from "lit-html/directives/ref.js";
import { LitElement as m, createEvent as s, safeClassMap as h } from "@arcgis/lumina";
import { css as g } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const C = {
  jsAppFlyout: "js-app-flyout"
}, d = g``;
class f extends m {
  constructor() {
    super(...arguments), this._messages = n(), this.popoverElement = p(), this.placement = "leading", this.arcgisChartsConfigGuidePopoverColorChange = s(), this.arcgisChartsConfigGuidePopoverSymbolChange = s(), this.arcgisChartsConfigPopoverClose = s();
  }
  static {
    this.properties = { messageOverrides: 0, selectedElement: 2, referenceElement: 2, placement: 3, open: 7 };
  }
  static {
    this.styles = d;
  }
  async reposition() {
    await this.popoverElement.value?.reposition();
  }
  updated() {
    a(this.popoverElement.value, this.open);
  }
  guidePopoverClose() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit();
  }
  updateColorProperties(t) {
    const e = t.detail;
    e !== void 0 && (e[3] = i), this.selectedElement = e, this.arcgisChartsConfigGuidePopoverColorChange.emit(this.selectedElement);
  }
  updateSymbolProperties(t) {
    const { lineStyle: e } = t.target;
    e?.color !== void 0 && (e.color[3] = i), this.selectedElement = e, this.arcgisChartsConfigGuidePopoverSymbolChange.emit(t.detail);
  }
  render() {
    const t = this.selectedElement, e = this.selectedElement;
    return o`<div class=${h(C.jsAppFlyout)}><calcite-popover .referenceElement=${this.referenceElement ?? document.body} .placement=${this.placement} .open=${this.open} offset-distance=20 offset-skidding=60 label pointer-disabled @calcitePopoverClose=${this.guidePopoverClose} ${c(this.popoverElement)}>${Array.isArray(t) && o`<arcgis-charts-config-color-style .header=${this._messages.fillStyle} enable-close .open=${this.open} .selectedColor=${t} @arcgisChartsConfigColorStyleClose=${this.guidePopoverClose} @arcgisChartsConfigColorStyleChange=${this.updateColorProperties}></arcgis-charts-config-color-style>` || ""}${e?.type === l.SLS && o`<arcgis-charts-config-line-style .header=${this._messages.lineStyle} .open=${this.open} enable-close .lineStyle=${e} @arcgisChartsConfigLineStyleClose=${this.guidePopoverClose} @arcgisChartsConfigLineStyleChange=${this.updateSymbolProperties}></arcgis-charts-config-line-style>` || ""}</calcite-popover></div>`;
  }
}
r("arcgis-charts-config-guide-popover", f);
export {
  f as ArcgisChartsConfigGuidePopover
};
