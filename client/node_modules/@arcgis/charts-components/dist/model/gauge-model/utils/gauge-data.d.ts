import { ChartConfig } from '../../../utils';
import { WebChartStatisticType } from '@arcgis/charts-spec';
import { LayerInfo, ModelTypes } from '../../interfaces/common';
export declare const updateSeries: (props: {
    config: ChartConfig<typeof ModelTypes.Gauge>;
    layerInfo: LayerInfo;
    field: string;
    aggregationType: WebChartStatisticType;
}) => Promise<void>;
/**
 * Gets the aggregation type from the config.
 * @param config - the guage chart config
 */
export declare const getAggregationType: (config: ChartConfig<typeof ModelTypes.Gauge>) => WebChartStatisticType;
/**
 * Sets the aggregation type to the config.
 * @param aggregationType
 * @param config
 * @param layerInfo
 */
export declare const setAggregationType: (aggregationType: WebChartStatisticType, config: ChartConfig<typeof ModelTypes.Gauge>, layerInfo: LayerInfo) => Promise<void>;
/**
 * Checks if the feature index is valid.
 *
 * NOTE: It should be a number and greater than or equal to 0.
 * @param { number | undefined } featureIndex - the feature index
 *
 * @returns boolean
 */
export declare const isValidFeatureIndex: (featureIndex?: number) => boolean;
/**
 * Gets the field from the config
 * @param config - the guage chart config
 */
export declare const getField: (config: ChartConfig<typeof ModelTypes.Gauge>) => string;
/**
 * Sets the field to the config
 * @param field The field to set
 * @param config The guage chart config
 */
export declare const setField: (field: string, config: ChartConfig<typeof ModelTypes.Gauge>, layerInfo: LayerInfo) => Promise<void>;
/**
 * Gets the inner radius from the config
 * @param config - the guage chart config
 */
export declare const getInnerRadius: (config: ChartConfig<typeof ModelTypes.Gauge>) => number;
/**
 * Sets the inner radius to the config
 * @param innerRadius The inner radius to set
 * @param config The guage chart config
 */
export declare const setInnerRadius: (innerRadius: number, config: ChartConfig<typeof ModelTypes.Gauge>) => void;
/**
 * Gets the start angle from the config
 * @param config The guage chart config
 */
export declare const getStartAngle: (config: ChartConfig<typeof ModelTypes.Gauge>) => number;
/**
 * Sets the start angle to the config
 * @param startAngle The start angle to set
 * @param config The guage chart config
 */
export declare const setStartAngle: (startAngle: number, config: ChartConfig<typeof ModelTypes.Gauge>) => void;
/**
 * Gets the end angle from the config
 * @param config The guage chart config
 */
export declare const getEndAngle: (config: ChartConfig<typeof ModelTypes.Gauge>) => number;
/**
 * Sets the end angle to the config
 * @param endAngle The end angle to set
 * @param config The guage chart config
 */
export declare const setEndAngle: (endAngle: number, config: ChartConfig<typeof ModelTypes.Gauge>) => void;
