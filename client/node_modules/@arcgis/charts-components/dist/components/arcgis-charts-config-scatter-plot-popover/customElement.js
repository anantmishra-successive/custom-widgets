import { c as C } from "../../chunks/runtime.js";
import { keyed as n } from "lit-html/directives/keyed.js";
import { RESTSymbolType as c } from "@arcgis/charts-spec";
import "lodash-es";
import "d3-array";
import { b1 as v, c9 as u } from "../../chunks/interfaces.js";
import "@arcgis/core/geometry/support/jsonUtils.js";
import "@arcgis/core/rest/support/AttributeBinsQuery.js";
import "@arcgis/core/rest/support/Query.js";
import "@arcgis/core/rest/support/StatisticDefinition.js";
import "@arcgis/core/time/TimeExtent.js";
import "@arcgis/core/core/promiseUtils.js";
import "@arcgis/core/request.js";
import { e as y } from "../../chunks/popover-ui-utils.js";
import { S as p } from "../../chunks/interfaces2.js";
import { U as h, a as b, i as m } from "../../chunks/chart-ui-utils2.js";
import { u as $ } from "../../chunks/useT9n.js";
import { html as o } from "lit";
import { createRef as d, ref as g } from "lit-html/directives/ref.js";
import { LitElement as S, createEvent as a, safeClassMap as l } from "@arcgis/lumina";
import { css as P } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const r = {
  jsAppFlyout: "js-app-flyout",
  scatterplotPopover: "scatter-plot-popover",
  fillColor: "fill-color",
  header: "header",
  pickListItemLabel: "pick-list-item-label",
  pickListPanel: "pick-list-panel"
}, k = P`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}:host{width:100%}.pick-list-panel{max-height:60vh}`;
class F extends S {
  constructor() {
    super(...arguments), this.picklist = d(), this._messages = $(), this.popoverElement = d(), this.layerFieldsInfo = [], this.arcgisChartsConfigPopoverClose = a(), this.arcgisChartsConfigPopoverOpenChange = a(), this.arcgisChartsConfigScatterplotFillColorChange = a(), this.arcgisChartsConfigScatterplotLineStyleChange = a(), this.arcgisChartsConfigScatterplotSizeVariableFieldChange = a(), this.arcgisChartsConfigScatterplotXYFieldChange = a();
  }
  static {
    this.properties = { messageOverrides: 0, headingTitle: 3, contentKind: 3, selectedContent: 3, referenceElement: 2, placement: 3, open: 7, layerFieldsInfo: 0 };
  }
  static {
    this.styles = k;
  }
  async reposition() {
    await this.popoverElement.value?.reposition();
  }
  willUpdate(e) {
    e.has("open") && this.openChange();
  }
  async updated() {
    setTimeout(async () => {
      await this.picklist.value?.setFocus();
    }, h.PopoverTimer), y(this.popoverElement.value, this.open), this.hasUpdated || setTimeout(() => {
      this.popoverElement.value?.reposition();
    }, h.PopoverTimer);
  }
  loaded() {
    this.openChange();
  }
  openChange() {
    this.arcgisChartsConfigPopoverOpenChange.emit({ open: this.open });
  }
  seriesPopoverClose() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit();
  }
  closePopover() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit();
  }
  updateSymbolProperties(e) {
    this.selectedContent = e.target.lineStyle, this.arcgisChartsConfigScatterplotLineStyleChange.emit(e.detail);
  }
  updateColorProperties(e) {
    this.selectedContent = e.detail, this.arcgisChartsConfigScatterplotFillColorChange.emit(e.detail);
  }
  onFieldSelectionChange(e) {
    const t = e.target.selectedItems;
    this.contentKind === p.sizeVariable ? this.arcgisChartsConfigScatterplotSizeVariableFieldChange.emit(t.map((i) => i.value)[0]) : this.arcgisChartsConfigScatterplotXYFieldChange.emit(t.map((i) => i.value)[0]), this.open = !1;
  }
  render() {
    const e = this.selectedContent, t = this.selectedContent;
    return o`<div class=${l({ [r.jsAppFlyout]: !0 })}><calcite-popover class=${l(r.scatterplotPopover)} .referenceElement=${this.referenceElement ?? document.body} .placement=${this.placement} .offsetDistance=${b(this.placement)} @calcitePopoverClose=${this.closePopover} .open=${this.open} label ${g(this.popoverElement)}>${Array.isArray(e) ? o`<arcgis-charts-config-color-style .header=${this._messages.fillColor} class=${l(r.fillColor)} enable-close .open=${this.open} .selectedColor=${e} @arcgisChartsConfigColorStyleClose=${this.seriesPopoverClose} @arcgisChartsConfigColorStyleChange=${this.updateColorProperties}></arcgis-charts-config-color-style>` : null}${t?.type === c.SLS ? o`<arcgis-charts-config-line-style .header=${this._messages.lineStyle} .open=${this.open} enable-close .lineStyle=${t} @arcgisChartsConfigLineStyleClose=${this.seriesPopoverClose} @arcgisChartsConfigLineStyleChange=${this.updateSymbolProperties}></arcgis-charts-config-line-style>` : null}${!Array.isArray(e) && t?.type !== c.SLS ? this.renderVariablePickList() : null}</calcite-popover></div>`;
  }
  renderVariablePickList() {
    const e = this.layerFieldsInfo?.length ?? 0, t = [];
    this.contentKind === p.sizeVariable && t.push(n(" ", o`<calcite-list-item label=" " value=" " .selected=${m("", this.selectedContent)}></calcite-list-item>`));
    for (let i = 0; i < e; i += 1) {
      const s = this.layerFieldsInfo?.[i] ?? void 0;
      if (s !== void 0 && v(s)) {
        const f = u(this.layerFieldsInfo, s.name);
        t.push(n(s.name, o`<calcite-list-item .label=${f} .value=${s.name} .selected=${m(s.name, this.selectedContent)}></calcite-list-item>`));
      }
    }
    return o`<calcite-panel class=${l(r.pickListPanel)} closable .closed=${!this.open} @calcitePanelClose=${this.closePopover}><div slot=header-content class=${l(r.header)}>${this.headingTitle ?? ""}</div><calcite-list label class=${l(r.pickListItemLabel)} selection-mode=single selection-appearance=border filter-enabled @calciteListChange=${this.onFieldSelectionChange} ${g(this.picklist)}>${t}</calcite-list></calcite-panel>`;
  }
}
C("arcgis-charts-config-scatter-plot-popover", F);
export {
  F as ArcgisChartsConfigScatterplotPopover
};
