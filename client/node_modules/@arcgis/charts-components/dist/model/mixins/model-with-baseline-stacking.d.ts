import { ChartConfig } from '../../utils';
import { ChartModel } from '../chart-model/chart-model';
import { ModelTypes } from '../interfaces/common';
export declare abstract class ModelWithBaselineStacking extends ChartModel {
    protected _config: ChartConfig<typeof ModelTypes.LineChart> | ChartConfig<typeof ModelTypes.RadarChart>;
    /**
     * Specify how negative values are treated in stacked series.
     * @param {number} seriesIndex - The index of the series.
     *
     * NOTE: If true, negative values will be stacked on the base line.
     * If false, negative values will be stacked in relation to their previous values in the stack.
     *
     * @default true
     * @returns {boolean}
     */
    isNegativeValuesStackedToBaseline(seriesIndex: number): boolean;
    /**
     * Specify how negative values are treated in stacked series.
     * @param {boolean} props.stackedToBaseline - `true` if negative values should be stacked on the base line, `false` otherwise.
     * @param {number} props.seriesIndex - The index of the series.
     *
     * NOTE: If true, negative values will be stacked on the base line.
     * If false, negative values will be stacked in relation to their previous values in the stack.
     *
     */
    setNegativeValuesStackedToBaseline(stackNegativeValuesToBaseline: boolean, seriesIndex: number): void;
}
