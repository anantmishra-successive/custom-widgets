export interface T9NApiRoot {
    resources: Record<string, string>;
    categories: T9NCategories;
}
export type T9NCategories = Record<string, T9NCategory>;
export interface T9NCategory {
    title: string;
    description?: Record<string, string>;
    items: T9NApiItems;
}
export type T9NResource = Record<string, string>;
export type T9NApiItems = Record<string, Record<string, T9NApiItem> | T9NApiItem>;
export interface T9NProperty {
    description?: Record<string, string>;
    properties?: Record<string, T9NProperty>;
}
export interface T9NApiItem {
    description: Record<string, string>;
    examples?: Record<string, Record<string, string>>;
    parameters?: Record<string, T9NProperty>;
    returnValue?: T9NProperty;
}
export type T9NProfiles = Record<string, T9NProfileVariables>;
export type T9NProfileVariables = Record<string, T9NProfileVariable>;
export interface T9NProfileVariable {
    description?: string;
    properties?: T9NProfileVariables;
}
