/// <reference types="../../index.d.ts" />
import { IField, ISimpleFillSymbol, ISimpleLineSymbol, WebChartDataTransformations } from '@arcgis/charts-spec';
import { HistogramDataPopoverKinds } from '../../interfaces';
import { PopoverOpenChangePayload } from '../../utils/components/event-payloads';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';

/** @private */
export declare class ArcgisChartsConfigHistogramPopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Fields Information of the Feature layer
     *
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * Heading for the popover component
     *
     * @category Public
     */
    headingTitle?: string;
    /**
     * Selected field.
     *
     * @category Public
     */
    selectedNumericField?: string;
    /**
     * Selected transformation type.
     *
     * @category Public
     */
    selectedTransformationType?: WebChartDataTransformations;
    /**
     * Selected statistic overlay symbol.
     *
     * @category Public
     */
    selectedOverlaySymbol?: ISimpleLineSymbol;
    /**
     * Selected statistic overlay symbol.
     *
     * @category Public
     */
    selectedBinColor?: ISimpleFillSymbol;
    /**
     * Reference element to show the popover.
     *
     * @category Public
     */
    referenceElement?: HTMLElement;
    /**
     * content type to determine popover to use
     *
     * @category Public
     */
    contentKind?: HistogramDataPopoverKinds;
    /**
     * Place the popover in the given placement.
     *
     * @category Public
     */
    placement?: HTMLCalcitePopoverElement["placement"];
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    readonly arcgisChartsConfigHistogramPopoverChange: TargetedEvent<this, {
        contentKind: HistogramDataPopoverKinds | undefined;
        value: any;
    }>;
    readonly arcgisChartsConfigHistogramPopoverSymbolChange: TargetedEvent<this, ISimpleLineSymbol | ISimpleFillSymbol>;
    readonly arcgisChartsConfigPopoverClose: TargetedEvent<this, void>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverOpenChange: TargetedEvent<this, PopoverOpenChangePayload>;
    private _messages;
}
