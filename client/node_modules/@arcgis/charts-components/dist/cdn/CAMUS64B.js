/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
import b from"./3RODMSQG.js";import{d as i}from"./ITSRCSFZ.js";import a from"./PDDPZQ7S.js";import{E as d,c as l,d as s,z as h}from"./MDSKC43G.js";import"./IYCX42AE.js";import"./YG7SBKS5.js";export default $arcgis.t(([,,,,,,,{A:o,Gc:c,Ic:m},{c:g,g:p}])=>{var u=l`:host{overflow-y:auto;overflow-x:hidden;margin-bottom:var(--arcgis-charts-intra-section-margin);margin-top:var(--arcgis-charts-intra-section-margin);height:100%}`,r=class extends h{constructor(){super(...arguments),this.popoverElement=null,this.onModelConfigChange=async e=>{let a=e?.detail.config??this.model.getConfig();this.layer===void 0&&await this.updateFetchLayerFieldsInfo(a)}}static{this.properties={layerFieldsInfo:16,model:0,chartData:0,seriesColor:2,calculatedMinMaxBounds:2,page:3,layer:0,usePopupTemplateFieldsInfo:5}}static{this.styles=u}async load(){this.layer!==void 0&&await this.layerChange(this.layer,void 0),this.seriesColor!==void 0&&this.seriesColorChange(this.seriesColor),this.usePopupTemplateFieldsInfo!==void 0&&await this.usePopupTemplateFieldsInfoChange(this.usePopupTemplateFieldsInfo,void 0),this.modelChange(this.model),this.onModelConfigChange()}async willUpdate(e){e.has("model")&&this.modelChange(this.model,e.get("model")),e.has("layer")&&await this.layerChange(this.layer,e.get("layer")),e.has("usePopupTemplateFieldsInfo")&&await this.usePopupTemplateFieldsInfoChange(this.usePopupTemplateFieldsInfo,e.get("usePopupTemplateFieldsInfo")),e.has("seriesColor")&&this.seriesColorChange(this.seriesColor),this.layerFieldsInfo===void 0&&await this.updateFetchLayerFieldsInfo()}disconnectedCallback(){super.disconnectedCallback(),this.model.removeEventListener("arcgisChartsModelConfigChange",this.onModelConfigChange)}modelChange(e,a){a?.removeEventListener("arcgisChartsModelConfigChange",this.onModelConfigChange),e?.addEventListener("arcgisChartsModelConfigChange",this.onModelConfigChange)}async layerChange(e,a){e!==void 0&&!o(a,e)&&await this.updateFetchLayerFieldsInfo()}async usePopupTemplateFieldsInfoChange(e,a){e!==void 0&&e!==a&&await this.updateFetchLayerFieldsInfo()}seriesColorChange(e){this.model.getColorMatch()&&e?.forEach(a=>{g(a)&&e?.get(0)!==void 0&&!o(this.model.getBinSymbol(),a)&&this.model.setBinSymbol(a)})}async updateFetchLayerFieldsInfo(e){let a=e??this.model.getConfig(),t=this.layer;if(!t){let n=p(a)?a.iLayer:void 0;n&&(t=await c(n))}t&&(this.layerFieldsInfo=await m(t,this.usePopupTemplateFieldsInfo))}popoverOpen(e){let{open:a=!1,element:t=null}={...e.detail};a===!0&&this.popoverElement!==t?(this.popoverElement!==null&&(this.popoverElement.open=!1),this.popoverElement=t):a===!1&&this.popoverElement===t&&(this.popoverElement=null)}render(){let e;switch(this.page){case i.Data:e=s`<arcgis-charts-config-histogram-data .model=${this.model} .meanValue=${this.chartData?.mean} .medianValue=${this.chartData?.median} .standardDevValue=${this.chartData?.stddev} .minValue=${this.chartData?.min} .maxValue=${this.chartData?.max} .sumValue=${this.chartData?.sum} .nullsValue=${this.chartData?.nulls} .countValue=${this.chartData?.count} .layerFieldsInfo=${this.layerFieldsInfo} @arcgisChartsConfigHistogramDataPopoverChange=${this.popoverOpen}></arcgis-charts-config-histogram-data>`;break;case i.Axes:e=s`<arcgis-charts-config-axes .model=${this.model} show-max-y-bound-option .calculatedMinMaxBounds=${this.calculatedMinMaxBounds}></arcgis-charts-config-axes>`;break;case i.Guides:e=s`<arcgis-charts-config-guides .model=${this.model} enable-y-axis-guide @arcgisChartsConfigGuidePopoverChange=${this.popoverOpen}></arcgis-charts-config-guides>`;break;case i.Format:e=s`<arcgis-charts-config-format .model=${this.model} @arcgisChartsConfigFormatPopoverChange=${this.popoverOpen}></arcgis-charts-config-format>`;break;case i.General:e=s`<arcgis-charts-config-general .model=${this.model}></arcgis-charts-config-general>`;break;default:e="";break}return e}};d("arcgis-charts-config-histogram",r);return r},"geometry/support/jsonUtils","rest/support/AttributeBinsQuery","rest/support/Query","rest/support/StatisticDefinition","time/TimeExtent","core/promiseUtils","request",a,b)