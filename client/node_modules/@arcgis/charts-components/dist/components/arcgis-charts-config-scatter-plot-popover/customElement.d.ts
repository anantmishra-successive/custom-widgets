/// <reference types="../../index.d.ts" />
import { Color, IField, ISimpleLineSymbol } from '@arcgis/charts-spec';
import { ScatterplotDataPopoverKinds } from '../../interfaces';
import { PopoverOpenChangePayload } from '../../utils/components/event-payloads';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';

/** @private */
export declare class ArcgisChartsConfigScatterplotPopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Heading for the popover component
     *
     * @category Public
     */
    headingTitle?: string;
    /**
     * Content kind for the popover.
     *
     * @category Public
     */
    contentKind?: ScatterplotDataPopoverKinds;
    /**
     * Selected text properties to show for font style.
     *
     * @category Public
     */
    selectedContent?: Color | ISimpleLineSymbol | string;
    /**
     * Reference element to show the popover.
     *
     * @category Public
     */
    referenceElement?: HTMLElement;
    /**
     * Place the popover in the give placement.
     *
     * @category Public
     */
    placement?: HTMLCalcitePopoverElement["placement"];
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * Fields Information of the Feature layer
     *
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverClose: TargetedEvent<this, void>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverOpenChange: TargetedEvent<this, PopoverOpenChangePayload>;
    /**
     * Event emitted when there is a change in text property.
     *
     * @category Public
     */
    readonly arcgisChartsConfigScatterplotFillColorChange: TargetedEvent<this, void>;
    /**
     * Event emitted when there is a change in symbol property.
     *
     * @category Public
     */
    readonly arcgisChartsConfigScatterplotLineStyleChange: TargetedEvent<this, void>;
    /**
     * Event emitted when there is a change in size variable field type.
     *
     * @event
     */
    readonly arcgisChartsConfigScatterplotSizeVariableFieldChange: TargetedEvent<this, void>;
    /**
     * Event emitted when there is a change in X-axis or Y-axis field type.
     *
     * @event
     */
    readonly arcgisChartsConfigScatterplotXYFieldChange: TargetedEvent<this, void>;
    private _messages;
}
