import { c as p } from "../../chunks/runtime.js";
import "@arcgis/charts-spec";
import "lodash-es";
import "d3-array";
import { P as c } from "../../chunks/interfaces.js";
import "@arcgis/core/geometry/support/jsonUtils.js";
import "@arcgis/core/rest/support/AttributeBinsQuery.js";
import "@arcgis/core/rest/support/Query.js";
import "@arcgis/core/rest/support/StatisticDefinition.js";
import "@arcgis/core/time/TimeExtent.js";
import "@arcgis/core/core/promiseUtils.js";
import "@arcgis/core/request.js";
import { e as h } from "../../chunks/popover-ui-utils.js";
import { U as m } from "../../chunks/chart-ui-utils2.js";
import { u as d } from "../../chunks/useT9n.js";
import { html as g } from "lit";
import { createRef as f, ref as C } from "lit-html/directives/ref.js";
import { LitElement as v, createEvent as o, safeClassMap as i } from "@arcgis/lumina";
import { css as u } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const s = {
  jsAppFlyout: "js-app-flyout",
  panelChildrenContainer: "panel-children-container"
}, b = u`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}:host{overflow-y:auto;width:min-content}.panel-children-container{display:flex;padding:0 1rem;margin-top:1rem}.panel-children-container calcite-label{flex:1 1 0px;display:flex;width:0px}`;
class x extends v {
  constructor() {
    super(...arguments), this._messages = d(), this.popoverElement = f(), this.arcgisChartsConfigPopoverClose = o(), this.arcgisChartsConfigPopoverOpenChange = o(), this.arcgisChartsConfigSeriesPopoverColorChange = o(), this.arcgisChartsConfigSeriesPopoverNameChange = o();
  }
  static {
    this.properties = { messageOverrides: 0, referenceElement: 2, selectedName: 3, selectedColor: 2, placement: 3, open: 7 };
  }
  static {
    this.styles = b;
  }
  async reposition() {
    await this.popoverElement.value?.reposition();
  }
  willUpdate(e) {
    e.has("open") && (this.hasUpdated || !this.open) && this.openChange();
  }
  updated() {
    h(this.popoverElement.value, this.open), this.hasUpdated || setTimeout(() => {
      this.popoverElement.value?.reposition();
    }, m.PopoverTimer);
  }
  loaded() {
    this.openChange();
  }
  openChange() {
    this.arcgisChartsConfigPopoverOpenChange.emit({ open: this.open });
  }
  seriesNameChange(e) {
    const t = e.target.value;
    this.selectedName !== t && (this.selectedName = t, this.arcgisChartsConfigSeriesPopoverNameChange.emit({ name: t }));
  }
  closePopover() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit();
  }
  colorChange(e) {
    const t = e instanceof CustomEvent ? e.detail : e, [a, r, n] = t, l = c * 255;
    this.selectedColor = [a, r, n, l], this.arcgisChartsConfigSeriesPopoverColorChange.emit({ color: [a, r, n, l] });
  }
  render() {
    const e = this.selectedColor;
    return g`<div class=${i({
      [s.jsAppFlyout]: !0
    })}><calcite-popover .referenceElement=${this.referenceElement ?? document.body} .placement=${this.placement} .open=${this.open} @calcitePopoverClose=${this.closePopover} label ${C(this.popoverElement)}><calcite-panel .heading=${this._messages.seriesElement} closable .closed=${!this.open} @calcitePanelClose=${this.closePopover}><div class=${i(s.panelChildrenContainer)}><calcite-label>${this._messages.label}<calcite-input type=text .value=${this.selectedName} @calciteInputInput=${this.seriesNameChange}></calcite-input></calcite-label></div><div class=${i(s.panelChildrenContainer)}><arcgis-charts-config-colors .heading=${this._messages.symbolColor} .rgba=${e} @colorSelect=${this.colorChange}></arcgis-charts-config-colors></div></calcite-panel></calcite-popover></div>`;
  }
}
p("arcgis-charts-config-bar-chart-series-popover", x);
export {
  x as ArcgisChartsConfigBarChartSeriesPopover
};
