import { WebChart } from '@arcgis/charts-spec';
import { ChartConfig } from '../../utils';
import { ModelParams } from '../interfaces/chart-interfaces';
import { LayerInfo, ModelTypes } from '../interfaces/common';
import { SerialChartModel } from '../serial-chart-model/serial-chart-model';
export declare class BarChartModel extends SerialChartModel {
    /**
     * Common strings used in the model.
     * @category Private
     */
    private commonStrings;
    /**
     * Current configuration used for the bar chart.
     */
    protected _config: ChartConfig<typeof ModelTypes.BarChart, WebChart>;
    protected _chartType: "barSeries";
    protected layerInfo: LayerInfo;
    setup(params: ModelParams<ChartConfig<typeof ModelTypes.BarChart>>): Promise<void>;
    protected generateDefaultConfig(): Promise<Omit<typeof this._config, "iLayer">>;
    /**
     * Gets whether to hide oversized data labels of the side-by-side series based on the series index. If the index is out of bounds, it will return `undefined`.
     * @param {number} seriesIndex The index of the series.
     * @returns {boolean | undefined}
     */
    getSeriesHideOversizedSideBySideLabels(seriesIndex: number): boolean | undefined;
    /**
     * Sets whether to hide oversized data labels of the side-by-side series based on the series index.
     * @param {boolean} hide The value for hiding oversized data labels.
     * @param {number} seriesIndex The index of the series.
     */
    setSeriesHideOversizedSideBySideLabels(hide: boolean | undefined, seriesIndex: number): void;
    /**
     * Gets whether to hide oversized stacked labels of the series based on the series index. If the index is out of bounds, it will return `undefined`.
     * @param {number} seriesIndex The index of the series.
     * @returns {boolean | undefined}
     */
    getSeriesHideOversizedStackedLabels(seriesIndex: number): boolean | undefined;
    /**
     * Sets whether to hide oversized stacked labels of the series based on the series index.
     * @param {boolean} hide The value for hiding oversized stacked labels.
     * @param {number} seriesIndex The index of the series.
     */
    setSeriesHideOversizedStackedLabels(hide: boolean | undefined, seriesIndex: number): void;
    /**
     * Resets the series styling to the default styling.
     */
    resetSeriesStyling(): void;
    /**
     * Returns whether the series styling is able to be reset.
     * @returns {boolean}
     */
    resetAvailable(): boolean;
}
