/// <reference types="../../index.d.ts" />
import { Color, RESTSimpleLineSymbolStyle } from '@arcgis/charts-spec';
import { PopoverOpenChangePayload } from '../../utils/components/event-payloads';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';

/** @private */
export declare class ArcgisChartsConfigLineChartSeriesPopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * property to which the popover needs to be attached.
     *
     * @category Public
     */
    referenceElement?: HTMLElement;
    /**
     * selected name to show in popover
     *
     * @category Public
     */
    selectedName?: string;
    /**
     * selected color to show in popover
     *
     * @category Public
     */
    selectedColor?: Color;
    /**
     * selected line style to show in popover
     *
     * @category Public
     */
    selectedLineStyle?: RESTSimpleLineSymbolStyle;
    /**
     * selected line width to show in popover
     *
     * @category Public
     */
    selectedLineWidth?: number;
    /**
     * Reference element to show the popover.
     *
     * @category Public
     */
    placement?: HTMLCalcitePopoverElement["placement"];
    /**
     * open or close the popover.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverClose: TargetedEvent<this, void>;
    /**
     * Event emitted when the popover is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverOpenChange: TargetedEvent<this, PopoverOpenChangePayload>;
    /**
     * Event when there is a change in series color.
     *
     * @category Public
     */
    readonly arcgisChartsConfigSeriesPopoverColorChange: TargetedEvent<this, {
        color: Color;
    }>;
    /**
     * Event when there is a change in series line style.
     *
     * @category Public
     */
    readonly arcgisChartsConfigSeriesPopoverLineStyleChange: TargetedEvent<this, {
        lineStyle: RESTSimpleLineSymbolStyle;
    }>;
    /**
     * Event when there is a change in series line width.
     *
     * @category Public
     */
    readonly arcgisChartsConfigSeriesPopoverLineWidthChange: TargetedEvent<this, {
        lineWidth: number;
    }>;
    /**
     * Event when there is a change in series name.
     *
     * @category Public
     */
    readonly arcgisChartsConfigSeriesPopoverNameChange: TargetedEvent<this, {
        name: string;
    }>;
    private _messages;
}
