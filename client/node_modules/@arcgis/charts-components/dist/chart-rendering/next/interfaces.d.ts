import { Container, Graphics, ISpritePointerEvent } from '@amcharts/amcharts5';
import { IPointerEvent } from '@amcharts/amcharts5/.internal/core/render/backend/Renderer.js';
import { RadarChart } from '@amcharts/amcharts5/radar.js';
import { XYChart, XYCursor } from '@amcharts/amcharts5/xy.js';
import { CommonStrings, ErrorStrings, QueryObject } from '../../utils';
import { TimeIntervalInfo, WebChart, WebChartDataTypes, WebGaugeChart } from '@arcgis/charts-spec';
import { AxisLabelFormatCallback, GuideTooltipFormatCallback } from '../common/interfaces';
export declare const amChartsV5License = "AM5C241025748";
export declare const EventTypes: {
    readonly Hidden: "hidden";
    readonly Shown: "shown";
    readonly SelectEnded: "selectended";
    readonly Over: "over";
    readonly Out: "out";
    readonly SizeChanged: "sizechanged";
    readonly VisibilityChanged: "visibilitychanged";
    readonly PositionChanged: "positionchanged";
    readonly Validated: "validated";
    readonly DataValidated: "datavalidated";
    readonly DataItemsValidated: "dataitemsvalidated";
    readonly Inited: "inited";
    readonly Opened: "opened";
    readonly Closed: "closed";
    readonly ChildAdded: "childadded";
    readonly DataItemChanged: "dataitemchanged";
    readonly LayoutValidated: "layoutvalidated";
    readonly BoundsChanged: "boundschanged";
    readonly PointerUp: "pointerup";
    readonly PointerDown: "pointerdown";
    readonly PointerOver: "pointerover";
    readonly FrameEnded: "frameended";
    readonly FrameStarted: "framestarted";
    readonly Click: "click";
    readonly Push: "push";
};
export type EventTypes = (typeof EventTypes)[keyof typeof EventTypes];
export type SelectEndedEvent = {
    originalEvent: IPointerEvent;
} & {
    type: "selectended";
    target: XYCursor;
};
export type PointerUpEvent = ISpritePointerEvent & {
    type: "pointerup";
    target: Container | Graphics;
};
export type ClickEvent = ISpritePointerEvent & {
    type: "click";
    target: Container;
};
export interface UpdateAxesCommonProps<ChartType extends RadarChart | XYChart, ChartConfigType extends WebChart | WebGaugeChart> {
    chart: ChartType;
    chartConfig: ChartConfigType;
    data?: WebChartDataTypes;
    queryObject: QueryObject;
    xAxisLabelFormatter?: AxisLabelFormatCallback;
    commonStrings: CommonStrings;
    errorStrings: ErrorStrings;
}
export interface UpdateAxesProps extends UpdateAxesCommonProps<XYChart, WebChart> {
    timeIntervalInfo?: TimeIntervalInfo;
    axisLabelsBehaviorChanged?: [boolean, boolean];
    yAxisLabelFormatter?: AxisLabelFormatCallback;
    secondaryYAxisLabelFormatter?: AxisLabelFormatCallback;
    guideTooltipFormatter?: GuideTooltipFormatCallback;
    anyGuideAboveChanged?: boolean;
}
