/// <reference types="../../index.d.ts" />
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ModelTypes } from '../../model';

/** @private */
export declare class ArcgisChartsConfigSelectChartTypePopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * header title string to be shown for the component.
     *
     * @category Public
     */
    headerTitle?: string;
    /**
     * Id of the layer associated with the chart to be added.
     *
     * @category Public
     */
    layerId: string | undefined;
    /**
     * Open the closed panel.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * Reference element to position the popover off of
     *
     * @category Public
     */
    popoverReferenceElement?: HTMLCalciteFabElement;
    /**
     * Reference element to position the popover off of
     *
     * @category Public
     */
    popoverPlacement?: HTMLCalcitePopoverElement["placement"];
    /**
     * The chart type selected
     *
     * @category Public
     */
    selectedModelType?: Extract<ModelTypes, "barChart" | "boxPlot" | "histogram" | "lineChart" | "pieChart" | "scatterplot">;
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * Event emitted when the chart type is closed.
     *
     * @category Public
     */
    readonly arcgisChartsConfigPopoverClose: TargetedEvent<this, void>;
    /**
     * Event emitted when the chart type is selected.
     *
     * @category Public
     */
    readonly arcgisChartsConfigSelectChartTypeChange: TargetedEvent<this, void>;
    private _messages;
}
