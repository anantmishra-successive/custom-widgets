/// <reference types="../../index.d.ts" />
import { IField } from '@arcgis/charts-spec';
import { BoxPlotDataPopoverKinds } from '../../interfaces';
import { PropertyValues } from 'lit';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';

/** @private */
export declare class ArcgisChartsConfigBoxPlotPopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Heading for the popover component
     *
     * @category Public
     */
    headingTitle?: string;
    /**
     * Reference element to show the popover.
     *
     * @category Public
     */
    referenceElement?: HTMLElement;
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     */
    contentKind?: BoxPlotDataPopoverKinds;
    /**
     * Fields Information of the Feature layer
     *
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * Flag to disable custom sort option.
     *
     * @category Public
     * @default false
     */
    isCustomSortDisabled: boolean;
    /**
     * Currently selected content (field names, for example)
     * to pass on to the popover.
     *
     * @category Public
     */
    selectedContent: string[] | string | undefined;
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    readonly arcgisChartsConfigBoxPlotDataPopoverChange: TargetedEvent<this, {
        contentKind?: BoxPlotDataPopoverKinds;
        value: string[];
    }>;
    readonly arcgisChartsConfigPopoverClose: TargetedEvent<this, void>;
    private _messages;
}
