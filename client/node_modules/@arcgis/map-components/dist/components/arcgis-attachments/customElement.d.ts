/// <reference types="@arcgis/core/interfaces.d.ts" />
/// <reference types="../../index.d.ts" />
import { Use } from '@arcgis/lumina/controllers';
import { default as Attachments } from '@arcgis/core/widgets/Attachments.js';
import { PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { ArcgisReferenceElement } from '../../utils/component-utils';

declare const useAttachmentsWidget: (component: LitElement & Pick<Attachments, "icon" | "label" | "viewModel" | "graphic" | "capabilities" | "displayType"> & {
    state?: unknown;
    viewModel?: __esri.AttachmentsViewModel | undefined;
    closed?: boolean;
    icon: import('@arcgis/components-utils').Nil | string;
    label: import('@arcgis/components-utils').Nil | string;
    referenceElement?: ArcgisReferenceElement | string;
    position: __esri.UIPosition;
    arcgisReady: import('@arcgis/lumina').EventEmitter;
    arcgisPropertyChange: import('@arcgis/lumina').EventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
        view?: __esri.LinkChartView | __esri.MapView | __esri.SceneView;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}) => Attachments;
/**
 * [Read more...](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-attachments/)
 *
 * @internal
 */
export declare class ArcgisAttachments extends LitElement {
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporarily hide it. If this
     * is set, make sure to call the [destroy](https://developers.arcgis.com/javascript/latest/references/map-components/arcgis-attachments/#destroy) method when you are done to
     * prevent memory leaks.
     *
     * @default false
     */
    autoDestroyDisabled: boolean;
    /**
     * Configures the attachment editing functionality that can be performed by the user.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Attachments.html#capabilities)
     */
    capabilities: __esri.AttachmentsCapabilities;
    /**
     * A string value indicating how to display an attachment.
     *
     * @default "auto"
     */
    displayType: "auto" | "list" | "preview";
    /**
     * The graphic for the attachments.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Attachments.html#graphic)
     */
    graphic: nullish | __esri.Graphic;
    /** @default false */
    hideAddButton: boolean | undefined;
    /** @default false */
    hideAddSubmitButton: boolean | undefined;
    /** @default false */
    hideCancelAddButton: boolean | undefined;
    /** @default false */
    hideCancelUpdateButton: boolean | undefined;
    /** @default false */
    hideDeleteButton: boolean | undefined;
    /** @default false */
    hideErrorMessage: boolean | undefined;
    /** @default false */
    hideProgressBar: boolean | undefined;
    /** @default false */
    hideUpdateButton: boolean | undefined;
    /**
     * Icon which represents the component.
     * Typically used when the component is controlled by another component (e.g. by the Expand component).
     *
     * @see [Calcite Icons](https://developers.arcgis.com/calcite-design-system/icons/)
     * @default "attachment"
     */
    icon: string;
    /**
     * The widget's label.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Widget.html#label)
     */
    label: string | nullish;
    /** @default "bottom-left" */
    position: __esri.UIPosition;
    /**
     * By assigning the `id` attribute of the Map or Scene component to this property, you can position a child component anywhere in the DOM while still maintaining a connection to the Map or Scene.
     *
     * @see [Associate components with a Map or Scene component](https://developers.arcgis.com/javascript/latest/programming-patterns/#associate-components-with-a-map-or-scene-component)
     */
    referenceElement?: ArcgisReferenceElement | string;
    /**
     * The current state of the component.
     *
     * @default "ready"
     */
    readonly state: "ready" | "loading" | "disabled";
    /**
     * Indicates whether there is currently an attachment being added, updated or deleted.
     *
     * [Read more...](https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Attachments.html#submitting)
     *
     * @default false
     */
    readonly submitting: boolean;
    /** Permanently destroy the component. */
    destroy(): Promise<void>;
    /** Emitted when the value of a property is changed. Use this to listen to changes to properties. */
    readonly arcgisPropertyChange: TargetedEvent<this, {
        name: "state" | "submitting";
    }>;
    /** Emitted when the component associated with a map or scene view is is ready to be interacted with. */
    readonly arcgisReady: TargetedEvent<this, void>;
}
export {};
