/// <reference types="../../index.d.ts" />
import { IField, WebChartTemporalBinningUnits } from '@arcgis/charts-spec';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { PropertyValues } from 'lit';
import { IntervalPopoverProps, LineChartDataPopoverKinds } from '../../interfaces';

/** @private */
export declare class ArcgisChartsConfigLineChartPopover extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Heading for the popover component
     *
     * @category Public
     */
    headingTitle?: string;
    /**
     * Reference element to show the popover.
     *
     * @category Public
     */
    referenceElement?: HTMLElement;
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     * @default false
     */
    open?: boolean;
    /**
     * boolean to open or close the popover.
     *
     * @category Public
     */
    contentKind?: LineChartDataPopoverKinds;
    /**
     * Fields Information of the Feature layer
     *
     * @category Public
     */
    layerFieldsInfo: IField[];
    /**
     * Currently selected content (field names, for example)
     * to pass on to the popover.
     *
     * @category Public
     */
    selectedContent: IntervalPopoverProps | string[] | string | undefined;
    /**
     * Calls `reposition()` method on popover element.
     *
     * @category Public
     */
    reposition(): Promise<void>;
    /**
     * Event emitted when the content of the popover is changed.
     *
     * @event
     */
    readonly arcgisChartsConfigLineChartDataPopoverChange: TargetedEvent<this, {
        contentKind: LineChartDataPopoverKinds | undefined;
        value: string[] | [{
            intervalSize: number;
            intervalUnits: WebChartTemporalBinningUnits;
        }];
    }>;
    /**
     * Event emitted when the popover is closed.
     *
     * @event
     */
    readonly arcgisChartsConfigLineChartPopoverClose: TargetedEvent<this, void>;
    private _messages;
}
