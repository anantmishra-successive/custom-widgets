import { WebChart } from '@arcgis/charts-spec';
import { ChartOptions } from '../../chart-rendering/common/interfaces';
import { ArcgisChart } from '../../components/arcgis-chart/customElement.js';
export declare let chartOptions: ChartOptions;
/**
 * Saves the chart options from the first chart. This helps saving and reapplying the options when using the
 * "re-create chart" button.
 */
export declare function saveChartOptions(): void;
/** Resetting the chart options. This will be used when jumping from a story to another. */
export declare function resetChartOptions(): void;
export declare function resetChartInstances(): void;
export declare function getChartElement(index?: number): HTMLArcgisChartElement | undefined;
export declare function getVersionedChartInstance(version: "v4" | "v5"): HTMLArcgisChartElement | undefined;
export declare function getAllChartElements(): HTMLArcgisChartElement[];
export declare function addChartElement(index: number, instance: HTMLArcgisChartElement): void;
export declare const CategoryNames: {
    readonly TabSeries: "Series";
    readonly TabAxes: "Axes";
    readonly TabXAxis: "X-Axis";
    readonly TabYAxis: "Y-Axis";
    readonly TabNeedle: "Needle";
    readonly TabInnerLabel: "Inner label";
    readonly TabGeneral: "General";
    readonly TabLegend: "Legend";
    readonly TabGuides: "Guides";
    readonly TabOverlays: "Overlays";
    readonly TabTimeBinning: "Time binning";
    readonly TabOther: "Other";
    readonly TabEditor: "Config editor";
    readonly TabChartOptions: "Chart component properties";
    readonly TabDataLimitations: "Data limitations";
    readonly TabSelectionOptions: "Selection options";
    readonly TabMessageOptions: "Messaging options";
    readonly TabQueryOptions: "Query options";
    readonly TabLoaderOptions: "Loader options";
};
export type CategoryNames = (typeof CategoryNames)[keyof typeof CategoryNames];
export declare const ControlLabels: {
    readonly ReturnSelectionOIDs: "Return selection OIDs";
    readonly SetTimeBinningInfoWhenNotProvided: "Set time binning info when not provided";
    readonly ReturnSelectionIndexes: "Return selection indexes";
    readonly ReturnFeaturesExtent: "Return features extent";
    readonly UsePopupTemplateFieldsInfo: "Use popup template fields info";
    readonly SelectionTheme: "Selection theme";
    readonly FilterBySelection: "Filter by selection";
    readonly ActionMode: "Action mode";
    readonly CursorRange: "Cursor range";
    readonly CreateMessage: "Create message (placeholder)";
    readonly HideLoaderAnimation: "Hide loader animation";
    readonly LoaderColors: "Loader colors";
    readonly HideEmptySeries: "Hide empty series";
    readonly ReplaceNoValueCategoryWithZero: "Replace no value category with zero";
    readonly RuntimeDataFilters: "Runtime data filters";
    readonly AddMissingSplitBySeries: "Add missing split-by series";
    readonly IgnoreSmoothRenderingLimit: "Ignore smooth rendering limit";
    readonly DisplayMessageWhenNoData: "Display message when no data (message option)";
    readonly NullAsValid: "Consider null as valid (message option)";
    readonly DisplayMessageWhenLogAxisNotPossible: "Display message when log axis not possible (message option)";
    readonly AllowUsingObjectIdStat: "Allow using OBJECTID statistic (message option)";
    readonly DisableTogglingLegendItems: "Disable toggling legend items";
    readonly IgnoreViewExtent: "Ignore view extent";
    readonly SelectionDataItems: "Selection data items";
    readonly SelectionOIDsList: "Selection object ids (comma separated list, e.g. 15,100,101,534)";
    readonly SelectionOIDs: "Selection object ids";
    readonly Config: "Config editor (not updated by the controls)";
    readonly RotateChart: "Rotate chart";
    readonly ResetChart: "Re-create chart";
    readonly ExportConfig: "Download config";
    readonly ExportImage: "Export PNG";
    readonly ExportImageNext: "Export PNG (Next)";
    readonly ExportAsTable: "Export As Table";
    readonly DataType: "Data type";
    readonly StackedType: "Stacked type";
    readonly StackNegativeValuesOption: "Stack negative values to base line";
    readonly InnerRadius: "Inner radius";
    readonly StartAngle: "Start angle";
    readonly SliceGroupingThreshold: "Slice grouping threshold";
    readonly SliceGroupingName: "Slice grouping name";
    readonly EndAngle: "End angle";
    readonly PieValuePrefix: "Add prefix to values";
    readonly PieValueSuffix: "Add suffix to values";
    readonly PiePercentagePrefix: "Add prefix to percentages";
    readonly PiePercentageSuffix: "Add suffix to percentages";
    readonly PieDataLabelsCharacterLimit: "Character limit on data labels";
    readonly PieDisplayCategoryOnLegend: "Display category on legend";
    readonly PieDisplayValueOnLegend: "Display value on legend";
    readonly PieDisplayPercentageOnLegend: "Display percentage on legend";
    readonly PieDisplayCategoryOnDataLabel: "Display category on data label";
    readonly PieDisplayValueOnDataLabel: "Display value on data label";
    readonly PieDisplayPercentageOnDataLabel: "Display percentage on data label";
    readonly PieDisplayCategoryOnTooltip: "Display category on tooltip";
    readonly PieDisplayValueOnTooltip: "Display value on tooltip";
    readonly PieDisplayPercentageOnTooltip: "Display percentage on tooltip";
    readonly PieDisplayNumericValues: "Display numeric values";
    readonly PieDisplayPercentageValues: "Display percentage values";
    readonly GaugeNeedlePin: "Display needle's pin";
    readonly GaugeNeedleStartWidth: "Needle's start width";
    readonly GaugeNeedleEndWidth: "Needle's end width";
    readonly GaugeNeedleInnerRadius: "Needle's inner radius";
    readonly GaugeInnerLabel: "Inner label visible";
    readonly GaugeInnerLabelPosition: "Inner label vertical position";
    readonly GaugeInnerLabelFontSize: "Inner label font size";
    readonly GaugeTicks: "Axis ticks visible";
    readonly GaugeFirstLastLabels: "Display only first and last labels";
    readonly GaugeLabelsIncrement: "Labels increment";
    readonly Title: "Title visible";
    readonly TitlePosition: "Title position";
    readonly Subtitle: "Subtitle visible";
    readonly Footer: "Footer visible";
    readonly Legend: "Legend visible";
    readonly LegendRoundedMarkers: "Round markers";
    readonly LegendTitle: "Legend title";
    readonly LegendPosition: "Legend position";
    readonly LegendLabelMaxWidth: "Labels max width";
    readonly LegendValueLabelMaxWidth: "Value labels max width";
    readonly DataLabels: "Data labels visible";
    readonly DataLabelsOffset: "Data labels offset (px)";
    readonly DataLabelsInside: "Data labels inside";
    readonly DataLabelsAlign: "Align data labels";
    readonly DataLabelsOptimize: "Optimize data labels overlap";
    readonly DataTooltipsVisible: "Data tooltip visible";
    readonly DataTooltipsReverseColor: "Reverse tooltip color";
    readonly Trendline: "Trendline";
    readonly Mean: "Mean";
    readonly Median: "Median";
    readonly StandardDeviation: "Standard deviation";
    readonly NormalDistribution: "Normal distribution";
    readonly HAxisBehavior: "Horizontal axis labels behavior";
    readonly VAxisBehavior: "Vertical axis labels behavior";
    readonly XAxis: "X-Axis visible";
    readonly XAxisTitle: "X-Axis title";
    readonly XAxisTickSpacing: "X-axis tick spacing (minGridDistance)";
    readonly YAxisTickSpacing: "Y-axis tick spacing (minGridDistance)";
    readonly XAxisTitleHPosition: "X-Axis title horizontal position";
    readonly XAxisTitleVPosition: "X-Axis title vertical position";
    readonly XAxisLabels: "X-Axis labels";
    readonly YAxis: "Y-Axis visible";
    readonly YAxisTitleVPosition: "Y-Axis title vertical position";
    readonly YAxisTitleHPosition: "Y-Axis title horizontal position";
    readonly YAxisMinimum: "Y-Axis minimum";
    readonly YAxisMaximum: "Y-Axis maximum";
    readonly XAxisMinimum: "X-Axis minimum";
    readonly XAxisMaximum: "X-Axis maximum";
    readonly XAxisLog: "X-Axis logarithmic";
    readonly XAxisBuffer: "X-Axis buffer";
    readonly XAxisCursorTooltip: "X-Axis cursor tooltip visible";
    readonly YAxisTitle: "Y-Axis title";
    readonly YAxisLabels: "Y-Axis labels";
    readonly XAxisGuides: "X-Axis guides";
    readonly YAxisGuides: "Y-Axis guides";
    readonly YAxisLog: "Y-Axis logarithmic";
    readonly YAxisBuffer: "Y-Axis buffer";
    readonly YAxisCursorTooltip: "Y-Axis cursor tooltip visible";
    readonly GuidesAbove: "Guides above";
    readonly GuidesHAlign: "Guides horizontal alignment";
    readonly GuidesVAlign: "Guides vertical alignment";
    readonly ColorMatch: "Color match";
    readonly HistogramBins: "Number of bins (FL mode only)";
    readonly HistogramTransformation: "Transformation type";
    readonly PieChartSlicesLimit: "Maximum slices on the chart";
    readonly GaugeByFeatureLimit: "Maximum number of features";
    readonly BarSeriesCountLimit: "Maximum number of series for bar chart";
    readonly OneBarSeriesLimitTotal: "Maximum elements if one series";
    readonly TwoBarSeriesLimitPerSeries: "Maximum elements per series if two series";
    readonly TwoBarSeriesLimitTotal: "Maximum elements in total if two series";
    readonly ThreeBarSeriesLimitPerSeries: "Maximum elements per series if three series";
    readonly ThreeBarSeriesLimitTotal: "Maximum elements in total if three series";
    readonly LineSeriesCountLimit: "Maximum number of series for line chart";
    readonly OneLineSeriesLimitTotal: "Maximum markers if one series";
    readonly TwoLineSeriesLimitPerSeries: "Maximum markers per series if two series";
    readonly TwoLineSeriesLimitTotal: "Maximum markers in total if two series";
    readonly ThreeLineSeriesLimitPerSeries: "Maximum markers per series if three series";
    readonly ThreeLineSeriesLimitTotal: "Maximum markers in total if three series";
    readonly ScatterplotLimitBeforeAggregation: "Aggregation threshold";
    readonly ScatterplotLimitAfterAggregation: "Number maximum of points after aggregation";
    readonly SizePolicyField: "Size policy field";
    readonly SizePolicyMin: "Size policy min";
    readonly SizePolicyMax: "Size policy max";
    readonly SizePolicyScaleType: "Size policy scale type";
    readonly LineSmoothed: "Smoothed line";
    readonly LineShowArea: "Show area";
    readonly LineShowMarker: "Show marker";
    readonly BinTemporalData: "Bin temporal data";
    readonly TimeBinningUnit: "Interval unit";
    readonly TimeBinningSize: "Interval size";
    readonly TimeBinningNullPolicy: "Empty bins";
    readonly TimeBinningSnap: "Interval alignment";
    readonly TimeBinningTrim: "Trim incomplete interval";
    readonly ScrollbarXVisible: "X-Axis scrollbar";
    readonly ScrollbarYVisible: "Y-Axis scrollbar";
    readonly CursorCrosshairHorizontalVisible: "Horizontal crosshair visible";
    readonly CursorCrosshairVerticalVisible: "Vertical crosshair visible";
    readonly IntegersOnlyXAxis: "X-Axis integer only labels";
    readonly IntegersOnlyYAxis: "Y-Axis integer only labels";
    readonly QueryNulls: "Display null values";
    readonly ToggleMap: "Show map";
    readonly FilterByExtent: "Filter by extent";
    readonly ResetZoom: "Full extent";
    readonly SelectionIndexes: "Select by indexes";
    readonly SelectionItems: "Select by items";
    readonly SwitchSelection: "Switch the selection";
    readonly ClearSelection: "Clear the selection";
    readonly BoxPlotOutliersVisible: "Outliers";
    readonly BoxPlotZScore: "Standardization (z-score)";
    readonly BoxPlotCountLimit: "Maximum number of series for box plot";
    readonly OneBoxPlotSeriesLimitTotal: "Maximum boxes if one series";
    readonly TwoBoxPlotsLimitPerSeries: "Maximum boxes per series if two series";
    readonly TwoBoxPlotsLimitTotal: "Maximum boxes in total if two series";
    readonly ThreeBoxPlotsLimitPerSeries: "Maximum boxes per series if three series";
    readonly ThreeBoxPlotsLimitTotal: "Maximum boxes in total if three series";
    readonly BoxPlotOutliersLimitTotal: "Maximum outliers for box plot";
    readonly LayerFilterChangePolicy: "Update chart on layer filter change";
    readonly ViewTimeExtentChangePolicy: "Update chart on view time extent change";
    readonly LayerRendererChangePolicy: "Update chart on layer renderer change";
    readonly LayerFieldsChangePolicy: "Update chart on layer fields change";
};
export type ControlLabels = (typeof ControlLabels)[keyof typeof ControlLabels];
export declare const ConfigFileKey: {
    readonly ChicagoCrimeBarChart: "ChicagoCrimeBarChart";
    readonly ChicagoCrimeLineChart: "ChicagoCrimeLineChart";
    readonly ChicagoCrimeBarLineChart: "ChicagoCrimeBarLineChart";
    readonly ChicagoCrimeRadarChart: "ChicagoCrimeRadarChart";
    readonly ChicagoCrimeGauge: "ChicagoCrimeGauge";
    readonly ChicagoCrimeHistogram: "ChicagoCrimeHistogram";
    readonly ChicagoCrimePieChart: "ChicagoCrimePieChart";
    readonly ChicagoCrimeScatterplot: "ChicagoCrimeScatterplot";
    readonly AirBnBBarChart: "AirBnBBarChart";
    readonly AirBnBLineChart: "AirBnBLineChart";
    readonly AirBnBRadarChart: "AirBnBRadarChart";
    readonly AirBnBBarLineChart: "AirBnBBarLineChart";
    readonly AirBnBBoxPlot: "AirBnBBoxPlot";
    readonly AirBnBGauge: "AirBnBGauge";
    readonly AirBnBHistogram: "AirBnBHistogram";
    readonly AirBnBPieChart: "AirBnBPieChart";
    readonly AirBnBScatterplot: "AirBnBScatterplot";
    readonly IncomeDiversityBoxPlot: "IncomeDiversityBoxPlot";
    readonly FeatureCollectionBarChart: "featureCollectionBarChart";
    readonly FeatureCollectionLineChart: "featureCollectionLineChart";
    readonly FeatureCollectionRadarChart: "featureCollectionRadarChart";
    readonly FeatureCollectionBarLineChart: "featureCollectionBarLineChart";
    readonly FeatureCollectionScatterplot: "featureCollectionScatterplot";
    readonly FeatureCollectionPieChart: "featureCollectionPieChart";
    readonly FeatureCollectionGauge: "featureCollectionGauge";
    readonly FeatureCollectionBoxPlot: "featureCollectionBoxPlot";
    readonly RendererClassBreakBarChart: "rendererClassBreakBarChart";
    readonly RendererClassBreakLineChart: "rendererClassBreakLineChart";
    readonly RendererClassBreakPieChart: "rendererClassBreakPieChart";
    readonly RendererClassBreakHistogram: "rendererClassBreakHistogram";
    readonly RendererClassBreakScatterplot: "rendererClassBreakScatterplot";
    readonly RendererClassBreakBoxPlot: "rendererClassBreakBoxPlot";
    readonly SpecialColorMatch: "specialColorMatch";
    readonly SpecialSubtypeDomain: "specialSubtypeDomain";
    readonly SpecialSort: "specialSort";
    readonly SpecialSeriesSort: "specialSeriesSort";
    readonly SpecialNullValue: "specialNullValue";
    readonly SpecialDualAxis: "specialDualAxis";
    readonly SpecialTemporalBinning: "specialTemporalBinning";
    readonly SpecialGuidesLabel: "specialGuidesLabel";
    readonly SpecialTest: "specialTest";
};
export type ConfigFileKey = (typeof ConfigFileKey)[keyof typeof ConfigFileKey];
export declare const configFiles: {
    file: {
        charts: WebChart[];
    };
    key: string;
    iLayerKey?: string;
}[];
