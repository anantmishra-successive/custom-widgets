import { ISimpleFillSymbol, ISimpleLineSymbol, ISimpleMarkerSymbol, WebChartTextSymbol } from '@arcgis/charts-spec';
import { LabelProperties } from '../../../common/defaults/interfaces';
import { EsriColor } from '../../types';
import { MappedFillSymbol, MappedLineSymbol, MappedMarkerSymbol, MappedTextSymbol } from './interfaces';
/**
 * Maps Esri's symbol (SimpleLineSymbol, SimpleFillSymbol, SimpleMarkerSymbol) with color ramp options to an object informing the charting library **how to draw the symbol**
 *
 * @param props.symbol The symbol to map
 * @param props.defaultToColorFromRamp Indicates whether to use the color ramp to set the symbol's color if it is not defined.
 * @param props.colorRampIndex The index of the color in the color ramp to use for the symbol's color.
 * @param props.isChartFillSymbol Indicates whether the symbol is a fill symbol for a chart.
 * @param props.chartBackgroundColor The background color of the chart.
 * @returns
 */
export declare function mapSymbol<T extends ISimpleFillSymbol | ISimpleLineSymbol | ISimpleMarkerSymbol>(props: {
    symbol: T;
    defaultToColorFromRamp?: boolean;
    colorRampIndex?: number;
    isChartFillSymbol?: boolean;
    chartBackgroundColor?: EsriColor;
}): MappedFillSymbol | MappedLineSymbol | MappedMarkerSymbol | undefined;
/**
 * Maps Esri's [WebChartTextSymbol](https://esri.github.io/arcgis-rest-js/api/types/WebChartTextSymbol/) to an object informing the charting library **how to format text**
 * Properties that will not be mapped are:
 * - `style`: because there is no info on what it expresses. Font style is expressed via `WebChartTextSymbol.font.style` instead.
 *
 * @param input
 */
export declare function mapTextSymbol(input: WebChartTextSymbol, isRTL: boolean, defaults?: LabelProperties): MappedTextSymbol;
