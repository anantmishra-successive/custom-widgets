import { Graphics, Root, Series, Sprite, Template, Tooltip } from '@amcharts/amcharts5';
import { PieSeries } from '@amcharts/amcharts5/percent.js';
import { RadarLineSeries } from '@amcharts/amcharts5/radar.js';
import { XYSeries, ColumnSeries, LineSeries } from '@amcharts/amcharts5/xy.js';
import { DateTimeFormatOptions, NumberFormatOptions, WebChartAxis, WebChartBarChartSeries, WebChartBoxPlotSeries, WebChartDataItemValue, WebChartLineChartSeries, WebChartRadarChartSeries } from '@arcgis/charts-spec';
import { ChartTypes } from '../../../../../utils';
import { BarAndLineChartTooltipProps } from '../interfaces';
/**
 * Adding an extra padding on the tooltip's label to avoid its scrollbar to show up.
 * It shouldn't show up at all but we didn't find another viable alternative.
 * Refer to: https://devtopia.esri.com/WebGIS/arcgis-charts/issues/7561
 *
 * @param tooltip the tooltip to apply the padding too
 */
export declare function setTooltipPadding(tooltip: Tooltip): void;
/**
 * Handles the tooltip color reversion.
 *
 * @param tooltip The tooltip to reverse the color on
 * @param reverseColor Whether to reverse the color or not
 */
export declare function reverseTooltipColor(tooltip: Tooltip, reverseColor?: boolean): void;
/**
 * Adds HTML content to the chart tooltip
 *
 * @param element The bullet element which has the tooltip on it
 * @param series The series on which to initialize the tooltip
 */
export declare function initializeLineAndRadarChartTooltip(element: Template<Graphics>, series: LineSeries | RadarLineSeries): void;
/**
 * Initializes the tooltip associated to the markers on a series
 *
 * @param series The series on which to initialize the tooltip
 */
export declare function initializeSeriesTooltip(series: PieSeries | XYSeries): Tooltip;
/**
 * Initializes the tooltip associated to the markers on a series
 * @param root The root of the bullet
 * @param series The series on what the bullet is associated with
 */
export declare function initializeBulletTooltip(root: Root, series: PieSeries | XYSeries): Tooltip;
/**
 * A callback to check if tooltip needs to be reversed
 *
 * @param tooltip The tooltip to reverse color
 * @param series the series parent of the element
 */
export declare function tooltipReverseColorCallback(tooltip: Tooltip, series: Series): void;
/**
 * Adds the html code to the tooltip associated a series
 *
 * @param element The element on which we are adding the html
 * @param series the series parent of the element
 */
export declare function seriesTooltipContentCallback(element: Sprite | Tooltip, series: Series): string;
/**
 * The tooltip x value is the value associated to the x-axis. It can be a category name, a date,
 * a date range, etc.
 *
 * @param props
 */
export declare function getTooltipXContextValue(props: {
    seriesConfig: WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartLineChartSeries | WebChartRadarChartSeries;
    setTimeBinningInfoWhenNotProvided?: boolean;
    xAxisValueFormat?: WebChartAxis["valueFormat"];
    dataTooltipValueFormat?: NumberFormatOptions;
    dataTooltipDateFormat?: DateTimeFormatOptions;
    series: ColumnSeries | LineSeries;
    xValue?: WebChartDataItemValue;
    dateBinningRange?: number[];
}): string | undefined;
export declare function updateBarAndLineChartTooltip(props: BarAndLineChartTooltipProps): void;
/**
 * re initialize a series tooltip when a series data is updated
 * @param chartType The chart type of the series
 * @param series the series of the tooltip
 */
export declare function reInitializeSeriesTooltips(chartType: ChartTypes, series: Series): void;
