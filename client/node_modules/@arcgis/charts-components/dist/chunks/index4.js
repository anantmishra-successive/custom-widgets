import { RESTSymbolType as n, WebChartTypes as r } from "@arcgis/charts-spec";
import { g as s } from "./series-types.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
function S(e) {
  const t = [
    r.BarSeries,
    r.LineSeries,
    r.ComboLineAndBarSeries,
    r.BoxPlotSeries
  ], i = s(e?.series);
  return i !== void 0 ? t.includes(i) : !1;
}
function c(e) {
  const t = [
    r.BarSeries,
    r.LineSeries,
    r.ComboLineAndBarSeries,
    r.RadarSeries
  ], i = s(e?.series);
  return i !== void 0 ? t.includes(i) : !1;
}
function p(e) {
  return e?.type === n.SFS;
}
function y(e) {
  return e?.type === n.SLS;
}
function d(e) {
  return e?.type === n.SMS;
}
function h(e) {
  return e?.type === n.TS;
}
function f(e) {
  return e && "iLayer" in e && e.iLayer;
}
function m(e, t) {
  return e !== void 0 && t !== void 0 && e.series[0]?.type === t;
}
function a(e) {
  return e?.type === r.BoxPlotSeries;
}
function T(e) {
  return e?.type === r.LineSeries;
}
function C(e) {
  return e?.type === r.RadarSeries;
}
function b(e) {
  return e?.type === r.BarSeries;
}
const l = (e) => s(e) === r.BarSeries, L = (e) => s(e) === r.LineSeries, B = (e) => s(e) === r.RadarSeries;
function v(e) {
  return e.every(a);
}
function x(e) {
  return e !== void 0 && e.type === r.NumberAxisFormat;
}
function A(e) {
  return e === void 0 || "bins" in e;
}
function I(e) {
  return e === void 0 || "dataItems" in e;
}
function R(e) {
  return e === void 0 || "dataItems" in e && "r2" in e;
}
function O(e) {
  return "value" in e;
}
export {
  c as a,
  p as b,
  y as c,
  d,
  h as e,
  m as f,
  a as g,
  f as h,
  S as i,
  T as j,
  C as k,
  b as l,
  l as m,
  L as n,
  B as o,
  v as p,
  x as q,
  A as r,
  I as s,
  R as t,
  O as u
};
