System.register(["jimu-core/react","jimu-core","jimu-for-builder","jimu-ui/advanced/setting-components","jimu-ui"],function(e,t){var i={},n={},a={},r={},o={};return{setters:[function(e){i.default=e.default},function(e){n.FormattedMessage=e.FormattedMessage},function(e){a.BaseWidgetSetting=e.BaseWidgetSetting},function(e){r.MapWidgetSelector=e.MapWidgetSelector},function(e){o.Label=e.Label,o.TextInput=e.TextInput}],execute:function(){e((()=>{var e={108:e=>{"use strict";e.exports=a},244:e=>{"use strict";e.exports=n},298:e=>{"use strict";e.exports=r},321:e=>{"use strict";e.exports=o},972:e=>{"use strict";e.exports=i}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,s),a.exports}s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.p="";var u={};return s.p=window.jimuConfig.baseUrl,(()=>{"use strict";s.r(u),s.d(u,{__set_webpack_public_path__:()=>o,default:()=>r});var e=s(972),t=s(244),i=s(108),n=s(298),a=s(321);class r extends i.BaseWidgetSetting{constructor(e){var t;super(e),this.onMapWidgetSelected=e=>{this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})},this.onConfigTextChange=e=>{this.setState({configText:e.currentTarget.value})},this.onSettingChange=()=>{const{configText:e}=this.state;this.props.onSettingChange({id:this.props.id,config:this.props.config.set("configText",e)})},this.state={configText:(null===(t=e.config)||void 0===t?void 0:t.configText)||""}}render(){return e.default.createElement("div",{className:"widget-setting-offline-map-area"},e.default.createElement("div",{className:"mb-3"},e.default.createElement(a.Label,null,e.default.createElement(t.FormattedMessage,{id:"selectMapWidget",defaultMessage:"Select Map Widget"})),e.default.createElement(n.MapWidgetSelector,{useMapWidgetIds:this.props.useMapWidgetIds,onSelect:this.onMapWidgetSelected})),e.default.createElement("div",null,e.default.createElement(a.Label,null,e.default.createElement(t.FormattedMessage,{id:"configText",defaultMessage:"Configuration Text:"})),e.default.createElement(a.TextInput,{value:this.state.configText,onChange:this.onConfigTextChange,onBlur:this.onSettingChange,placeholder:"Enter configuration text"})))}}function o(e){s.p=e}})(),u})())}}});