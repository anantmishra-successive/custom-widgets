/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
import i from"./PRGEUPP3.js";import h from"./VQ33UHMK.js";import g from"./53DAH35C.js";import f from"./UP2W23ZO.js";import e from"./5FUJSGMS.js";import d from"./IODBG2AO.js";import c from"./UHUEI4NU.js";import b from"./3RODMSQG.js";import a from"./PDDPZQ7S.js";import{b as O}from"./TJWJSZZ6.js";import{a as F}from"./IYCX42AE.js";import"./YG7SBKS5.js";export default $arcgis.t(([,,,,,,,{Ka:U,Ra:E,ca:B,ea:h,fa:g,ib:c,ja:I},{i:o},{G:D,H:N,I:b,a:x},,{A:C,B:y,C:et,D:it,E:u,a:V,b:f,c:W,d:z,e:l,f:d,g:P,h:j,i:k,j:T,k:A,l:q,m:Y,n:G,o:H,p:J,q:K,r:m,s:Q,t:R,u:X,v:Z,w:p,x:S,y:$,z:tt},{a:st,c:ot,e:at},{a:nt,b:rt,c:ht,d:gt},ct,{a:ft,b:_,c:lt,d:w}])=>{var L=class extends st{constructor(){super(...arguments),this._chartType=F.BoxPlotSeries}async setup(t){await this.loadConfigFromLayer(t),this.commonStrings=await x(),t.config!==void 0&&await this.updateSeriesFromLayerFilter(),this.resolveSetup()}getCategory(){return A(this._config)}async setCategory(t){await J(t,this._config,this.layerInfo),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setCategory")}async getCustomSortValues(){return await u(this._config,this.layerInfo)}getNumericFields(){return Y(this._config)}async setNumericFields(t){let{layerFieldsInfo:e}=this.layerInfo;typeof t=="string"&&(t=[t]),N(e,t)?(await K(t,this._config,this.layerInfo),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setNumericFields")):console.log("Invalid numericFields")}getSplitByField(){return q(this._config)}async setSplitByField(t){D(this.layerInfo.layerFieldsInfo,t)?(await Q(t,this._config,this.layerInfo),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setSplitByField")):console.log("Invalid splitByField")}getShowOutliers(){return R(this._config)}async setShowOutliers(t){await X(t,this._config,this.layerInfo),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setShowOutliers")}getStandardizeValues(){return H(this._config)}async setStandardizeValues(t){await Z(t,this._config,this.layerInfo),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setStandardizeValues")}getSortOrder(){return p(this._config)}setSortOrder(t,e){S(t,this._config,e),this.emitConfigUpdate("setSortOrder")}getOrderByList(){return C(this._config)}setOrderByList(t){y(t,this._config),this.emitConfigUpdate("setOrderByList")}async updateSeriesFromLayerFilter(){await G({splitByField:this.getSplitByField(),numericFields:this.getNumericFields(),category:this.getCategory(),config:this._config,layerInfo:this.layerInfo}),this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("updateSeriesFromLayerFilter")}getDataFilter(){return et(this._config)}async setDataFilter(t){it(t,this._config);let e=p(this._config);if(e===O.customSort){let i=await u(this._config,this.layerInfo);S(e,this._config,i)}this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("setDataFilter")}getShowMeanLines(){return $(this._config)}async setShowMeanLines(t){let{previousMeanLinesBoxColor:e}=await tt(t,this._config,this.previousMeanLinesBoxColor);this.previousMeanLinesBoxColor=e,this.emitConfigUpdate("setShowMeanLines")}getMeanLinesBoxColor(){return z(this._config)}setMeanLinesBoxColor(t){l(t,this._config),this.emitConfigUpdate("setMeanLinesBoxColor")}async generateDefaultConfig(){let t=await E();return t.series=[await U()],t}async resetConfig(){let t=this._config.id;this._config=await this.generateDefaultConfig(),this._config.id=t,this.dispatchEvent(new CustomEvent("arcgisChartsModelDataChange")),this.emitConfigUpdate("resetConfig")}getSeriesName(t){return V(t,this._config)}setSeriesName(t,e){f(t,e,this._config),this.emitConfigUpdate("setSeriesName")}getSeriesColor(t){return W(t,this._config)}setSeriesColor(t,e){d(t,e,this._config),this.emitConfigUpdate("setSeriesColor")}getSeriesLineStyle(t){let e=this._config.series[t];if(this.getShowMeanLines()===!0&&o(e))return ft(e)}setSeriesLineStyle(t,e){let i=this._config.series[e];this.getShowMeanLines()===!0&&o(i)&&_(t,i),this.emitConfigUpdate("setSeriesLineStyle")}getSeriesLineWidth(t){let e=this._config.series[t];if(this.getShowMeanLines()===!0&&o(e))return lt(e)}setSeriesLineWidth(t,e){let i=this._config.series[e];this.getShowMeanLines()===!0&&o(i)&&w(t,i),this.emitConfigUpdate("setSeriesLineWidth")}getOrderOfSeries(){return P(this._config)}setOrderOfSeries(t){j(t,this._config),this.emitConfigUpdate("setOrderOfSeries")}moveSeries(t,e){k(t,e,this._config),this.emitConfigUpdate("moveSeries")}getBoxPlotSeriesIndexWhenMeanLinesShown(){return T(this._config)}moveCustomSortValuesInOrderByList(t,e){let i=C(this._config),[a]=i.splice(t,1);i.splice(e,0,a),y(i,this._config),this.emitConfigUpdate("moveCustomSortValuesInOrderByList")}resetSeriesStyling(){let t=this.getSeriesLength(),e=this.getShowMeanLines();for(let i=e===!0?1:0;i<t;i+=1){let a=this.getSeriesId(i),r=I({colorIndex:i,opacity:B}),n=this._config.series[i];d(r,i,this._config);let s=m({series:n,splitByField:this.getSplitByField(),layerInfo:this.layerInfo,commonStrings:this.commonStrings});f(s??a,i,this._config),e===!0&&o(n)&&(_(h,n),w(g,n))}e===!0&&l(c,this._config),this._config.colorMatch=!0,this.emitConfigUpdate("resetSeriesStyling")}resetAvailable(){let t=!this.getColorMatch(),e=this.getShowMeanLines(),i=e===!0&&this.getMeanLinesBoxColor()!==c,a=!1,r=!1;if(!t){let n=this.getSeriesLength();for(let s=e===!0?1:0;s<n;s+=1){let M=this._config.series[s],v=m({series:M,splitByField:this.getSplitByField(),layerInfo:this.layerInfo,commonStrings:this.commonStrings}),dt=this.getSeriesName(s);if(v!==void 0&&v!==dt){a=!0;break}if(e===!0&&o(M)){let mt=this.getSeriesLineStyle(s),pt=this.getSeriesLineWidth(s);if(mt!==h||pt!==g){r=!0;break}}}}return t||i||a||r}};b(L,[ot,rt,ht,nt,ct,gt,at]);return L},"geometry/support/jsonUtils","rest/support/AttributeBinsQuery","rest/support/Query","rest/support/StatisticDefinition","time/TimeExtent","core/promiseUtils","request",a,b,c,d,e,f,g,h,i)