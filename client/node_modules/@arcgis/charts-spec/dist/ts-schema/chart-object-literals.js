export const WebChartTypes = {
    Chart: "chart",
    Text: "chartText",
    Overlay: "chartOverlay",
    Overlays: "chartOverlays",
    Legend: "chartLegend",
    CursorCrosshair: "cursorCrosshair",
    Axis: "chartAxis",
    GaugeAxisTick: "gaugeAxisTick",
    GaugeNeedle: "gaugeNeedle",
    CategoryAxisFormat: "category",
    NumberAxisFormat: "number",
    DateAxisFormat: "date",
    Guide: "chartGuide",
    ScatterSeries: "scatterSeries",
    PieSeries: "pieSeries",
    PieTick: "pieTick",
    GaugeSeries: "gaugeSeries",
    LineSeries: "lineSeries",
    BarSeries: "barSeries",
    HistogramSeries: "histogramSeries",
    BoxPlotSeries: "boxPlotSeries",
    RadarSeries: "radarSeries",
    ComboLineAndBarSeries: "comboLineAndBarSeries",
    Buffer: "buffer",
    SizePolicy: "sizeScale",
};
export const WebChartStatisticType = {
    Count: "count",
    Sum: "sum",
    Minimum: "min",
    Maximum: "max",
    Average: "avg",
    StandardDeviation: "stddev",
    Variance: "var",
    ContinuousPercentile: "percentile-continuous",
    DiscretePercentile: "percentile-discrete",
    EnvelopeAggregate: "envelope-aggregate",
    CentroidAggregate: "centroid-aggregate",
    ConvexHullAggregate: "convex-hull-aggregate",
    NoAggregation: "no_aggregation",
};
export const WebChartDataTransformations = {
    None: "none",
    Log: "logarithmic",
    Sqrt: "squareRoot",
};
export const WebChartColoringPatterns = {
    Single: "singleColor", // fixed color value as indicated in markerSymbol
    Match: "colorMatch", // apply the color from the layer's renderer symbology
};
export const WebChartLegendPositions = {
    Left: "left",
    Right: "right",
    Top: "top",
    Bottom: "bottom",
};
export const WebChartStackedKinds = {
    Side: "sideBySide",
    Stacked: "stacked",
    Stacked100: "stacked100",
};
export const WebChartBoxPlotMultipleSeriesKinds = {
    Side: "sideBySide",
    MeanLines: "meanLines",
};
export const WebChartSortOrderKinds = {
    Ascending: "ASC",
    Descending: "DESC",
};
export const StatisticsDefaults = {
    statisticType: WebChartStatisticType.Count,
    sortingOrder: WebChartSortOrderKinds.Ascending,
};
/**
 * Represents the different types of smoothing that can be applied to a line chart when the `lineSmoothed` property is set to `true`.
 */
export const WebChartLineSmoothedKinds = {
    Bezier: "bezier",
    MonotoneX: "monotoneX",
    MonotoneY: "monotoneY",
};
/**
 * Represents the different types of temporal binning that can be applied to a chart.
 */
export const WebChartTemporalBinningTypes = {
    FixedDateBased: "fixedDateBased",
    CalendarBased: "calendarBased",
};
/**
 * The temporal binning units
 */
export const WebChartTemporalBinningUnits = {
    Second: "seconds",
    Minute: "minutes",
    Hour: "hours",
    Day: "days",
    Week: "weeks",
    Month: "months",
    Quarter: "quarters",
    Year: "years",
};
/**
 * The temporal binning units for fixed-date based binning
 */
export const WebChartFixedDateBinningUnits = {
    Second: "seconds",
    Minute: "minutes",
    Hour: "hours",
    Day: "days",
    Week: "weeks",
    Month: "months",
    Year: "years",
};
/**
 * The temporal binning units for calendar based binning
 */
export const WebChartCalendarBinningUnits = {
    Second: "seconds",
    Minute: "minutes",
    Hour: "hours",
    Day: "days",
    Week: "weeks",
    Month: "months",
    Quarter: "quarters",
    Year: "years",
};
/**
 * The temporal binning units for the calendar based binning offset
 */
export const WebChartCalendarBinningOffsetUnits = {
    Second: "seconds",
    Minute: "minutes",
    Hour: "hours",
    Day: "days",
};
/**
 * Represents the different types of null policy that can be applied to a chart using the time binning feature.
 */
export const WebChartNullPolicyTypes = {
    Null: "null",
    Zero: "zero",
    Interpolate: "interpolate",
};
/**
 * Represents the different types of time aggregation that can be applied to a chart using the time binning feature.
 */
export const WebChartTimeAggregationTypes = {
    Start: "equalIntervalsFromStartTime",
    End: "equalIntervalsFromEndTime",
};
/**
 * Represents the different types of behaviors that can applied to a chart axis.
 */
export const WebChartLabelBehavior = {
    Hide: "hide",
    Rotate: "rotate",
    Stagger: "stagger",
    Wrap: "wrap",
};
export const WebChartVersionStatus = {
    Same: "same",
    Newer: "newer",
    Older: "older",
    Unrecognized: "unrecognized",
};
/**
 * Represents the different types of axes that can be used in a chart.
 */
export const WebChartAxisTypes = {
    Value: "value",
    Date: "date",
    Category: "category",
};
/**
 * Represents the different types of gauge charts.
 */
export const GaugeChartSubTypes = {
    FeatureGauge: "featureGauge",
    StatisticGauge: "statisticGauge",
};
/**
 * Represents the types of scales that can be applied to the size policy. Use by bubble charts (scatterplot).
 */
export const SizePolicyScaleTypes = {
    Linear: "linear",
    Logarithmic: "logarithmic",
};
/**
 * Labels orientation for radar chart axes.
 */
export const WebChartRadarChartAxisLabelsOrientation = {
    Radial: "radial",
    Circular: "circular",
    Horizontal: "horizontal",
};
/**
 * The types of order assocated with chart data.
 */
export const WebChartOrderDataByTypes = {
    YValue: "arcgis-charts-y-value",
    Mean: "arcgis-charts-mean",
    Median: "arcgis-charts-median",
    Category: "arcgis-charts-category",
};
