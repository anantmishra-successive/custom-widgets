import { c as o } from "../../chunks/runtime.js";
import { html as l } from "lit-html";
import { b as m, m as r, s as h, c as n } from "../../chunks/chart-ui-utils2.js";
import { u } from "../../chunks/useT9n.js";
import { createRef as p, ref as d } from "lit-html/directives/ref.js";
import { LitElement as g, createEvent as f, safeClassMap as a } from "@arcgis/lumina";
import { css as b } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const e = {
  container: "container",
  label: "label",
  numberInput: "number-input"
}, y = b`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}.container{width:var(--arcgis-charts-config-calcite-block-width, var(--arcgis-charts-config-calcite-block-default-width));height:var(--arcgis-charts-config-calcite-block-height, var(--arcgis-charts-config-calcite-block-default-height))}.container>.number-input{margin-bottom:.5rem;display:flex}.container>.number-input>div{width:100%}.label{display:flex;margin-bottom:.5rem}`;
class v extends g {
  constructor() {
    super(...arguments), this._messages = u(), this.characterLimitInputElement = p(), this.arcgisChartsConfigCategoryFormatChange = f();
  }
  static {
    this.properties = { messageOverrides: 0, categoryFormat: 0 };
  }
  static {
    this.styles = y;
  }
  onCharacterLimitChange() {
    const t = this.characterLimitInputElement.value?.value, i = Math.floor(Number(t)), s = i === Number(t) && i >= 0;
    if (t !== void 0 && s && m(t, this.characterLimitInputElement.value?.min, this.characterLimitInputElement.value?.max)) {
      const c = Number.parseInt(t);
      this.updateCategoryFormat({ type: this.categoryFormat.type, characterLimit: c }), this.arcgisChartsConfigCategoryFormatChange.emit(), this.characterLimitInputElement.value && r({
        inputElement: this.characterLimitInputElement.value,
        status: n.IDLE
      });
    } else this.characterLimitInputElement.value && r({
      inputElement: this.characterLimitInputElement.value,
      status: n.INVALID
    });
  }
  updateCategoryFormat(t) {
    this.categoryFormat = {
      ...this.categoryFormat,
      ...t
    };
  }
  render() {
    return l`<div><div class=${a(e.container)}><calcite-label class=${a(e.label)}>${this._messages.labelCharacterLmt}<calcite-input type=number class=${a(e.numberInput)} min=1 max=100 step=1 .value=${h(this.categoryFormat?.characterLimit, 11)} @calciteInputInput=${this.onCharacterLimitChange} ${d(this.characterLimitInputElement)}></calcite-input></calcite-label></div></div>`;
  }
}
o("arcgis-charts-config-category-format", v);
export {
  v as ArcgisChartsConfigCategoryFormat
};
