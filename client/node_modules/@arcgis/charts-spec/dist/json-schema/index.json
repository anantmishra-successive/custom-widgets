{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ValueConversion": {
      "type": "object",
      "properties": {
        "factor": {
          "type": "number",
          "description": "A numeric value multiplying the value to convert"
        },
        "offset": {
          "type": "number",
          "description": "A numeric offset to apply to the value to convert"
        }
      },
      "description": "Stores information regarding a numeric conversion",
      "title": "ValueConversion"
    },
    "WebChartAxisScrollBar": {
      "type": "object",
      "properties": {
        "visible": {
          "type": "boolean",
          "description": "Scrollbar visibility",
          "default": false
        },
        "width": {
          "type": "number",
          "description": "Scrollbar width in pixels"
        },
        "color": {
          "$ref": "#/definitions/Color",
          "description": "Scrollbar color"
        },
        "gripSize": {
          "type": "number",
          "description": "Grip size in pixels"
        },
        "margin": {
          "type": "number",
          "description": "Margin between the scrollbar and the series container in pixels"
        }
      },
      "description": "Describes the properties of an axis scrollbar",
      "title": "WebChartAxisScrollBar"
    },
    "Color": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 4,
      "maxItems": 4,
      "title": "Color"
    },
    "WebChartTextSymbol": {
      "type": "object",
      "properties": {
        "xoffset": {
          "type": [
            "number",
            "string"
          ],
          "description": "Horizontal offset. Can be a number for a fixed value in pixels, or a string as \"25%\" for a value relative to the label's container width."
        },
        "yoffset": {
          "type": [
            "number",
            "string"
          ],
          "description": "Horizontal offset. Can be a number for a fixed value in pixels, or a string as \"25%\" for a value relative to the label's container height."
        },
        "angle": {
          "type": "number",
          "description": "Rotation of the label"
        },
        "style": {
          "type": "string",
          "description": "Label style"
        },
        "type": {
          "type": "string",
          "const": "esriTS"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "backgroundColor": {
          "$ref": "#/definitions/Color"
        },
        "borderLineSize": {
          "type": "number"
        },
        "borderLineColor": {
          "$ref": "#/definitions/Color"
        },
        "haloSize": {
          "type": "number"
        },
        "haloColor": {
          "$ref": "#/definitions/Color"
        },
        "verticalAlignment": {
          "type": "string",
          "enum": [
            "baseline",
            "bottom",
            "middle",
            "top"
          ]
        },
        "horizontalAlignment": {
          "type": "string",
          "enum": [
            "center",
            "justify",
            "left",
            "right"
          ]
        },
        "rightToLeft": {
          "type": "boolean"
        },
        "kerning": {
          "type": "boolean"
        },
        "font": {
          "$ref": "#/definitions/IFont"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "description": "Represents a text symbol.",
      "title": "WebChartTextSymbol"
    },
    "Omit<ITextSymbol,(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>": {
      "$ref": "#/definitions/Pick%3CITextSymbol%2CExclude%3C(%22type%22%7C%22color%22%7C%22backgroundColor%22%7C%22borderLineSize%22%7C%22borderLineColor%22%7C%22haloSize%22%7C%22haloColor%22%7C%22verticalAlignment%22%7C%22horizontalAlignment%22%7C%22rightToLeft%22%7C%22kerning%22%7C%22font%22%7C%22text%22%7C%22angle%22%7C%22xoffset%22%7C%22yoffset%22%7C%22style%22%7Cstring)%2C(%22angle%22%7C%22style%22%7C%22xoffset%22%7C%22yoffset%22)%3E%3E",
      "title": "Omit<ITextSymbol,(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>"
    },
    "Pick<ITextSymbol,Exclude<(\"type\"|\"color\"|\"backgroundColor\"|\"borderLineSize\"|\"borderLineColor\"|\"haloSize\"|\"haloColor\"|\"verticalAlignment\"|\"horizontalAlignment\"|\"rightToLeft\"|\"kerning\"|\"font\"|\"text\"|\"angle\"|\"xoffset\"|\"yoffset\"|\"style\"|string),(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>>": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "esriTS"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "backgroundColor": {
          "$ref": "#/definitions/Color"
        },
        "borderLineSize": {
          "type": "number"
        },
        "borderLineColor": {
          "$ref": "#/definitions/Color"
        },
        "haloSize": {
          "type": "number"
        },
        "haloColor": {
          "$ref": "#/definitions/Color"
        },
        "verticalAlignment": {
          "type": "string",
          "enum": [
            "baseline",
            "bottom",
            "middle",
            "top"
          ]
        },
        "horizontalAlignment": {
          "type": "string",
          "enum": [
            "center",
            "justify",
            "left",
            "right"
          ]
        },
        "rightToLeft": {
          "type": "boolean"
        },
        "kerning": {
          "type": "boolean"
        },
        "font": {
          "$ref": "#/definitions/IFont"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "Pick<ITextSymbol,Exclude<(\"type\"|\"color\"|\"backgroundColor\"|\"borderLineSize\"|\"borderLineColor\"|\"haloSize\"|\"haloColor\"|\"verticalAlignment\"|\"horizontalAlignment\"|\"rightToLeft\"|\"kerning\"|\"font\"|\"text\"|\"angle\"|\"xoffset\"|\"yoffset\"|\"style\"|string),(\"angle\"|\"style\"|\"xoffset\"|\"yoffset\")>>"
    },
    "IFont": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "style": {
          "type": "string",
          "enum": [
            "italic",
            "normal",
            "oblique"
          ]
        },
        "weight": {
          "type": "string",
          "enum": [
            "bold",
            "bolder",
            "lighter",
            "normal"
          ]
        },
        "decoration": {
          "type": "string",
          "enum": [
            "line-through",
            "none",
            "underline"
          ]
        }
      },
      "title": "IFont"
    },
    "WebChartText": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartText",
          "description": "Represents a unique string identifier for the ChartText object. For ChartText object, it is \"chartText\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "content": {
          "$ref": "#/definitions/WebChartTextSymbol",
          "description": "Contains the styling info and text content. Details on **esriTS** are [here](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm)."
        }
      },
      "required": [
        "type",
        "content"
      ],
      "description": "Stores info on how some text is rendered on the chart and whether it is visible or not.",
      "title": "WebChartText"
    },
    "WebChartCursorCrosshair": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "cursorCrosshair",
          "description": "Represents a unique string identifier for the chart cursor's crosshair."
        },
        "style": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the chart cursor's crosshair should be rendered."
        },
        "verticalLineVisible": {
          "type": "boolean",
          "description": "Indicates whether the vertical crosshair line should be displayed",
          "default": false
        },
        "horizontalLineVisible": {
          "type": "boolean",
          "description": "Indicates whether the horizontal crosshair line should be displayed",
          "default": false
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of the cursor's crosshair for a chart.",
      "title": "WebChartCursorCrosshair"
    },
    "ISimpleLineSymbol": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "esriSLS"
        },
        "style": {
          "$ref": "#/definitions/SimpleLineSymbolStyle"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "title": "ISimpleLineSymbol"
    },
    "ISymbol": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SymbolType"
        },
        "style": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ISymbol"
    },
    "SymbolType": {
      "type": "string",
      "enum": [
        "esriPFS",
        "esriPMS",
        "esriSFS",
        "esriSLS",
        "esriSMS",
        "esriTS"
      ],
      "title": "SymbolType"
    },
    "SimpleLineSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSLSDash",
        "esriSLSDashDot",
        "esriSLSDashDotDot",
        "esriSLSDot",
        "esriSLSNull",
        "esriSLSSolid"
      ],
      "title": "SimpleLineSymbolStyle"
    },
    "WebChartLegend": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartLegend",
          "description": "Represents a unique string identifier for the ChartLegend object. For ChartLegend object, it is \"chartLegend\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the title of the legend box should be rendered"
        },
        "body": {
          "$ref": "#/definitions/WebChartTextSymbol",
          "description": "Contains styling info on how legend body (excluding the **title**) should be rendered. Will use default styling if not provided."
        },
        "position": {
          "$ref": "#/definitions/WebChartLegendPositions",
          "description": "Positions the legends at `\"right\"`, `\"left\"`, `\"top\"`, or `\"bottom\"` of the chart.",
          "default": "WebChartLegendPositions.Right"
        },
        "maxHeight": {
          "type": [
            "number",
            "null"
          ],
          "description": "Legend's maximum height. If not set the legend will occupy the same height as the series container or pie chart.",
          "default": null
        },
        "roundMarkers": {
          "type": "boolean",
          "description": "Allows the legend markers to be displayed as circles. If the property is to:\n- `false` or `undefined` they will be rounded rectangles\n- `true` they will be circles",
          "default": false
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of the Chart's legend box",
      "title": "WebChartLegend"
    },
    "WebChartLegendPositions": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "top",
        "bottom"
      ],
      "title": "WebChartLegendPositions"
    },
    "WebChartPieChartLegend": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartLegend",
          "description": "Represents a unique string identifier for the ChartLegend object. For ChartLegend object, it is \"chartLegend\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the title of the legend box should be rendered"
        },
        "body": {
          "$ref": "#/definitions/WebChartTextSymbol",
          "description": "Contains styling info on how legend body (excluding the **title**) should be rendered. Will use default styling if not provided."
        },
        "position": {
          "$ref": "#/definitions/WebChartLegendPositions",
          "description": "Positions the legends at `\"right\"`, `\"left\"`, `\"top\"`, or `\"bottom\"` of the chart.",
          "default": "WebChartLegendPositions.Right"
        },
        "maxHeight": {
          "type": [
            "number",
            "null"
          ],
          "description": "Legend's maximum height. If not set the legend will occupy the same height as the series container or pie chart.",
          "default": null
        },
        "roundMarkers": {
          "type": "boolean",
          "description": "Allows the legend markers to be displayed as circles. If the property is to:\n- `false` or `undefined` they will be rounded rectangles\n- `true` they will be circles",
          "default": false
        },
        "displayCategory": {
          "type": "boolean",
          "description": "Indicates whether the category associated to a slice is to be displayed in the legend.",
          "default": true
        },
        "displayNumericValue": {
          "type": "boolean",
          "description": "Indicates whether the numeric value associated to a slice is to be displayed in the legend. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`",
          "default": false
        },
        "displayPercentage": {
          "type": "boolean",
          "description": "Indicates whether the percentage to a slice is to be displayed in the legend. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`",
          "default": false
        },
        "labelMaxWidth": {
          "type": "number",
          "description": "Maximum width in pixels of the label displaying the slice name. If the label is larger than the maximum width, it will automatically wrap.",
          "default": 200
        },
        "valueLabelMaxWidth": {
          "type": "number",
          "description": "Maximum width in pixels of the label displaying the slice name. If the label is larger than the maximum width, it will automatically wrap.",
          "default": 200
        }
      },
      "required": [
        "type"
      ],
      "description": "Specific legend for the Pie chart",
      "title": "WebChartPieChartLegend"
    },
    "WebChartOverlay": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartOverlay",
          "description": "Represents a unique string identifier for the ChartOverlay object. For ChartOverlay object, it is \"chartOverlay\"."
        },
        "created": {
          "type": "boolean",
          "description": "Determines whether the overlay is created under the hood. It may or may not be visible.",
          "default": false
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "symbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the overlay should be rendered If not provided a default style is applied."
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of the chart's overlays like trendline scatter plot, and median in histogram",
      "title": "WebChartOverlay"
    },
    "NumberFormatOptions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "number",
          "description": "Represents a unique string identifier for the NumberFormatOptions object. For NumberFormatOptions object, it is \"number\". It can help us to differentiate numerical (value) axis from other types of axes viz., date-time axis and category axis."
        },
        "intlOptions": {
          "$ref": "#/definitions/Intl.NumberFormatOptions",
          "description": "Represents the JS native [Intl.NumberFormatOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat), which is based on [CLDR](http://cldr.unicode.org/translation/numbers-currency/number-patterns) specifications."
        }
      },
      "required": [
        "type",
        "intlOptions"
      ],
      "description": "Defines how the numerical(value) axis data should be formatted.",
      "title": "NumberFormatOptions"
    },
    "Intl.NumberFormatOptions": {
      "type": "object",
      "properties": {
        "localeMatcher": {
          "type": "string",
          "enum": [
            "lookup",
            "best fit"
          ]
        },
        "style": {
          "$ref": "#/definitions/Intl.NumberFormatOptionsStyle"
        },
        "currency": {
          "type": "string"
        },
        "currencyDisplay": {
          "$ref": "#/definitions/Intl.NumberFormatOptionsCurrencyDisplay"
        },
        "useGrouping": {
          "$ref": "#/definitions/Intl.NumberFormatOptionsUseGrouping"
        },
        "minimumIntegerDigits": {
          "type": "number"
        },
        "minimumFractionDigits": {
          "type": "number"
        },
        "maximumFractionDigits": {
          "type": "number"
        },
        "minimumSignificantDigits": {
          "type": "number"
        },
        "maximumSignificantDigits": {
          "type": "number"
        }
      },
      "title": "Intl.NumberFormatOptions"
    },
    "Intl.NumberFormatOptionsStyle": {
      "title": "Intl.NumberFormatOptionsStyle"
    },
    "Intl.NumberFormatOptionsCurrencyDisplay": {
      "title": "Intl.NumberFormatOptionsCurrencyDisplay"
    },
    "Intl.NumberFormatOptionsUseGrouping": {
      "type": "boolean",
      "title": "Intl.NumberFormatOptionsUseGrouping"
    },
    "WebChartDateTimeUnitFormatOptions": {
      "type": "object",
      "properties": {
        "year": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        },
        "month": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        },
        "day": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        },
        "hour": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        },
        "minute": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        },
        "second": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions"
        }
      },
      "description": "Interface used by the axis `valueFormat` property to describe how to format specific date and time units when displayed on the axis. For instance: \"year\": { year: \"numeric\" } \"month\": { month: \"numeric\" } \"day\": { day: \"2-digit\" } \"hour\": { day: \"numeric\" } \"minute\": { minute: \"numeric\" } \"second\": { second: \"numeric\" } Reference: https://tc39.es/ecma402/#sec-datetimeformat-abstracts",
      "title": "WebChartDateTimeUnitFormatOptions"
    },
    "Intl.DateTimeFormatOptions": {
      "type": "object",
      "properties": {
        "localeMatcher": {
          "type": "string",
          "enum": [
            "best fit",
            "lookup"
          ]
        },
        "weekday": {
          "type": "string",
          "enum": [
            "long",
            "short",
            "narrow"
          ]
        },
        "era": {
          "type": "string",
          "enum": [
            "long",
            "short",
            "narrow"
          ]
        },
        "year": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit"
          ]
        },
        "month": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit",
            "long",
            "short",
            "narrow"
          ]
        },
        "day": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit"
          ]
        },
        "hour": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit"
          ]
        },
        "minute": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit"
          ]
        },
        "second": {
          "type": "string",
          "enum": [
            "numeric",
            "2-digit"
          ]
        },
        "timeZoneName": {
          "type": "string",
          "enum": [
            "short",
            "long",
            "shortOffset",
            "longOffset",
            "shortGeneric",
            "longGeneric"
          ]
        },
        "formatMatcher": {
          "type": "string",
          "enum": [
            "best fit",
            "basic"
          ]
        },
        "hour12": {
          "type": "boolean"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "title": "Intl.DateTimeFormatOptions"
    },
    "DateTimeFormatOptions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "date",
          "description": "Represents a unique string identifier for the NumberFormatOptions object. For NumberFormatOptions object, it is \"date\". It can help us to differentiate date-time axis from other types of axes viz., numeric (value) axis and category axis."
        },
        "intlOptions": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "description": "Represent the JS native [Intl.DateTimeFormatOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormatt), which is based on [CLDR](http://cldr.unicode.org/translation/date-time-1/date-time-patterns) specifications."
        },
        "formatPerDateTimeUnit": {
          "$ref": "#/definitions/WebChartDateTimeUnitFormatOptions",
          "description": "Represents how to format specific date and time units when displayed on the axis, independently from the `intlOptions`."
        }
      },
      "required": [
        "type",
        "intlOptions"
      ],
      "description": "Defines how the DateTime axis data should be formatted.",
      "title": "DateTimeFormatOptions"
    },
    "CategoryFormatOptions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "category",
          "description": "Represents a unique string identifier for the CategoryFormatOptions object. For CategoryFormatOptions object, it is \"category\". It can help us to differentiate category axis from other types of axes, viz., date-time axis and numeric (value) axis."
        },
        "characterLimit": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents a positive integer which represents the limit on the number of characters to be displayed for all the category strings. The truncated string are appended with `...`. If property is not present or `null`, no truncation is done.",
          "minimum": 1,
          "multipleOf": 1
        }
      },
      "required": [
        "type"
      ],
      "description": "Defines how the category axis data (Categories) should be formatted.",
      "title": "CategoryFormatOptions"
    },
    "WebChartGuide": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartGuide",
          "description": "Represents a unique string identifier for the Guide object. For Guide class, it is \"chartGuide\"."
        },
        "start": {
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Determines the value where the guide should begin."
        },
        "end": {
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Determines the value where the guide should end. If it is not specified, we get a line guide, otherwise we get a fill/rectangular guide."
        },
        "style": {
          "anyOf": [
            {
              "$ref": "#/definitions/ISimpleFillSymbol"
            },
            {
              "$ref": "#/definitions/ISimpleLineSymbol"
            }
          ],
          "description": "Determines how the guide should be rendered. Line guide requires [esriSLS](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm) format, and fill guide requires [esriSFS](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm) format."
        },
        "name": {
          "type": "string",
          "description": "A unique string identifier which is used to refer to a particular guide. It is displayed in the Chart Authoring UI to differentiate between different guides."
        },
        "label": {
          "$ref": "#/definitions/WebChartTextSymbol",
          "description": "Defines a text label for the given guide. It is displayed on the chart next to the concerned guide and is styled using **esriTS** format."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "above": {
          "type": "boolean",
          "description": "Determines whether the guide should be rendered on top of (overlapping) the series or under the series.",
          "default": false
        },
        "tooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the guide's tooltip background (false) or its outline (true).",
          "default": false
        }
      },
      "required": [
        "type",
        "start",
        "style",
        "name"
      ],
      "description": "JSON representation of the chart's guide object. Can be used to represent both line and fill guides.",
      "title": "WebChartGuide"
    },
    "ISimpleFillSymbol": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "esriSFS"
        },
        "style": {
          "$ref": "#/definitions/SimpleFillSymbolStyle"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol"
        }
      },
      "required": [
        "type"
      ],
      "title": "ISimpleFillSymbol"
    },
    "SimpleFillSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSFSBackwardDiagonal",
        "esriSFSCross",
        "esriSFSDiagonalCross",
        "esriSFSForwardDiagonal",
        "esriSFSHorizontal",
        "esriSFSNull",
        "esriSFSSolid",
        "esriSFSVertical"
      ],
      "title": "SimpleFillSymbolStyle"
    },
    "WebChartAxis": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartAxis",
          "description": "Represents a unique string identifier for the WebChartAxis object. For ChartAxis object, it is \"chartAxis\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "isLogarithmic": {
          "type": "boolean",
          "description": "Specifies whether the axis has a logarithmic scale or not.",
          "default": false
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the title of the axis should be rendered"
        },
        "valueFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/CategoryFormatOptions"
            },
            {
              "$ref": "#/definitions/DateTimeFormatOptions"
            },
            {
              "$ref": "#/definitions/NumberFormatOptions"
            }
          ],
          "description": "Specifies how numerical/categorical/date-time values should be formatted."
        },
        "minimum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The minimum value which the axis should represent, when it is not defined or null, then the minimum value for the corresponding axis is automatically calculated."
        },
        "maximum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The maximum value which the axis should represent, when it is not defined or null, then the maximum value for the corresponding axis is automatically calculated."
        },
        "grid": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Dictates how the grid lines associated with a particular axis should be rendered."
        },
        "guides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartGuide"
          },
          "description": "Represent an array of guides that should be rendered onto the axis."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the axis line should be rendered. If not provided a default style is applied."
        },
        "labels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the axis labels should be rendered."
        },
        "scrollbar": {
          "$ref": "#/definitions/WebChartAxisScrollBar",
          "description": "Represents the axis scrollbar style and visibility"
        },
        "displayZeroLine": {
          "type": "boolean",
          "description": "Represents an option to hide/un-hide the zero line on value axis",
          "default": false
        },
        "integerOnlyValues": {
          "type": "boolean",
          "description": "Represents an option to show `integer-only` values for a value axis",
          "default": false
        },
        "displayCursorTooltip": {
          "type": "boolean",
          "description": "Specifies whether cursor tooltip should be displayed.",
          "default": false
        },
        "buffer": {
          "type": "boolean",
          "description": "Allows setting a buffer to a **value axis** to provide some space around the series.",
          "default": false
        },
        "tickSpacing": {
          "type": "number",
          "description": "The desired minimum distance between two adjacent axis ticks. The actual distance may fluctuate depending on the chart's size. When not provided a default value is assigned according to the axis type and axis labels behavior.",
          "minimum": 1
        },
        "dateBaseInterval": {
          "$ref": "#/definitions/TimeIntervalInfo",
          "description": "Specifies the base interval on a date axis. Will be ignored on the other axis types. It will be overridden by the properties from the series `binTemporalData` when provided."
        }
      },
      "required": [
        "type",
        "valueFormat",
        "labels"
      ],
      "description": "JSON representation of the chart's axis object",
      "title": "WebChartAxis"
    },
    "TimeIntervalInfo": {
      "type": "object",
      "properties": {
        "unit": {
          "$ref": "#/definitions/WebChartTemporalBinningUnits"
        },
        "size": {
          "type": "number"
        }
      },
      "title": "TimeIntervalInfo"
    },
    "WebChartTemporalBinningUnits": {
      "type": "string",
      "enum": [
        "seconds",
        "minutes",
        "hours",
        "days",
        "weeks",
        "months",
        "quarters",
        "years"
      ],
      "description": "The temporal binning units",
      "title": "WebChartTemporalBinningUnits"
    },
    "WebChartGaugeAxisTick": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "gaugeAxisTick",
          "description": "Represents a unique string identifier for the GaugeAxisTick object. For WebChartGaugeAxisTick object, it is \"gaugeAxisTick\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the axis ticks.",
          "default": true
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of the gauge axis ticks. Currently only used by WebChartGaugeAxis.",
      "title": "WebChartGaugeAxisTick"
    },
    "WebChartNeedle": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "gaugeNeedle",
          "description": "Represents a unique string identifier for the ChartNeedle object. For WebChartNeedle object, it is \"gaugeNeedle\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the needle.",
          "default": true
        },
        "symbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the needle should be rendered"
        },
        "startWidth": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents the needle's thickness at the bottom (chart's center), in px",
          "minimum": 1,
          "default": 10
        },
        "endWidth": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents the needle's thickness at the top, in px",
          "minimum": 1,
          "default": 1
        },
        "innerRadius": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents the size of the hole in the middle of the chart. Can be visualized when guides are displayed.",
          "minimum": 0,
          "maximum": 100,
          "default": 25
        },
        "displayPin": {
          "type": "boolean",
          "description": "Hides or shows the needle's pin (centroid circle)",
          "default": false
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of a gauge needle.",
      "title": "WebChartNeedle"
    },
    "WebChartGaugeAxis": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartAxis",
          "description": "Represents a unique string identifier for the WebChartAxis object. For ChartAxis object, it is \"chartAxis\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "isLogarithmic": {
          "type": "boolean",
          "description": "Specifies whether the axis has a logarithmic scale or not.",
          "default": false
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the title of the axis should be rendered"
        },
        "valueFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/CategoryFormatOptions"
            },
            {
              "$ref": "#/definitions/DateTimeFormatOptions"
            },
            {
              "$ref": "#/definitions/NumberFormatOptions"
            }
          ],
          "description": "Specifies how numerical/categorical/date-time values should be formatted."
        },
        "minimum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The minimum value which the axis should represent, when it is not defined or null, then the minimum value for the corresponding axis is automatically calculated."
        },
        "maximum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The maximum value which the axis should represent, when it is not defined or null, then the maximum value for the corresponding axis is automatically calculated."
        },
        "grid": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Dictates how the grid lines associated with a particular axis should be rendered."
        },
        "guides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartGuide"
          },
          "description": "Represent an array of guides that should be rendered onto the axis."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the axis line should be rendered. If not provided a default style is applied."
        },
        "labels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the axis labels should be rendered."
        },
        "scrollbar": {
          "$ref": "#/definitions/WebChartAxisScrollBar",
          "description": "Represents the axis scrollbar style and visibility"
        },
        "displayZeroLine": {
          "type": "boolean",
          "description": "Represents an option to hide/un-hide the zero line on value axis",
          "default": false
        },
        "integerOnlyValues": {
          "type": "boolean",
          "description": "Represents an option to show `integer-only` values for a value axis",
          "default": false
        },
        "displayCursorTooltip": {
          "type": "boolean",
          "description": "Specifies whether cursor tooltip should be displayed.",
          "default": false
        },
        "buffer": {
          "type": "boolean",
          "description": "Allows setting a buffer to a **value axis** to provide some space around the series.",
          "default": false
        },
        "tickSpacing": {
          "type": "number",
          "description": "The desired minimum distance between two adjacent axis ticks. The actual distance may fluctuate depending on the chart's size. When not provided a default value is assigned according to the axis type and axis labels behavior.",
          "minimum": 1
        },
        "dateBaseInterval": {
          "$ref": "#/definitions/TimeIntervalInfo",
          "description": "Specifies the base interval on a date axis. Will be ignored on the other axis types. It will be overridden by the properties from the series `binTemporalData` when provided."
        },
        "innerLabel": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the axis' inner label needs to be displayed"
        },
        "needle": {
          "$ref": "#/definitions/WebChartNeedle",
          "description": "Specifies how the axis' needle needs to be displayed"
        },
        "ticks": {
          "$ref": "#/definitions/WebChartGaugeAxisTick",
          "description": "Specifies how the axis' ticks need to be displayed"
        },
        "labelsIncrement": {
          "type": "number",
          "description": "If a label has a value being a multiple of that property, it will be displayed. Otherwise it will be hidden.\n\nIf the property is `undefined` or 0, the chart will be displayed with 6 axis labels distributed evenly along the axis min and max.\n\nIf the property has a value that results in more than a set limit of axis labels (25 as defined in `ChartDefaults.gauge.maximumNumberOfLabelIntervals`) this property value will be ignored and the chart will be displayed with only axis min/max with 4 ticks in between.",
          "default": "undefined"
        },
        "onlyShowFirstAndLastLabels": {
          "type": "boolean",
          "description": "Specifies if only the first and last labels need to be displayed. If set to `true` all the other labels will be hidden. Their visibility still depends on the axis labels visibility (WebChartAxis.labels.visible).",
          "default": false
        },
        "minimumValueConversion": {
          "$ref": "#/definitions/ValueConversion",
          "description": "Defines how to convert the axis minimum"
        },
        "maximumValueConversion": {
          "$ref": "#/definitions/ValueConversion",
          "description": "Defines how to convert the axis maximum"
        },
        "minimumFromField": {
          "anyOf": [
            {
              "$ref": "#/definitions/IStatisticDefinition"
            },
            {
              "type": "string"
            }
          ],
          "description": "If used with a gauge by feature:\n- `minimumFromField` is expected to be a field name. The value from that field for the given feature is mapped to the axis minimum value If used with a statistic gauge:\n- If `minimumFromField` is set to a field name (string), the minimum from that field is mapped to the axis minimum value\n- If it is set to an `IStatisticDefinition` the statistic (min, max, avg...) from the given field is mapped to the axis minimum value When `minimumFromField` is not provided or when it leads to an invalid value, the `minimum` value from the axis config, if provided, or the default value of 0, in that order, will be used."
        },
        "maximumFromField": {
          "anyOf": [
            {
              "$ref": "#/definitions/IStatisticDefinition"
            },
            {
              "type": "string"
            }
          ],
          "description": "If used with a gauge by feature:\n- `maximumFromField` is expected to be a field name. The value from that field for the given feature is mapped to the axis maximum value If used with a statistic gauge:\n- If `maximumFromField` is set to a field name (string), the maximum from that field is mapped to the axis maximum value\n- If it is set to an `IStatisticDefinition` the statistic (min, max, avg...) from the given field is mapped to the axis maximum value When `maximumFromField` is not provided or when it leads to an invalid value, the `maximum` value from the axis config, if provided, or the default value of 0, in that order, will be used."
        }
      },
      "required": [
        "labels",
        "type",
        "valueFormat"
      ],
      "description": "JSON representation of the gauge chart's axis object. Inherits from the WebChartAxis properties.",
      "title": "WebChartGaugeAxis"
    },
    "IStatisticDefinition": {
      "type": "object",
      "properties": {
        "statisticType": {
          "type": "string",
          "enum": [
            "avg",
            "centroid-aggregate",
            "convex-hull-aggregate",
            "count",
            "envelope-aggregate",
            "max",
            "min",
            "percentile-continuous",
            "percentile-discrete",
            "stddev",
            "sum",
            "var"
          ],
          "description": "Statistical operation to perform (count, sum, min, max, avg, stddev, var, percentile_cont, percentile_disc, EnvelopeAggregate, CentroidAggregate, ConvexHullAggregate)."
        },
        "statisticParameters": {
          "type": "object",
          "properties": {
            "value": {
              "type": "number"
            },
            "orderBy": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          "required": [
            "value"
          ],
          "description": "Parameters to be used along with statisticType. Currently, only applicable for percentile-continuous (continuous percentile) and percentile-discrete (discrete percentile)."
        },
        "onStatisticField": {
          "type": "string",
          "description": "Field on which to perform the statistical operation."
        },
        "outStatisticFieldName": {
          "type": "string",
          "description": "Field name for the returned statistic field. If outStatisticFieldName is empty or missing, the server will assign one. A valid field name can only contain alphanumeric characters and an underscore. If the outStatisticFieldName is a reserved keyword of the underlying DBMS, the operation can fail. Try specifying an alternative outStatisticFieldName."
        }
      },
      "required": [
        "statisticType",
        "onStatisticField"
      ],
      "title": "IStatisticDefinition"
    },
    "WebChartRadarChartAxis": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartAxis",
          "description": "Represents a unique string identifier for the WebChartAxis object. For ChartAxis object, it is \"chartAxis\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the content.",
          "default": true
        },
        "isLogarithmic": {
          "type": "boolean",
          "description": "Specifies whether the axis has a logarithmic scale or not.",
          "default": false
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the title of the axis should be rendered"
        },
        "valueFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/CategoryFormatOptions"
            },
            {
              "$ref": "#/definitions/DateTimeFormatOptions"
            },
            {
              "$ref": "#/definitions/NumberFormatOptions"
            }
          ],
          "description": "Specifies how numerical/categorical/date-time values should be formatted."
        },
        "minimum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The minimum value which the axis should represent, when it is not defined or null, then the minimum value for the corresponding axis is automatically calculated."
        },
        "maximum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The maximum value which the axis should represent, when it is not defined or null, then the maximum value for the corresponding axis is automatically calculated."
        },
        "grid": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Dictates how the grid lines associated with a particular axis should be rendered."
        },
        "guides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartGuide"
          },
          "description": "Represent an array of guides that should be rendered onto the axis."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the axis line should be rendered. If not provided a default style is applied."
        },
        "labels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the axis labels should be rendered."
        },
        "scrollbar": {
          "$ref": "#/definitions/WebChartAxisScrollBar",
          "description": "Represents the axis scrollbar style and visibility"
        },
        "displayZeroLine": {
          "type": "boolean",
          "description": "Represents an option to hide/un-hide the zero line on value axis",
          "default": false
        },
        "integerOnlyValues": {
          "type": "boolean",
          "description": "Represents an option to show `integer-only` values for a value axis",
          "default": false
        },
        "displayCursorTooltip": {
          "type": "boolean",
          "description": "Specifies whether cursor tooltip should be displayed.",
          "default": false
        },
        "buffer": {
          "type": "boolean",
          "description": "Allows setting a buffer to a **value axis** to provide some space around the series.",
          "default": false
        },
        "tickSpacing": {
          "type": "number",
          "description": "The desired minimum distance between two adjacent axis ticks. The actual distance may fluctuate depending on the chart's size. When not provided a default value is assigned according to the axis type and axis labels behavior.",
          "minimum": 1
        },
        "dateBaseInterval": {
          "$ref": "#/definitions/TimeIntervalInfo",
          "description": "Specifies the base interval on a date axis. Will be ignored on the other axis types. It will be overridden by the properties from the series `binTemporalData` when provided."
        },
        "labelsOrientation": {
          "$ref": "#/definitions/WebChartRadarChartAxisLabelsOrientation",
          "description": "Defines the labels orientation",
          "default": "WebChartRadarChartAxisLabelsOrientation.Circular"
        }
      },
      "required": [
        "labels",
        "type",
        "valueFormat"
      ],
      "description": "JSON representation of the radar chart's axis object.",
      "title": "WebChartRadarChartAxis"
    },
    "WebChartRadarChartAxisLabelsOrientation": {
      "type": "string",
      "enum": [
        "radial",
        "circular",
        "horizontal"
      ],
      "description": "Labels orientation for radar chart axes.",
      "title": "WebChartRadarChartAxisLabelsOrientation"
    },
    "WebChartQuery": {
      "type": "object",
      "properties": {
        "outFields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Attribute fields to include in the FeatureSet. Will have an effect on chart with no aggregation."
        },
        "where": {
          "type": "string",
          "description": "Acts as a filter on the base data for attribute-based filtering, expect for bar/line charts for which is is used to handle the split-by field values."
        },
        "groupByFieldsForStatistics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of fields which determine how the base data is grouped. Only one **groupBy** Field is supported, but ArcGIS JSAPI [supports multiple groupBy fields](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#groupByFieldsForStatistics). While splitting by multiple group-by fields is possible, it is not being done because of the number of series it will give rise to (equal to the length of the Cartesian product set) possibly making the visualization hard to interpret.",
          "maxItems": 1
        },
        "outStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IStatisticDefinition"
          },
          "description": "Represents an array of statistics definitions which dictate how a particular field should be aggregated. Refer to [JSAPI Statistics Definition class](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-StatisticDefinition.html) for more info."
        },
        "orderByFields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Represents the sorting order of the output result. More info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields). The format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending."
        },
        "gdbVersion": {
          "type": "string",
          "description": "Specifies the geodatabase version to display for feature service queries."
        },
        "geometry": {
          "anyOf": [
            {
              "$ref": "#/definitions/IEnvelope"
            },
            {
              "$ref": "#/definitions/IExtent"
            },
            {
              "$ref": "#/definitions/IPoint"
            },
            {
              "$ref": "#/definitions/IPolygon"
            },
            {
              "$ref": "#/definitions/IPolygonWithCurves"
            },
            {
              "$ref": "#/definitions/IPolyline"
            }
          ],
          "description": "The geometry to apply to the spatial filter. A buffer can be applied to it by setting the properties `distance` and `units`."
        },
        "spatialRelationship": {
          "description": "For spatial filters, this parameter defines the spatial relationship to filter features in the layer view against the filter geometry."
        },
        "distance": {
          "type": "number",
          "description": "Specifies a search distance for the `geometry`. To be associated with the `units` property. For compatible layers only."
        },
        "units": {
          "$ref": "#/definitions/RESTUnits",
          "description": "The unit for calculating the buffer distance when `distance` and `geometry` are provided. If not specified, the unit is derived from the geometry spatial reference."
        },
        "timeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2,
          "description": "A time extent ([timestamp, timestamp]) for a temporal query against time-aware layers."
        },
        "start": {
          "type": "number",
          "description": "The zero-based index indicating where to begin retrieving features."
        },
        "num": {
          "type": "number",
          "description": "The number of features to retrieve."
        },
        "returnDistinctValues": {
          "type": "boolean",
          "description": "If true then the query returns distinct values based on the field(s) specified in outFields. Available for count-based aggregations only.",
          "default": false
        },
        "fetchNullValues": {
          "type": "boolean",
          "description": "Indicates whether to fetch null values for them to be counted or displayed as categories on the chart.",
          "default": false
        },
        "objectIds": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of objectIds of the features to be filtered."
        }
      },
      "description": "Chart query object inspired by [JSAPI Query](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html) class.",
      "title": "WebChartQuery"
    },
    "IEnvelope": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "xmin": {
          "type": "number"
        },
        "xmax": {
          "type": "number"
        },
        "ymin": {
          "type": "number"
        },
        "ymax": {
          "type": "number"
        },
        "zmin": {
          "type": "number"
        },
        "zmax": {
          "type": "number"
        },
        "mmin": {
          "type": "number"
        },
        "mmax": {
          "type": "number"
        }
      },
      "required": [
        "xmin",
        "xmax",
        "ymin",
        "ymax"
      ],
      "description": "An envelope is a rectangle defined by a range of values for each coordinate and attribute.",
      "title": "IEnvelope"
    },
    "IGeometry": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        }
      },
      "description": "a building block for discrete geometries\n\n`IGeometry` can also be imported from the following packages:\n\n```js import { IGeometry } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IGeometry"
    },
    "ISpatialReference": {
      "type": "object",
      "properties": {
        "wkid": {
          "type": [
            "number",
            "null"
          ]
        },
        "latestWkid": {
          "type": "number"
        },
        "vcsWkid": {
          "type": "number"
        },
        "latestVcsWkid": {
          "type": "number"
        },
        "wkt": {
          "type": [
            "string",
            "null"
          ]
        },
        "latestWkt": {
          "type": "string"
        }
      },
      "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js import { ISpatialReference } from \"@esri/arcgis-rest-geocoding\"; import { ISpatialReference } from \"@esri/arcgis-rest-routing\"; import { ISpatialReference } from \"@esri/arcgis-rest-service-admin\"; import { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "ISpatialReference"
    },
    "IExtent": {
      "type": "object",
      "properties": {
        "xmin": {
          "type": "number"
        },
        "ymin": {
          "type": "number"
        },
        "zmin": {
          "type": "number"
        },
        "xmax": {
          "type": "number"
        },
        "ymax": {
          "type": "number"
        },
        "zmax": {
          "type": "number"
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        }
      },
      "required": [
        "xmin",
        "ymin",
        "xmax",
        "ymax"
      ],
      "description": "Extents are used to define rectangles and bounding boxes.\n\n`IExtent` can also be imported from the following packages:\n\n```js import { IExtent } from \"@esri/arcgis-rest-geocoding\"; import { IExtent } from \"@esri/arcgis-rest-service-admin\"; import { IExtent } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IExtent"
    },
    "IPoint": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "description": "A simple point geometry, with spatial reference defined.\n\n`IPoint` can also be imported from the following packages:\n\n```js import { IPoint } from \"@esri/arcgis-rest-routing\"; import { IPoint } from \"@esri/arcgis-rest-geocoding\"; ```",
      "title": "IPoint"
    },
    "IHasZM": {
      "type": "object",
      "properties": {
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        }
      },
      "description": "`IHasZM` can also be imported from the following packages:\n\n```js import { IHasZM } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IHasZM"
    },
    "IPolygon": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "rings": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Position"
            }
          }
        }
      },
      "required": [
        "rings"
      ],
      "title": "IPolygon"
    },
    "Position": {
      "anyOf": [
        {
          "$ref": "#/definitions/Position2D"
        },
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 4,
          "maxItems": 4
        },
        {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 3,
          "maxItems": 3
        }
      ],
      "title": "Position"
    },
    "Position2D": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 2,
      "maxItems": 2,
      "title": "Position2D"
    },
    "IPolygonWithCurves": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "curveRings": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/JsonCurve"
                },
                {
                  "$ref": "#/definitions/Position"
                }
              ]
            }
          }
        }
      },
      "required": [
        "curveRings"
      ],
      "title": "IPolygonWithCurves"
    },
    "JsonCurve": {
      "anyOf": [
        {
          "$ref": "#/definitions/IArc"
        },
        {
          "$ref": "#/definitions/IBezierCurve"
        },
        {
          "$ref": "#/definitions/ICircularArc"
        },
        {
          "$ref": "#/definitions/IOldCircularArc"
        }
      ],
      "title": "JsonCurve"
    },
    "IArc": {
      "type": "object",
      "properties": {
        "a": {
          "type": "array",
          "minItems": 7,
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "$ref": "#/definitions/Position2D"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 7
        }
      },
      "required": [
        "a"
      ],
      "description": "an arc can be represented as a JSON curve object",
      "title": "IArc"
    },
    "IBezierCurve": {
      "type": "object",
      "properties": {
        "b": {
          "type": "array",
          "minItems": 3,
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "$ref": "#/definitions/Position2D"
            },
            {
              "$ref": "#/definitions/Position2D"
            }
          ],
          "maxItems": 3
        }
      },
      "required": [
        "b"
      ],
      "description": "a bezier curve can be represented as a JSON curve object",
      "title": "IBezierCurve"
    },
    "ICircularArc": {
      "type": "object",
      "properties": {
        "c": {
          "type": "array",
          "minItems": 2,
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "$ref": "#/definitions/Position2D"
            }
          ],
          "maxItems": 2
        }
      },
      "required": [
        "c"
      ],
      "description": "a circular arc can be represented as a JSON curve object",
      "title": "ICircularArc"
    },
    "IOldCircularArc": {
      "type": "object",
      "properties": {
        "a": {
          "type": "array",
          "minItems": 4,
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "$ref": "#/definitions/Position2D"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "maxItems": 4
        }
      },
      "required": [
        "a"
      ],
      "title": "IOldCircularArc"
    },
    "IPolyline": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Position"
            }
          }
        }
      },
      "required": [
        "paths"
      ],
      "title": "IPolyline"
    },
    "RESTUnits": {
      "type": "string",
      "enum": [
        "feet",
        "miles",
        "nautical-miles",
        "us-nautical-miles",
        "meters",
        "kilometers"
      ],
      "title": "RESTUnits"
    },
    "WebChartSeriesQuery": {
      "$ref": "#/definitions/Omit%3CWebChartQuery%2C(%22distance%22%7C%22gdbVersion%22%7C%22geometry%22%7C%22num%22%7C%22objectIds%22%7C%22orderByFields%22%7C%22spatialRelationship%22%7C%22start%22%7C%22timeExtent%22%7C%22units%22)%3E",
      "description": "Subset of the WebChartQuery, used at the series level",
      "title": "WebChartSeriesQuery"
    },
    "Omit<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>": {
      "$ref": "#/definitions/Pick%3CWebChartQuery%2CExclude%3C(%22outFields%22%7C%22where%22%7C%22groupByFieldsForStatistics%22%7C%22outStatistics%22%7C%22orderByFields%22%7C%22gdbVersion%22%7C%22geometry%22%7C%22spatialRelationship%22%7C%22distance%22%7C%22units%22%7C%22timeExtent%22%7C%22start%22%7C%22num%22%7C%22returnDistinctValues%22%7C%22fetchNullValues%22%7C%22objectIds%22%7Cstring)%2C(%22distance%22%7C%22gdbVersion%22%7C%22geometry%22%7C%22num%22%7C%22objectIds%22%7C%22orderByFields%22%7C%22spatialRelationship%22%7C%22start%22%7C%22timeExtent%22%7C%22units%22)%3E%3E",
      "title": "Omit<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>"
    },
    "Pick<WebChartQuery,Exclude<(\"outFields\"|\"where\"|\"groupByFieldsForStatistics\"|\"outStatistics\"|\"orderByFields\"|\"gdbVersion\"|\"geometry\"|\"spatialRelationship\"|\"distance\"|\"units\"|\"timeExtent\"|\"start\"|\"num\"|\"returnDistinctValues\"|\"fetchNullValues\"|\"objectIds\"|string),(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>>": {
      "type": "object",
      "properties": {
        "outFields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Attribute fields to include in the FeatureSet. Will have an effect on chart with no aggregation."
        },
        "where": {
          "type": "string",
          "description": "Acts as a filter on the base data for attribute-based filtering, expect for bar/line charts for which is is used to handle the split-by field values."
        },
        "groupByFieldsForStatistics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of fields which determine how the base data is grouped. Only one **groupBy** Field is supported, but ArcGIS JSAPI [supports multiple groupBy fields](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#groupByFieldsForStatistics). While splitting by multiple group-by fields is possible, it is not being done because of the number of series it will give rise to (equal to the length of the Cartesian product set) possibly making the visualization hard to interpret.",
          "maxItems": 1
        },
        "outStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IStatisticDefinition"
          },
          "description": "Represents an array of statistics definitions which dictate how a particular field should be aggregated. Refer to [JSAPI Statistics Definition class](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-StatisticDefinition.html) for more info."
        },
        "returnDistinctValues": {
          "type": "boolean",
          "description": "If true then the query returns distinct values based on the field(s) specified in outFields. Available for count-based aggregations only.",
          "default": false
        },
        "fetchNullValues": {
          "type": "boolean",
          "description": "Indicates whether to fetch null values for them to be counted or displayed as categories on the chart.",
          "default": false
        }
      },
      "title": "Pick<WebChartQuery,Exclude<(\"outFields\"|\"where\"|\"groupByFieldsForStatistics\"|\"outStatistics\"|\"orderByFields\"|\"gdbVersion\"|\"geometry\"|\"spatialRelationship\"|\"distance\"|\"units\"|\"timeExtent\"|\"start\"|\"num\"|\"returnDistinctValues\"|\"fetchNullValues\"|\"objectIds\"|string),(\"distance\"|\"gdbVersion\"|\"geometry\"|\"num\"|\"objectIds\"|\"orderByFields\"|\"spatialRelationship\"|\"start\"|\"timeExtent\"|\"units\")>>"
    },
    "WebChartDataFilters": {
      "$ref": "#/definitions/Pick%3CWebChartQuery%2C(%22distance%22%7C%22gdbVersion%22%7C%22geometry%22%7C%22objectIds%22%7C%22spatialRelationship%22%7C%22timeExtent%22%7C%22units%22%7C%22where%22)%3E",
      "description": "JSON representation of filters applied to the data",
      "title": "WebChartDataFilters"
    },
    "Pick<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"objectIds\"|\"spatialRelationship\"|\"timeExtent\"|\"units\"|\"where\")>": {
      "type": "object",
      "properties": {
        "distance": {
          "type": "number",
          "description": "Specifies a search distance for the `geometry`. To be associated with the `units` property. For compatible layers only."
        },
        "gdbVersion": {
          "type": "string",
          "description": "Specifies the geodatabase version to display for feature service queries."
        },
        "geometry": {
          "anyOf": [
            {
              "$ref": "#/definitions/IEnvelope"
            },
            {
              "$ref": "#/definitions/IExtent"
            },
            {
              "$ref": "#/definitions/IPoint"
            },
            {
              "$ref": "#/definitions/IPolygon"
            },
            {
              "$ref": "#/definitions/IPolygonWithCurves"
            },
            {
              "$ref": "#/definitions/IPolyline"
            }
          ],
          "description": "The geometry to apply to the spatial filter. A buffer can be applied to it by setting the properties `distance` and `units`."
        },
        "objectIds": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of objectIds of the features to be filtered."
        },
        "spatialRelationship": {
          "description": "For spatial filters, this parameter defines the spatial relationship to filter features in the layer view against the filter geometry."
        },
        "timeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2,
          "description": "A time extent ([timestamp, timestamp]) for a temporal query against time-aware layers."
        },
        "units": {
          "$ref": "#/definitions/RESTUnits",
          "description": "The unit for calculating the buffer distance when `distance` and `geometry` are provided. If not specified, the unit is derived from the geometry spatial reference."
        },
        "where": {
          "type": "string",
          "description": "Acts as a filter on the base data for attribute-based filtering, expect for bar/line charts for which is is used to handle the split-by field values."
        }
      },
      "title": "Pick<WebChartQuery,(\"distance\"|\"gdbVersion\"|\"geometry\"|\"objectIds\"|\"spatialRelationship\"|\"timeExtent\"|\"units\"|\"where\")>"
    },
    "WebChartSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        }
      },
      "required": [
        "type",
        "id",
        "name",
        "x"
      ],
      "description": "JSON representation of the chart's series object. All other series extends this interface.",
      "title": "WebChartSeries"
    },
    "WebChartFixedDateBinning": {
      "type": "object",
      "properties": {
        "size": {
          "type": "number",
          "description": "The span of time that will be binned or aggregated together. Works in coordination with `unit`."
        },
        "trimIncompleteTimeInterval": {
          "type": "boolean",
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart. Incomplete intervals on a chart can cause misleading results in which the period in question is under- or over reported due to a different amount of time in the interval. Setting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true
        },
        "timeAggregationType": {
          "$ref": "#/definitions/WebChartTimeAggregationTypes",
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime"
        },
        "nullPolicy": {
          "$ref": "#/definitions/WebChartNullPolicyTypes",
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null"
        },
        "type": {
          "type": "string",
          "const": "fixedDateBased"
        },
        "unit": {
          "$ref": "#/definitions/WebChartFixedDateBinningUnits",
          "description": "The unit of time to use to bin the temporal data."
        }
      },
      "required": [
        "type"
      ],
      "description": "Represents the properties related to the the fixed-date temporal binning. It currently covers the same scope as `WebChartDateBinning`.",
      "title": "WebChartFixedDateBinning"
    },
    "WebChartDateBinning": {
      "type": "object",
      "properties": {
        "size": {
          "type": "number",
          "description": "The span of time that will be binned or aggregated together. Works in coordination with `unit`."
        },
        "trimIncompleteTimeInterval": {
          "type": "boolean",
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart. Incomplete intervals on a chart can cause misleading results in which the period in question is under- or over reported due to a different amount of time in the interval. Setting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true
        },
        "timeAggregationType": {
          "$ref": "#/definitions/WebChartTimeAggregationTypes",
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime"
        },
        "nullPolicy": {
          "$ref": "#/definitions/WebChartNullPolicyTypes",
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null"
        }
      },
      "title": "WebChartDateBinning"
    },
    "WebChartTimeAggregationTypes": {
      "type": "string",
      "enum": [
        "equalIntervalsFromStartTime",
        "equalIntervalsFromEndTime"
      ],
      "description": "Represents the different types of time aggregation that can be applied to a chart using the time binning feature.",
      "title": "WebChartTimeAggregationTypes"
    },
    "WebChartNullPolicyTypes": {
      "type": "string",
      "enum": [
        "null",
        "zero",
        "interpolate"
      ],
      "description": "Represents the different types of null policy that can be applied to a chart using the time binning feature.",
      "title": "WebChartNullPolicyTypes"
    },
    "WebChartFixedDateBinningUnits": {
      "type": "string",
      "enum": [
        "seconds",
        "minutes",
        "hours",
        "days",
        "weeks",
        "months",
        "years"
      ],
      "description": "The temporal binning units for fixed-date based binning",
      "title": "WebChartFixedDateBinningUnits"
    },
    "WebChartCalendarBasedBinning": {
      "type": "object",
      "properties": {
        "size": {
          "type": "number",
          "description": "The span of time that will be binned or aggregated together. Works in coordination with `unit`."
        },
        "trimIncompleteTimeInterval": {
          "type": "boolean",
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart. Incomplete intervals on a chart can cause misleading results in which the period in question is under- or over reported due to a different amount of time in the interval. Setting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true
        },
        "timeAggregationType": {
          "$ref": "#/definitions/WebChartTimeAggregationTypes",
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime"
        },
        "nullPolicy": {
          "$ref": "#/definitions/WebChartNullPolicyTypes",
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null"
        },
        "type": {
          "type": "string",
          "const": "calendarBased"
        },
        "unit": {
          "$ref": "#/definitions/WebChartCalendarBinningUnits",
          "description": "The unit of time to use to bin the temporal data."
        },
        "start": {
          "type": "number",
          "description": "The binning start date"
        },
        "end": {
          "type": "number",
          "description": "The binning end date"
        },
        "offset": {
          "type": "object",
          "properties": {
            "unit": {
              "$ref": "#/definitions/WebChartCalendarBinningOffsetUnits"
            },
            "size": {
              "type": "number"
            }
          },
          "required": [
            "unit",
            "size"
          ],
          "description": "Offset to apply to the results"
        },
        "outTimeZone": {
          "type": "string",
          "description": "Defines the [IANA time zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) used for temporal bin calculations"
        }
      },
      "required": [
        "type"
      ],
      "description": "Represents the properties related to the calendar-based temporal binning. It supports the same properties as `WebChartDateBinning` and adds some.",
      "title": "WebChartCalendarBasedBinning"
    },
    "WebChartCalendarBinningUnits": {
      "type": "string",
      "enum": [
        "seconds",
        "minutes",
        "hours",
        "days",
        "weeks",
        "months",
        "quarters",
        "years"
      ],
      "description": "The temporal binning units for calendar based binning",
      "title": "WebChartCalendarBinningUnits"
    },
    "WebChartCalendarBinningOffsetUnits": {
      "type": "string",
      "enum": [
        "seconds",
        "minutes",
        "hours",
        "days"
      ],
      "description": "The temporal binning units for the calendar based binning offset",
      "title": "WebChartCalendarBinningOffsetUnits"
    },
    "WebChartTemporalSeries": {
      "type": "object",
      "properties": {
        "binTemporalData": {
          "type": "boolean",
          "description": "Whether to use the time properties to bin the temporal data. If set to `false` the `binCount` and `unit` properties can be used to set the date axis base interval.",
          "default": true
        },
        "temporalBinning": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartCalendarBasedBinning"
            },
            {
              "$ref": "#/definitions/WebChartFixedDateBinning"
            }
          ],
          "description": "Defines the pattern to apply to bin the data. The \"fixedDateBased\" type will make the bins start at the beginning of the given period (1st of the week, 1st of the month, 1st or the day, etc.) The \"calendarBased\" type will make the bins start at the data set first entry (e.g. it the first date is 1/18/20 and the binning is done by month, the bins will go from the 18th to a month to the 17th of the next month)."
        }
      },
      "description": "Describes the properties related to a temporal series",
      "title": "WebChartTemporalSeries"
    },
    "WebChartBarChartSeries": {
      "type": "object",
      "properties": {
        "binTemporalData": {
          "type": "boolean",
          "description": "Whether to use the time properties to bin the temporal data. If set to `false` the `binCount` and `unit` properties can be used to set the date axis base interval.",
          "default": true
        },
        "temporalBinning": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartCalendarBasedBinning"
            },
            {
              "$ref": "#/definitions/WebChartFixedDateBinning"
            }
          ],
          "description": "Defines the pattern to apply to bin the data. The \"fixedDateBased\" type will make the bins start at the beginning of the given period (1st of the week, 1st of the month, 1st or the day, etc.) The \"calendarBased\" type will make the bins start at the data set first entry (e.g. it the first date is 1/18/20 and the binning is done by month, the bins will go from the 18th to a month to the 17th of the next month)."
        },
        "type": {
          "type": "string",
          "const": "barSeries",
          "description": "Represents a unique string identifier for the BarChartSeries object. For BarSeries object, it is \"barSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "type": "string",
          "description": "Specifies which field represents the y-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the columns/bars should be rendered"
        },
        "hideOversizedStackedLabels": {
          "type": "boolean",
          "description": "When true or undefined (default), the labels displayed within a small stacked column are hidden to avoid cluttering. When false, all the data labels are displayed.",
          "default": true
        },
        "hideOversizedSideBySideLabels": {
          "type": "boolean",
          "description": "When true, the labels displayed within a small column for sideBySide bar series are hidden to avoid cluttering. When false or undefined (default), all the data labels are displayed.",
          "default": false
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "[Bar chart](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/bar-chart.htm) shows the categorical distribution of String/DateTime data.",
      "title": "WebChartBarChartSeries"
    },
    "HistogramOverlays": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartOverlays",
          "description": "Represents a unique string identifier for the HistogramOverlays object. For HistogramOverlays object, it is \"chartOverlays\"."
        },
        "mean": {
          "$ref": "#/definitions/WebChartOverlay",
          "description": "Specifies the mean overlay for histogram. If not provided, the mean overlay is not displayed."
        },
        "median": {
          "$ref": "#/definitions/WebChartOverlay",
          "description": "Specifies the median overlay for histogram. If not provided, the median overlay is not displayed."
        },
        "standardDeviation": {
          "$ref": "#/definitions/WebChartOverlay",
          "description": "Specifies the standard deviation overlay for histogram. If not provided, the standard deviation overlay is not displayed."
        },
        "comparisonDistribution": {
          "$ref": "#/definitions/WebChartOverlay",
          "description": "Specifies the comparison distribution overlay for histogram. If not provided, the comparison distribution overlay is not displayed."
        }
      },
      "required": [
        "type"
      ],
      "description": "Object containing Histogram overlays",
      "title": "HistogramOverlays"
    },
    "WebChartHistogramSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "histogramSeries",
          "description": "Represents a unique string identifier for the HistogramSeries object. For BarSeries object, it is \"histogramSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "binCount": {
          "type": [
            "number",
            "null"
          ],
          "description": "Bin count must be a positive integer.",
          "minimum": 1,
          "multipleOf": 1,
          "default": 32
        },
        "overlays": {
          "$ref": "#/definitions/HistogramOverlays",
          "description": "Specifies the chart overlays. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**. The overlays won't show if the property is not defined."
        },
        "dataTransformationType": {
          "$ref": "#/definitions/WebChartDataTransformations",
          "description": "Specifies how the data should be transformed (e.g. square root, log, etc.) before binning."
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the columns/bars should be rendered"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x"
      ],
      "description": "[Histogram](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/histogram.htm) shows the numerical(frequency) distribution of a numerical field.",
      "title": "WebChartHistogramSeries"
    },
    "WebChartDataTransformations": {
      "type": "string",
      "enum": [
        "none",
        "logarithmic",
        "squareRoot"
      ],
      "title": "WebChartDataTransformations"
    },
    "ScatterplotOverlays": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "chartOverlays",
          "description": "Represents a unique string identifier for the ScatterplotOverlays object. For ScatterplotOverlays object, it is \"chartOverlays\"."
        },
        "trendLine": {
          "$ref": "#/definitions/WebChartOverlay",
          "description": "Specifies the trendline overlay for scatter plot. The trendline won't show if the property is not defined."
        }
      },
      "required": [
        "type"
      ],
      "description": "Object containing Scatter Plot overlays",
      "title": "ScatterplotOverlays"
    },
    "SizePolicy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "sizeScale",
          "description": "Represents a unique string identifier for the sizePolicy object. For sizePolicy object, it is \"sizeScale\"."
        },
        "scaleType": {
          "$ref": "#/definitions/SizePolicyScaleTypes",
          "description": "The type of scale to apply to the markers (linear or logarithmic)",
          "default": "SizePolicyScaleTypes.Linear"
        },
        "field": {
          "type": "string",
          "description": "The field which determines the markers size"
        },
        "minSize": {
          "type": "number",
          "description": "The minimum marker size",
          "default": 5,
          "multipleOf": 1
        },
        "maxSize": {
          "type": "number",
          "description": "The maximum marker size",
          "default": 30,
          "multipleOf": 1
        }
      },
      "required": [
        "type",
        "field"
      ],
      "title": "SizePolicy"
    },
    "SizePolicyScaleTypes": {
      "type": "string",
      "enum": [
        "linear",
        "logarithmic"
      ],
      "description": "Represents the types of scales that can be applied to the size policy. Use by bubble charts (scatterplot).",
      "title": "SizePolicyScaleTypes"
    },
    "WebChartScatterplotSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "scatterSeries",
          "description": "Represents a unique string identifier for the ScatterSeries object. For ScatterSeries object, it is \"scatterSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "type": "string",
          "description": "Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "markerSymbol": {
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "description": "Specifies how each data point in the scatter plot should be rendered. The type is `\"esriSMS\"` and it is adopted from the [REST API Types](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm#GUID-C8D40B32-5F4B-45EB-8048-6D5A8763E13B)."
        },
        "overlays": {
          "$ref": "#/definitions/ScatterplotOverlays",
          "description": "Specifies all the chart overlays. The scatter plot implements only 1 overlay, **trendLine**. The overlays won't show if the property is not defined."
        },
        "sizePolicy": {
          "$ref": "#/definitions/SizePolicy",
          "description": "Specifies rules to use the scatter plot as bubble plot, by changing dynamically the markers size according to a specific field value"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "[Scatter plot](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/scatter-plot.htm) shows the relationship between two numerical fields.",
      "title": "WebChartScatterplotSeries"
    },
    "ISimpleMarkerSymbol": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "esriSMS"
        },
        "style": {
          "$ref": "#/definitions/SimpleMarkerSymbolStyle"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "size": {
          "type": "number"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol"
        }
      },
      "required": [
        "type"
      ],
      "title": "ISimpleMarkerSymbol"
    },
    "IMarkerSymbol": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/SymbolType"
        },
        "style": {
          "type": "string"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "title": "IMarkerSymbol"
    },
    "SimpleMarkerSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSMSCircle",
        "esriSMSCross",
        "esriSMSDiamond",
        "esriSMSSquare",
        "esriSMSTriangle",
        "esriSMSX"
      ],
      "title": "SimpleMarkerSymbolStyle"
    },
    "WebChartPieChartTick": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "pieTick",
          "description": "Represents a unique string identifier for the WebChartPieChartTick object. For PieTick object, it is \"pieTick\"."
        },
        "visible": {
          "type": "boolean",
          "description": "Determines the visibility of the tick. Assigning the `true` value will only be considered when the data labels are visible (`series.dataLabels.visible`) and when the data label associated to the tick is outside of the chart (`series.dataLabelsOffset` > 0)."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the pie chart ticks should be rendered"
        }
      },
      "required": [
        "type"
      ],
      "description": "JSON representation of the pie ticks.",
      "title": "WebChartPieChartTick"
    },
    "WebChartPieChartSlice": {
      "type": "object",
      "properties": {
        "sliceId": {
          "type": "string",
          "description": "A unique string used identify the slice of a pie chart."
        },
        "originalLabel": {
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "The slice's original label."
        },
        "label": {
          "type": "string",
          "description": "Custom label for the slice. For grouped slice, the default value is `Other`. For regular slice, it will be either the category or field name."
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the slice should be rendered. If not provided, the slice will be styled with default values."
        }
      },
      "required": [
        "sliceId"
      ],
      "description": "JSON representation of the pie slices",
      "title": "WebChartPieChartSlice"
    },
    "WebChartPieChartGroupSlice": {
      "type": "object",
      "properties": {
        "sliceId": {
          "type": "string",
          "description": "A unique string used identify the slice of a pie chart."
        },
        "originalLabel": {
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "The slice's original label."
        },
        "label": {
          "type": "string",
          "description": "Custom label for the slice. For grouped slice, the default value is `Other`. For regular slice, it will be either the category or field name."
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the slice should be rendered. If not provided, the slice will be styled with default values."
        },
        "percentageThreshold": {
          "type": "number",
          "description": "Slices that have a percent value equal or lesser to this threshold are grouped into a unique slice"
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the grouped slice data labels should be rendered. If the property is not set the `series.dataLabels` will be used instead."
        }
      },
      "required": [
        "percentageThreshold",
        "sliceId"
      ],
      "description": "JSON representation of the pie grouped slice",
      "title": "WebChartPieChartGroupSlice"
    },
    "WebChartPieChartSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "pieSeries",
          "description": "Represents a unique string identifier for the PieSeries object. For PieSeries object, it is \"pieSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "type": "string",
          "description": "Specifies which field represents the y-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "innerRadius": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents the size of the hole in middle of the chart. The number is used as a percentage rather than a fixed value.",
          "minimum": 0,
          "maximum": 100,
          "default": 50
        },
        "startAngle": {
          "type": [
            "number",
            "null"
          ],
          "default": -90
        },
        "endAngle": {
          "type": [
            "number",
            "null"
          ],
          "default": 270
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the slices should be rendered"
        },
        "displayCategoryOnDataLabel": {
          "type": "boolean",
          "description": "Indicates whether the category associated to a slice is to be displayed on its data label. This property will be ignored if the chart options `dataLabelFormatter` is provided.",
          "default": true
        },
        "displayNumericValueOnDataLabel": {
          "type": "boolean",
          "description": "Indicates whether the numeric value associated to a slice is to be displayed on its data label. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`. This property will be ignored if the chart options `dataLabelFormatter` is provided.",
          "default": true
        },
        "displayPercentageOnDataLabel": {
          "type": "boolean",
          "description": "Indicates whether the percentage associated to a slice is to be displayed on its data label. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)` This property will be ignored if the chart options `dataLabelFormatter` is provided.",
          "default": false
        },
        "displayCategoryOnTooltip": {
          "type": "boolean",
          "description": "Indicates whether the category associated to a slice is to be displayed on its tooltip. This property will be ignored if the chart options `tooltipFormatter` is provided.",
          "default": true
        },
        "displayNumericValueOnTooltip": {
          "type": "boolean",
          "description": "Indicates whether the numeric value associated to a slice is to be displayed on its tooltip. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)` This property will be ignored if the chart options `tooltipFormatter` is provided.",
          "default": true
        },
        "displayPercentageOnTooltip": {
          "type": "boolean",
          "description": "Indicates whether the percentage associated to a slice is to be displayed on its tooltip. If both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)` This property will be ignored if the chart options `tooltipFormatter` is provided.",
          "default": true
        },
        "numericValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Specifies how the numerical values should be formatted (applied to label, tooltip and legend). Can be overridden for the tooltips by series.dataTooltipValueFormat."
        },
        "percentValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Specifies how the percent values should be formatted (applied to label, tooltip and legend) Can be overridden for the tooltips by series.dataTooltipPercentFormat."
        },
        "valuePrefix": {
          "type": "string",
          "description": "Adds a prefix to all the values displayed on the pie chart: data labels, tooltips and legend"
        },
        "valueSuffix": {
          "type": "string",
          "description": "Adds a suffix to all the values displayed on the pie chart: data labels, tooltips and legend"
        },
        "percentagePrefix": {
          "type": "string",
          "description": "Adds a prefix to all the percentages displayed on the pie chart: data labels, tooltips and legend"
        },
        "percentageSuffix": {
          "type": "string",
          "description": "Adds a suffix to all the percentages displayed on the pie chart: data labels, tooltips and legend"
        },
        "dataLabelsCharacterLimit": {
          "type": [
            "number",
            "null"
          ],
          "description": "If set, the category on the data label is truncated to display only `characterLimit` characters, and an ellipsis (\"...\") is added to the end of the label. This does not affect the value and percentage part of the labels. Does not apply to tooltips and legend labels.",
          "default": "undefined",
          "minimum": 1,
          "multipleOf": 1
        },
        "ticks": {
          "$ref": "#/definitions/WebChartPieChartTick",
          "description": "Specifies how to render the ticks shown on each slide. Ticks will be displayed with default values if not provided."
        },
        "dataLabelsInside": {
          "type": "boolean",
          "description": "Whether to place the data labels inside the pie slices. When set to `true` the following properties will be ignored:\n- dataLabelsOffset\n- alignDataLabels\n- optimizeDataLabelsOverlapping",
          "default": false
        },
        "dataLabelsOffset": {
          "type": "number",
          "description": "Determines in pixel how far the data labels should be placed from their slice. If a negative value is provided the label will be placed inside of the chart. Ignored when `dataLabelsInside` is set to `true`.",
          "default": 10
        },
        "alignDataLabels": {
          "type": "boolean",
          "description": "Aligns labels into columns to make them more readable and avoid them to overlap each other. Ignored when `dataLabelsInside` is set to `true`.",
          "default": false
        },
        "optimizeDataLabelsOverlapping": {
          "type": "boolean",
          "description": "Optimizes the data labels rendering to avoid them to be cut off on the edges or to overlap the legend by wrapping them and adding padding to the chart. Ignored when `dataLabelsInside` is set to `true`.",
          "default": false
        },
        "sliceGrouping": {
          "$ref": "#/definitions/WebChartPieChartGroupSlice",
          "description": "Specifies if and how the slices under a given percentage threshold are grouped into a unique slice"
        },
        "slices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartPieChartSlice"
          },
          "description": "An array of WebChartPieChartSlice representing the ids, labels and styles of the pie slices.\n\nWhen this property is not defined, or when a pie slice does not have a matching slice in this array, the series' fillSymbol will be used. If the series' fillSymbol does not contain color information, colors from the color ramps will be utilized."
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "JSON representation of the Pie Chart series",
      "title": "WebChartPieChartSeries"
    },
    "WebChartGaugeSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "gaugeSeries",
          "description": "Represents a unique string identifier for the GaugeSeries object. For GaugeSeries object, it is \"gaugeSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "valueConversion": {
          "$ref": "#/definitions/ValueConversion",
          "description": "Defines the conversion to apply to the gauge value"
        },
        "featureIndex": {
          "type": "number",
          "description": "Specifies the index of the feature to be rendered. This property will be ignored for a statistic gauge (indicated via `WebGaugeChart.subType` property). For feature-based gauge, if this property is not present, the first feature will be used (featureIndex = 0)"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x"
      ],
      "description": "JSON representation of the `Gauge` series",
      "title": "WebChartGaugeSeries"
    },
    "WebChartLineChartSeries": {
      "type": "object",
      "properties": {
        "binTemporalData": {
          "type": "boolean",
          "description": "Whether to use the time properties to bin the temporal data. If set to `false` the `binCount` and `unit` properties can be used to set the date axis base interval.",
          "default": true
        },
        "temporalBinning": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartCalendarBasedBinning"
            },
            {
              "$ref": "#/definitions/WebChartFixedDateBinning"
            }
          ],
          "description": "Defines the pattern to apply to bin the data. The \"fixedDateBased\" type will make the bins start at the beginning of the given period (1st of the week, 1st of the month, 1st or the day, etc.) The \"calendarBased\" type will make the bins start at the data set first entry (e.g. it the first date is 1/18/20 and the binning is done by month, the bins will go from the 18th to a month to the 17th of the next month)."
        },
        "type": {
          "type": "string",
          "const": "lineSeries",
          "description": "Represents a unique string identifier for the LineSeries object. For LineSeries object, it is \"lineSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies the numeric field(s) used by the series. The array type is useful when used for a box plot."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the line/line segments should be rendered"
        },
        "lineSmoothed": {
          "type": "boolean",
          "description": "Specifies whether line segments should be smoothed.",
          "default": false
        },
        "showArea": {
          "type": "boolean",
          "description": "Indicates whether line series show area.",
          "default": false
        },
        "markerVisible": {
          "type": "boolean",
          "description": "Indicates whether to show or hide the markers/bullets of the line series.",
          "default": true
        },
        "markerSymbol": {
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "description": "Contains styling info on how the marker should be rendered"
        },
        "areaColor": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the color of the filled area for line chart. areaColor will be applied only if showArea is true, and is defaulted to the line color if not provided."
        },
        "stackNegativeValuesToBaseline": {
          "type": "boolean",
          "description": "Specifies how negative values are treated in stacked series. If true, negative values will be stacked on the base line. If false, negative values will be stacked in relation to their previous values in the stack.",
          "default": true
        },
        "connectLines": {
          "type": "boolean",
          "description": "Whether to connect the lines when there's a gap in the data. Can be overridden by the temporal data setting `nullPolicy`.",
          "default": true
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "JSON representation of the Line Chart series",
      "title": "WebChartLineChartSeries"
    },
    "WebChartBoxPlotSeries": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "boxPlotSeries"
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies the numeric field(s) used by the box plot series."
        },
        "fillSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Contains styling info on how the box and whiskers should be rendered. The whiskers use the fillSymbol.outline."
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "JSON representation of the Box plot series",
      "title": "WebChartBoxPlotSeries"
    },
    "WebChartRadarChartSeries": {
      "$ref": "#/definitions/WebChartLineChartSeries%3C%22radarSeries%22%3E",
      "title": "WebChartRadarChartSeries"
    },
    "WebChartLineChartSeries<\"radarSeries\">": {
      "type": "object",
      "properties": {
        "binTemporalData": {
          "type": "boolean",
          "description": "Whether to use the time properties to bin the temporal data. If set to `false` the `binCount` and `unit` properties can be used to set the date axis base interval.",
          "default": true
        },
        "temporalBinning": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartCalendarBasedBinning"
            },
            {
              "$ref": "#/definitions/WebChartFixedDateBinning"
            }
          ],
          "description": "Defines the pattern to apply to bin the data. The \"fixedDateBased\" type will make the bins start at the beginning of the given period (1st of the week, 1st of the month, 1st or the day, etc.) The \"calendarBased\" type will make the bins start at the data set first entry (e.g. it the first date is 1/18/20 and the binning is done by month, the bins will go from the 18th to a month to the 17th of the next month)."
        },
        "type": {
          "type": "string",
          "const": "radarSeries",
          "description": "Represents a unique string identifier for the LineSeries object. For LineSeries object, it is \"lineSeries\"."
        },
        "id": {
          "type": "string",
          "description": "A unique string used to differentiate the series on a chart."
        },
        "visible": {
          "type": "boolean",
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true
        },
        "dataTooltipVisible": {
          "type": "boolean",
          "description": "Hides or shows data tooltips. Applies to all charts but Gauge.",
          "default": true
        },
        "dataTooltipReverseColor": {
          "type": "boolean",
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true). Applies to all charts but Gauge.",
          "default": false
        },
        "dataTooltipValueFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render numeric values in tooltips."
        },
        "dataTooltipPercentFormat": {
          "$ref": "#/definitions/NumberFormatOptions",
          "description": "Defines how to render percent values in tooltips. Currently used for stacked 100% bar and line charts, as well as pie charts."
        },
        "dataTooltipDateFormat": {
          "$ref": "#/definitions/DateTimeFormatOptions",
          "description": "Defines how to render dates in tooltips. Currently used for bar and line charts using a date x-axis with no time binning."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)"
        },
        "query": {
          "$ref": "#/definitions/WebChartSeriesQuery",
          "description": "Specifies a query object associated with a particular series containing info on what data to fetch for that series."
        },
        "x": {
          "type": "string",
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1
        },
        "dataLabels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies how the data labels should be rendered."
        },
        "assignToSecondValueAxis": {
          "type": "boolean",
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it. Supported by bar and line series.",
          "default": false
        },
        "y": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "description": "Specifies the numeric field(s) used by the series. The array type is useful when used for a box plot."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Contains styling info on how the line/line segments should be rendered"
        },
        "lineSmoothed": {
          "type": "boolean",
          "description": "Specifies whether line segments should be smoothed.",
          "default": false
        },
        "showArea": {
          "type": "boolean",
          "description": "Indicates whether line series show area.",
          "default": false
        },
        "markerVisible": {
          "type": "boolean",
          "description": "Indicates whether to show or hide the markers/bullets of the line series.",
          "default": true
        },
        "markerSymbol": {
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "description": "Contains styling info on how the marker should be rendered"
        },
        "areaColor": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the color of the filled area for line chart. areaColor will be applied only if showArea is true, and is defaulted to the line color if not provided."
        },
        "stackNegativeValuesToBaseline": {
          "type": "boolean",
          "description": "Specifies how negative values are treated in stacked series. If true, negative values will be stacked on the base line. If false, negative values will be stacked in relation to their previous values in the stack.",
          "default": true
        },
        "connectLines": {
          "type": "boolean",
          "description": "Whether to connect the lines when there's a gap in the data. Can be overridden by the temporal data setting `nullPolicy`.",
          "default": true
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ],
      "description": "JSON representation of the Line Chart series",
      "title": "WebChartLineChartSeries<\"radarSeries\">"
    },
    "WebChartSeriesType": {
      "anyOf": [
        {
          "$ref": "#/definitions/WebChartBarChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartBoxPlotSeries"
        },
        {
          "$ref": "#/definitions/WebChartGaugeSeries"
        },
        {
          "$ref": "#/definitions/WebChartHistogramSeries"
        },
        {
          "$ref": "#/definitions/WebChartLineChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartPieChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartRadarChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartScatterplotSeries"
        }
      ],
      "description": "Type containing all the series types available",
      "title": "WebChartSeriesType"
    },
    "WebChart": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "const": "23.2.0",
          "description": "Version of the specification. Used to identify when a saved config was created."
        },
        "type": {
          "type": "string",
          "const": "chart",
          "description": "Represents a unique string identifier for the Chart object. For Chart object, it is **chart**."
        },
        "id": {
          "type": "string",
          "description": "Can be used to uniquely identify a chart. The consumer app can choose whether to use it or not."
        },
        "iLayer": {
          "$ref": "#/definitions/IFeatureLayer",
          "description": "Property representing the layer to be used by the chart. If not provided we expect a layer object to be set on the component."
        },
        "dataFilters": {
          "$ref": "#/definitions/WebChartDataFilters",
          "description": "Used to filter the chart's data while in Layer mode."
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies heading/title of the chart."
        },
        "subtitle": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies sub-heading/subtitle of the chart."
        },
        "footer": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies footer of the chart"
        },
        "background": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the background color of the chart.",
          "default": [
            255,
            255,
            255,
            255
          ]
        },
        "cursorCrosshair": {
          "$ref": "#/definitions/WebChartCursorCrosshair",
          "description": "Specifies cursor's crosshair information for the chart. Only for XY charts."
        },
        "legend": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartLegend"
            },
            {
              "$ref": "#/definitions/WebChartPieChartLegend"
            }
          ],
          "description": "Specifies the Legend information for the chart."
        },
        "axes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartAxis"
          },
          "minItems": 1,
          "maxItems": 3,
          "description": "Represents an array of **at least 1 or at most 3** Chart Axis accompanying the chart. The axes property is optional because Pie chart does not use any axis. The third axis config is used when a series `assignToSecondValueAxis` is set to `true`. Some of the axis features won't apply to the third axis (e.g. labels behaviors)."
        },
        "horizontalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the horizontal axis can't display them all. The available options are: \"none\", \"rotate\", \"stagger\" and \"wrap\". For XY Chart only. Histogram can handle \"none\" and \"rotate\" only. The default value for the horizontal axis is \"rotate\" except for Histogram, where the default is none.",
          "default": "rotate"
        },
        "verticalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the vertical axis can't display them all. For XY Chart only. The available options are: \"none\" and \"wrap\". The default value for the vertical axis is \"wrap\".",
          "default": "wrap"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartSeriesType"
          },
          "description": "Represents an array of various chart series to be plot inside the chart. Empty array is not allowed.",
          "minItems": 1
        },
        "rotated": {
          "type": "boolean",
          "description": "Specifies whether or not the chart is rotated. Applied to Bar, Line, and Combo Bar and Line charts.",
          "default": false
        },
        "stackedType": {
          "$ref": "#/definitions/WebChartStackedKinds",
          "description": "Specifies how the bars/lines should be placed when multiple series are rendered in the same chart, say when \"split by\" operation is executed on any field or when multiple attributes/fields corresponding to the same set of classes are to be visualized.\n\nCurrently this property is only used for bar and line series.",
          "default": "sideBySide"
        },
        "colorMatch": {
          "type": "boolean",
          "description": "Specifies whether to first try matching the colors from the layer renderer or the chart renderer for coloring the chart elements, like markers, line segments, columns, etc.\n\nTo do so, this property needs to be set to `true`.\n\nWhen there is no matching color found (for when `colorMatch = true`) or when `colorMatch = false`, the colors from the config, and then from the color ramps will be used, in that order.",
          "default": false
        },
        "chartRenderer": {
          "description": "Renderer to use to style the series when the chart uses the color match mode. Considered before the layer's renderer."
        },
        "orderOptions": {
          "type": "object",
          "properties": {
            "series": {
              "$ref": "#/definitions/WebChartOrderSeriesBy",
              "description": "How series should be ordered and displayed in a multi-series chart. If not provided the series will be displayed as they are ordered in the config."
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WebChartDirectionalDataOrder"
                },
                {
                  "$ref": "#/definitions/WebChartPredefinedLabelsDataOrder"
                }
              ],
              "description": "How data for a chart should be ordered. It is recommended to use this property over its sibling `orderByFields` to order the chart data.\n\nIf not provided, the data will be displayed as it was retrieved from the server. No additional ordering will be applied."
            },
            "orderByFields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The orderByFields to be sent with the query when retrieving data for the chart.  It represents the desired sorting order of the output result from the server.\n\nMore info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields). The format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending"
            }
          },
          "description": "Chart order options (data and series)"
        }
      },
      "required": [
        "version",
        "type",
        "series"
      ],
      "description": "Gives a JSON representation of the Chart object.",
      "title": "WebChart"
    },
    "IFeatureLayer": {
      "type": "object",
      "properties": {
        "timeAnimation": {
          "type": "boolean",
          "description": "This property is applicable to layers that support time. If 'true', timeAnimation is enabled."
        },
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISFeatureLayer",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "capabilities": {
          "type": "string",
          "description": "A comma-separated string listing which editing operations are allowed on an editable feature service."
        },
        "definitionEditor": {
          "$ref": "#/definitions/IDefinitionEditor",
          "description": "Stores interactive filters."
        },
        "disablePopup": {
          "type": "boolean",
          "const": true,
          "description": "Indicates whether to allow a client to ignore popups defined by the service item."
        },
        "featureCollection": {
          "description": "A featureCollection object defining a layer of features whose geometry and attributes are either stored directly within the web map or with an item. Feature Collections can be created from CSVs, shapefiles, GPX, or map notes."
        },
        "featureCollectionType": {
          "type": "string",
          "enum": [
            "markup",
            "notes",
            "route"
          ],
          "description": "Indicates the type of features in the feature collection. If featureCollectionType is missing, it means the feature collection is a regular single-layer or multi-layer feature collection."
        },
        "layerDefinition": {
          "$ref": "#/definitions/ILayerDefinition",
          "description": "A layerDefinition object defining the attribute schema and drawing information for the layer."
        },
        "mode": {
          "type": "number",
          "enum": [
            0,
            1,
            2
          ],
          "description": "0 is snapshot mode. 1 is on-demand mode. 2 is selection-only mode. Used with ArcGIS feature services and individual layers in ArcGIS map services."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the content of popup windows when you click or query a feature."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        },
        "showLabels": {
          "type": "boolean",
          "const": true,
          "description": "Labels will display if this property is set to true and the layer also has a labelingInfo property associated with it. This property can get stored in the web map config and in the item/data."
        },
        "visibleLayers": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of sublayer ids that should appear visible. Used with feature layers that are based on feature collections."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "description": "Feature layers can be created by referencing a layer from either a map service or a feature service or by specifying a feature collection object. Use a map service if you just want to retrieve geometries and attributes from the server and symbolize them yourself. Use a feature service if you want to take advantage of symbols from the service's source map document. Also, use a feature service if you plan on doing editing with the feature layer. Feature layers honor any feature templates configured in the source map document. Feature collection objects are used to create a feature layer based on the supplied definition.",
      "title": "IFeatureLayer"
    },
    "ILayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "description": "Indicates the layer type"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "ILayer"
    },
    "ISupportsTime": {
      "type": "object",
      "properties": {
        "timeAnimation": {
          "type": "boolean",
          "description": "This property is applicable to layers that support time. If 'true', timeAnimation is enabled."
        }
      },
      "title": "ISupportsTime"
    },
    "IDefinitionEditor": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IDefinitionInput"
          },
          "description": "An array of input objects."
        },
        "parameterizedExpression": {
          "type": "string",
          "description": "A string value representing the where clause for the interactive filter."
        }
      },
      "description": "The definitionEditor stores interactive filters at the same level as layerDefinition.",
      "title": "IDefinitionEditor"
    },
    "IDefinitionInput": {
      "type": "object",
      "properties": {
        "hint": {
          "type": "string",
          "description": "A string value representing a hint for the input."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IDefinitionParameter"
          },
          "description": "An array of parameter objects."
        },
        "prompt": {
          "type": "string",
          "description": "A string value representing the prompt for the input."
        }
      },
      "title": "IDefinitionInput"
    },
    "IDefinitionParameter": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": [
            "number",
            "string"
          ],
          "description": "The default value that is automatically given if nothing is provided."
        },
        "fieldName": {
          "type": "string",
          "description": "A string value representing the name of the field to query."
        },
        "parameterId": {
          "description": "Number given to uniquely identify the specified parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "esriFieldTypeBlob",
            "esriFieldTypeDate",
            "esriFieldTypeDateOnly",
            "esriFieldTypeDouble",
            "esriFieldTypeGeometry",
            "esriFieldTypeGlobalID",
            "esriFieldTypeGUID",
            "esriFieldTypeInteger",
            "esriFieldTypeOID",
            "esriFieldTypeRaster",
            "esriFieldTypeSingle",
            "esriFieldTypeSmallInteger",
            "esriFieldTypeString",
            "esriFieldTypeTimeOnly",
            "esriFieldTypeTimestampOffset",
            "esriFieldTypeXML"
          ],
          "description": "The field type for the specified field parameter."
        },
        "utcValue": {
          "type": "number",
          "description": "An integer value representing exact UNIX time used when defaultValue is a date string."
        }
      },
      "title": "IDefinitionParameter"
    },
    "ILayerDefinition": {
      "type": "object",
      "properties": {
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "allowGeometryUpdates": {
          "type": "boolean",
          "description": "Boolean value indicating whether the geometry of the features in the layer can be edited."
        },
        "capabilities": {
          "type": "string",
          "description": "A comma separated list of supported capabilities, e.g. Query,Editing."
        },
        "copyrightText": {
          "type": "string",
          "description": "String value for the copyright text information for the layer."
        },
        "currentVersion": {
          "type": "number",
          "description": "Numeric value indicating the server version of the layer."
        },
        "defaultVisibility": {
          "type": "boolean",
          "description": "Boolean value indicating whether the layer's visibility is turned on."
        },
        "definitionEditor": {
          "$ref": "#/definitions/IDefinitionEditor",
          "description": "Stores interactive filters."
        },
        "definitionExpression": {
          "type": "string",
          "description": "SQL-based definition expression string that narrows the data to be displayed in the layer."
        },
        "description": {
          "type": "string",
          "description": "String value of the layer as defined in the map service."
        },
        "displayField": {
          "type": "string",
          "description": "A string value that summarizes the feature."
        },
        "drawingInfo": {
          "description": "Contains drawing, labeling, and transparency information."
        },
        "extent": {
          "anyOf": [
            {
              "$ref": "#/definitions/IExtent"
            },
            {
              "type": "null"
            }
          ],
          "description": "An object defining the rectangular area."
        },
        "editingInfo": {
          "$ref": "#/definitions/IEditingInfo",
          "description": "An object defining the editing info (last edit date)."
        },
        "featureReduction": {
          "description": "Feature reductions declutter the screen by hiding features that would otherwise intersect with other features on screen."
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IField"
          },
          "description": "An array of field objects containing information about the attribute fields for the feature collection or layer."
        },
        "geometryType": {
          "$ref": "#/definitions/GeometryType",
          "description": "A string defining the type of geometry. Possible geometry types are: esriGeometryPoint, esriGeometryMultipoint, esriGeometryPolyline, esriGeometryPolygon, and esriGeometryEnvelope."
        },
        "globalIdField": {
          "type": "string",
          "description": "The unique identifier for a feature or table row within a geodatabase."
        },
        "hasAttachments": {
          "type": "boolean",
          "description": "Indicates whether attachments should be loaded for the layer."
        },
        "hasStaticData": {
          "type": "boolean",
          "description": "Boolean value indicating whether data changes. True if it does not."
        },
        "htmlPopupType": {
          "type": "string",
          "enum": [
            "esriServerHTMLPopupTypeAsHTMLText",
            "esriServerHTMLPopupTypeAsURL",
            "esriServerHTMLPopupTypeNone"
          ],
          "description": "String value indicating the HTML popup type."
        },
        "id": {
          "type": "number",
          "description": "The identifier assigned to the layer."
        },
        "isDataVersioned": {
          "type": "boolean",
          "description": "Boolean value indicating whether the data is versioned."
        },
        "maxRecordCount": {
          "type": "number",
          "description": "Numeric value indicating tbe maximum number of records that will be returned at once for a query."
        },
        "maxScale": {
          "type": "number",
          "description": "Represents the maximum scale at which the layer definition will be applied. This does not apply to layers of type: ArcGISMapServiceLayer, ImageServiceVectorLayer or ImageServiceLayer."
        },
        "minScale": {
          "type": "number",
          "description": "Represents the minimum scale at which the layer definition will be applied. This does not apply to layers of type: ArcGISMapServiceLayer, ImageServiceVectorLayer or ImageServiceLayer."
        },
        "name": {
          "type": "string",
          "description": "Contains a unique name for the layer that can be displayed in a legend."
        },
        "objectIdField": {
          "type": "string",
          "description": "Indicates the name of the object ID field in the dataset."
        },
        "overrideSymbols": {
          "type": "boolean",
          "description": "Dictates whether a client can support having an end user modify symbols on individual features."
        },
        "rangeInfos": {
          "description": "Indicates range information"
        },
        "source": {
          "description": "An object indicating the layerDefinition's layer source."
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference",
          "description": "An object containing the WKID or WKT identifying the spatial reference of the layer's geometry."
        },
        "supportedQueryFormats": {
          "type": "string",
          "description": "String value indicating the output formats that are supported in a query."
        },
        "supportsAdvancedQueries": {
          "type": "boolean",
          "description": "Boolean value indicating whether the layer supports orderByFields in a query operation."
        },
        "supportsAttachmentsByUploadId": {
          "type": "boolean",
          "description": "Boolean value indicating whether the layer supports uploading attachments with the Uploads operation. This can then be used in the Add Attachment and Update Attachment operations."
        },
        "supportsCalculate": {
          "type": "boolean",
          "description": "Boolean value indicating whether the layer supports the Calculate REST operation when updating features."
        },
        "supportsRollbackOnFailureParameter": {
          "type": "boolean",
          "description": "Boolean value indicating whether the layer supports rolling back edits made on a feature layer if some of the edits fail."
        },
        "supportsStatistics": {
          "type": "boolean",
          "description": "Boolean value indicating whether feature layer query operations support statistical functions."
        },
        "supportsValidateSql": {
          "type": "boolean",
          "description": "Boolean value indicating whether the validateSQL operation is supported across a feature service layer."
        },
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITemplate"
          },
          "description": "A property of the layer definition when there are no types defined; otherwise, templates are defined as properties of the types."
        },
        "timeInfo": {
          "description": "The time info metadata of the layer. May be set for feature layers inside a feature collection item."
        },
        "type": {
          "type": "string",
          "enum": [
            "Feature Layer",
            "Table"
          ],
          "description": "Indicates whether the layerDefinition applies to a Feature Layer or a Table."
        },
        "typeIdField": {
          "type": "string",
          "description": "Contains the name of the field holding the type ID for the features."
        },
        "types": {
          "description": "Contains information about an attribute field."
        },
        "visibilityField": {
          "type": "string",
          "description": "String value indicating the attribute field that is used to control the visibility of a feature. If applicable, when rendering a feature the client should use this field to control visibility. The field's values are 0 = do not display, 1 = display."
        },
        "relationships": {
          "type": "array",
          "items": {}
        },
        "editFieldsInfo": {
          "type": "object",
          "properties": {
            "creationDateField": {
              "type": "string"
            },
            "creatorField": {
              "type": "string"
            },
            "editDateField": {
              "type": "string"
            },
            "editorField": {
              "type": "string"
            }
          }
        },
        "parentLayerId": {
          "type": "number"
        },
        "ownershipBasedAccessControlForFeatures": {
          "type": "boolean"
        },
        "syncCanReturnChanges": {
          "type": "boolean"
        },
        "archivingInfo": {
          "type": "object",
          "properties": {
            "supportsQueryWithHistoricMoment": {
              "type": "boolean"
            },
            "startArchivingMoment": {
              "type": "number"
            }
          }
        },
        "supportsValidateSQL": {
          "type": "boolean"
        },
        "advancedQueryCapabilities": {
          "type": "object",
          "properties": {
            "supportsPagination": {
              "type": "boolean"
            },
            "supportsTrueCurve": {
              "type": "boolean"
            },
            "supportsQueryWithDistance": {
              "type": "boolean"
            },
            "supportsReturningQueryExtent": {
              "type": "boolean"
            },
            "supportsStatistics": {
              "type": "boolean"
            },
            "supportsOrderBy": {
              "type": "boolean"
            },
            "supportsDistinct": {
              "type": "boolean"
            },
            "supportsSqlExpression": {
              "type": "boolean"
            },
            "supportsPercentileStatistics": {
              "type": "boolean"
            }
          }
        },
        "allowTrueCurvesUpdates": {
          "type": "boolean"
        },
        "onlyAllowTrueCurveUpdatesByTrueCurveClients": {
          "type": "boolean"
        },
        "supportsApplyEditsWithGlobalIds": {
          "type": "boolean"
        },
        "subtypeField": {
          "type": "string"
        },
        "indexes": {
          "type": "array",
          "items": {}
        },
        "dateFieldsTimeReference": {
          "type": "object",
          "properties": {
            "timeZone": {
              "type": "string"
            },
            "respectsDaylightSaving": {
              "type": "boolean"
            }
          }
        },
        "useStandardizedQueries": {
          "type": "boolean"
        }
      },
      "description": "`ILayerDefinition` can also be imported from the following packages:\n\n```js import { ILayerDefinition } from \"@esri/arcgis-rest-service-admin\"; import { ILayerDefinition } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "ILayerDefinition"
    },
    "IEditingInfo": {
      "type": "object",
      "properties": {
        "lastEditDate": {
          "type": "number",
          "description": "date of last edit to the layer"
        }
      },
      "title": "IEditingInfo"
    },
    "IField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A string defining the field name."
        },
        "type": {
          "$ref": "#/definitions/FieldType",
          "description": "A string defining the field type."
        },
        "alias": {
          "type": "string",
          "description": "A string defining the field alias."
        },
        "domain": {
          "$ref": "#/definitions/IDomain",
          "description": "The domain objects if applicable."
        },
        "editable": {
          "type": "boolean",
          "description": "A Boolean defining whether this field is editable."
        },
        "exactMatch": {
          "type": "boolean",
          "description": "A Boolean defining whether or not the field is an exact match."
        },
        "length": {
          "type": "number",
          "description": "A number defining how many characters are allowed in a string. field."
        },
        "nullable": {
          "type": "boolean",
          "description": "A Boolean defining whether this field can have a null value."
        },
        "defaultValue": {
          "description": "The value written in for new records by default."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "Contains information about an attribute field.\n\n`IField` can also be imported from the following packages:\n\n```js import { IField } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IField"
    },
    "FieldType": {
      "type": "string",
      "enum": [
        "esriFieldTypeBigInteger",
        "esriFieldTypeBlob",
        "esriFieldTypeDate",
        "esriFieldTypeDateOnly",
        "esriFieldTypeDouble",
        "esriFieldTypeGeometry",
        "esriFieldTypeGlobalID",
        "esriFieldTypeGUID",
        "esriFieldTypeInteger",
        "esriFieldTypeOID",
        "esriFieldTypeRaster",
        "esriFieldTypeSingle",
        "esriFieldTypeSmallInteger",
        "esriFieldTypeString",
        "esriFieldTypeTimestampOffset",
        "esriFieldTypeXML"
      ],
      "description": "Field type.",
      "title": "FieldType"
    },
    "IDomain": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/DomainType",
          "description": "A string defining the domain type."
        },
        "name": {
          "type": "string",
          "description": "A string defining the field name."
        },
        "range": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2,
          "description": "A 2 element array defining the range of possible values."
        },
        "codedValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ICodedValue"
          },
          "description": "An array of CodedValues for domains of type codedValue."
        },
        "description": {
          "type": "string",
          "description": "Description of the domain"
        },
        "mergePolicy": {
          "type": "string",
          "description": "Merge policy"
        },
        "splitPolicy": {
          "type": "string",
          "description": "Split Policy"
        }
      },
      "required": [
        "type"
      ],
      "description": "Information for a field with a domain",
      "title": "IDomain"
    },
    "DomainType": {
      "type": "string",
      "enum": [
        "codedValue",
        "inherited",
        "range"
      ],
      "description": "Domain types",
      "title": "DomainType"
    },
    "ICodedValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User-friendly name for what the code means."
        },
        "code": {
          "type": [
            "number",
            "string"
          ],
          "description": "The value stored in the feature attribute."
        }
      },
      "required": [
        "name",
        "code"
      ],
      "description": "CodedValue type",
      "title": "ICodedValue"
    },
    "GeometryType": {
      "type": "string",
      "enum": [
        "esriGeometryEnvelope",
        "esriGeometryMultipoint",
        "esriGeometryPoint",
        "esriGeometryPolygon",
        "esriGeometryPolyline"
      ],
      "description": "`GeometryType` can also be imported from the following packages:\n\n```js import { GeometryType } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "GeometryType"
    },
    "ITemplate": {
      "type": "object",
      "properties": {
        "description": {
          "description": "A string value containing a detailed description of the template."
        },
        "drawingTool": {
          "$ref": "#/definitions/FeatureEditTool",
          "description": "An optional string that can define a client-side drawing tool to be used with this feature. For example, map notes used by the Online Map Viewer use this to represent the viewer's different drawing tools."
        },
        "name": {
          "type": "string",
          "description": "A string containing a user-friendly name for the template."
        },
        "prototype": {
          "$ref": "#/definitions/IFeature",
          "description": "A feature object representing a prototypical feature for the template."
        }
      },
      "description": "Templates describe features that can be created in a layer. They are generally used with feature collections and editable web-based CSV layers. Templates are not used with ArcGIS feature services as these already have templates defined in the service. They are also defined as properties of the layer definition when there are no defined types. Otherwise, templates are defined as properties of the types.",
      "title": "ITemplate"
    },
    "FeatureEditTool": {
      "type": "string",
      "enum": [
        "esriFeatureEditToolAutoCompletePolygon",
        "esriFeatureEditToolCircle",
        "esriFeatureEditToolDownArrow",
        "esriFeatureEditToolEllipse",
        "esriFeatureEditToolFreehand",
        "esriFeatureEditToolLeftArrow",
        "esriFeatureEditToolLine",
        "esriFeatureEditToolNone",
        "esriFeatureEditToolPoint",
        "esriFeatureEditToolPolygon",
        "esriFeatureEditToolRectangle",
        "esriFeatureEditToolRightArrow",
        "esriFeatureEditToolText",
        "esriFeatureEditToolTriangle",
        "esriFeatureEditToolUpArrow"
      ],
      "title": "FeatureEditTool"
    },
    "IFeature": {
      "type": "object",
      "properties": {
        "geometry": {
          "$ref": "#/definitions/IGeometry"
        },
        "attributes": {
          "$ref": "#/definitions/Record%3Cstring%2Cany%3E"
        },
        "symbol": {
          "$ref": "#/definitions/ISymbol"
        }
      },
      "required": [
        "attributes"
      ],
      "description": "a spatial entity and its corresponding properties\n\n`IFeature` can also be imported from the following packages:\n\n```js import { IFeature } from \"@esri/arcgis-rest-feature-layer\"; import { IFeature } from \"@esri/arcgis-rest-routing\"; ```",
      "title": "IFeature"
    },
    "Record<string,any>": {
      "type": "object",
      "title": "Record<string,any>"
    },
    "IPopupInfo": {
      "type": "object",
      "properties": {
        "description": {
          "type": [
            "string",
            "null"
          ],
          "description": "A string that appears in the body of the popup window as a description. It is also possible to specify the description as HTML-formatted content."
        },
        "expressionInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPopupExpressionInfo"
          },
          "description": "List of Arcade expressions added to the pop-up."
        },
        "fieldInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IFieldInfo"
          },
          "description": "Array of fieldInfo information properties. This information is provided by the service layer definition. When the description uses name/value pairs, the order of the array is how the fields display in the editable Map Viewer popup and the resulting popup. It is also possible to specify HTML-formatted content."
        },
        "layerOptions": {
          "type": "object",
          "properties": {
            "showNoDataRecords": {
              "type": "boolean",
              "description": "Indicates whether or not the NoData records should be displayed."
            }
          },
          "required": [
            "showNoDataRecords"
          ],
          "description": "Additional options that can be defined for the popup layer."
        },
        "mediaInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IMediaInfo"
          },
          "description": "Array of various mediaInfo to display. Can be of type image, piechart, barchart, columnchart, or linechart. The order given is the order in which is displays."
        },
        "popupElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPopupElement"
          },
          "description": "An array of popupElement objects that represent an ordered list of popup elements."
        },
        "relatedRecordsInfo": {
          "$ref": "#/definitions/IRelatedRecordsInfo",
          "description": "Indicates whether to enable related records if they exist on a layer."
        },
        "showAttachments": {
          "type": "boolean",
          "description": "Indicates whether attachments will be loaded for feature layers that have attachments."
        },
        "title": {
          "type": "string",
          "description": "A string that appears at the top of the popup window as a title."
        }
      },
      "description": "Defines the look and feel of popup windows when a user clicks or queries a feature.",
      "title": "IPopupInfo"
    },
    "IPopupExpressionInfo": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string",
          "description": "The Arcade expression."
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for the expression."
        },
        "returnType": {
          "type": "string",
          "enum": [
            "number",
            "string"
          ],
          "description": "Return type of the Arcade expression, can be number or string. Defaults to string value. Number values are assumed to be double. This can be determined by the authoring client by executing the expression using a sample feature(s), although it can be corrected by the user. Knowing the returnType allows the authoring client to present fields in relevant contexts. For example, numeric fields in numeric contexts such as charts."
        },
        "title": {
          "type": "string",
          "description": "Title of the expression."
        }
      },
      "description": "Arcade expression added to the pop-up.",
      "title": "IPopupExpressionInfo"
    },
    "IFieldInfo": {
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "A string containing the field name as defined by the service. Anywhere that a fieldname is referenced as {field-name} in popupInfo, an Arcade expression can also be referenced as{expression/}`."
        },
        "format": {
          "$ref": "#/definitions/IFieldFormat",
          "description": "A format object used with numerical or date fields to provide more detail about how the value should be displayed in a web map popup window."
        },
        "isEditable": {
          "type": "boolean",
          "description": "A Boolean determining whether users can edit this field. Not applicable to Arcade expressions."
        },
        "label": {
          "type": "string",
          "description": "A string containing the field alias. This can be overridden by the web map author. Not applicable to Arcade expressions as title is used instead."
        },
        "stringFieldOption": {
          "type": "string",
          "enum": [
            "richtext",
            "textarea",
            "textbox"
          ],
          "description": "A string determining what type of input box editors see when editing the field. Applies only to string fields. Not applicable to Arcade expressions."
        },
        "tooltip": {
          "type": "string",
          "description": "A string providing an editing hint for editors of the field. Not applicable to Arcade expressions."
        },
        "visible": {
          "type": "boolean",
          "description": "A Boolean determining whether the field is visible in the popup window."
        }
      },
      "description": "Defines how a field in the dataset participates (or does not participate) in a popup window.",
      "title": "IFieldInfo"
    },
    "IFieldFormat": {
      "type": "object",
      "properties": {
        "dateFormat": {
          "type": "string",
          "enum": [
            "dayShortMonthYear",
            "longDate",
            "longMonthDayYear",
            "longMonthYear",
            "shortDate",
            "shortDateLE",
            "shortDateLELongTime",
            "shortDateLELongTime24",
            "shortDateLEShortTime",
            "shortDateLEShortTime24",
            "shortDateLongTime",
            "shortDateLongTime24",
            "shortDateShortTime",
            "shortDateShortTime24",
            "shortMonthYear",
            "year"
          ],
          "description": "A string used with date fields to specify how the date should appear in popup windows."
        },
        "digitSeparator": {
          "type": "boolean",
          "description": "A Boolean used with numerical fields. A value of true allows the number to have a digit (or thousands) separator when the value appears in popup windows. Depending on the locale, this separator is a decimal point or a comma. A value of false means that no separator will be used."
        },
        "places": {
          "type": "number",
          "description": "An integer used with numerical fields to specify the number of supported decimal places that should appear in popup windows. Any places beyond this value are rounded."
        }
      },
      "description": "The format object can be used with numerical or date fields to provide more detail about how values should be displayed in popup windows.",
      "title": "IFieldFormat"
    },
    "IMediaInfo": {
      "type": "object",
      "properties": {
        "caption": {
          "description": "A string caption describing the media."
        },
        "refreshInterval": {
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled. If the property does not exist, it's equivalent to having a value of 0. Only applicable when type is set to image."
        },
        "title": {
          "type": [
            "string",
            "null"
          ],
          "description": "A string title for the media."
        },
        "type": {
          "type": "string",
          "enum": [
            "barchart",
            "columnchart",
            "image",
            "linechart",
            "piechart"
          ],
          "description": "A string defining the type of media."
        },
        "value": {
          "anyOf": [
            {
              "$ref": "#/definitions/IMediaInfoValue"
            },
            {
              "type": "null"
            }
          ],
          "description": "A value object containing information about how the image should be retrieved or how the chart should be constructed."
        }
      },
      "description": "Defines an image or a chart to be displayed in a popup window.",
      "title": "IMediaInfo"
    },
    "IMediaInfoValue": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Used with charts. An array of strings, with each string containing the name of a field to display in the chart."
        },
        "linkURL": {
          "type": "string",
          "description": "Used with images. A string containing a URL to be launched in a browser when a user clicks the image."
        },
        "normalizeField": {
          "type": "string",
          "description": "Used with charts. An optional string containing the name of a field. The values of all fields in the chart will be normalized (divided) by the value of this field."
        },
        "sourceURL": {
          "type": "string",
          "description": "Used with images. A string containing the URL to the image."
        },
        "tooltipField": {
          "type": "string",
          "description": "String value indicating the tooltip for a chart specified from another field. This field is needed when related records are not sued. It is used for showing tooltips from another field in the same layer or related layer/table."
        }
      },
      "description": "The value object contains information for popup windows about how images should be retrieved or charts constructed.",
      "title": "IMediaInfoValue"
    },
    "IPopupElement": {
      "type": "object",
      "properties": {
        "displayType": {
          "type": "string",
          "enum": [
            "list",
            "preview"
          ],
          "description": "This property applies to elements of type attachments. A string value indicating how to display the attachment. Possible values are, preview, and list. If list is specified, attachments show as links."
        },
        "fieldInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IFieldInfo"
          },
          "description": "This property applies to elements of type fields. It is an array of popupInfo.fieldInfo objects representing a field/value pair displayed as a table within the popupElement. If the fieldInfos property is not provided, the popupElement will display whatever is specified directly in the popupInfo.fieldInfos property."
        },
        "mediaInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IMediaInfo"
          },
          "description": "This property applies to elements of type media. An array of popupInfo.mediaInfo objects representing an image or chart for display. If no mediaInfos property is provided, the popupElement will display whatever is specified in the popupInfo.mediaInfo property."
        },
        "text": {
          "type": "string",
          "description": "This property applies to elements of type text. This is string value indicating the text to be displayed within the popupElement. If no text property is provided, the popupElement will display whatever is specified in the popupInfo.description property."
        },
        "type": {
          "type": "string",
          "enum": [
            "attachments",
            "fields",
            "media",
            "text"
          ],
          "description": "String value indicating which elements to use."
        }
      },
      "description": "Popup elements allow users to author popups, using multiple elements such as tabular views, string description, media (charts and images), and attachments of the attributes and control the order in which they appear. Specifically, popupElements do the following: 1) provide the ability to explicitly add a field/ value table in addition to a description, 2) allow adding multiple description elements, and 3) allow a user to author and consume elements of a popup in the order of their choosing.",
      "title": "IPopupElement"
    },
    "IRelatedRecordsInfo": {
      "type": "object",
      "properties": {
        "orderByFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IOrderByField"
          },
          "description": "Array of orderByFields objects indicating the field display order for the related records and whether they should be sorted in ascending 'asc' or descending 'desc' order."
        },
        "showRelatedRecords": {
          "type": "boolean",
          "description": "Required boolean value indicating whether to display related records. If true, client should let the user navigate to the related records. Defaults to true if the layer participates in a relationship AND the related layer/table has already been added to the map (either as an operationalLayer or as a table)."
        }
      },
      "required": [
        "showRelatedRecords"
      ],
      "description": "The sort in the popupInfo for the parent feature. This impacts the sorting order for the returned child records.",
      "title": "IRelatedRecordsInfo"
    },
    "IOrderByField": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "The attribute value of the field selected that will drive the sorting of related records."
        },
        "order": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "description": "Set the ascending or descending sort order of the returned related records."
        }
      },
      "description": "Object indicating the field display order for the related records and whether they should be sorted in ascending or descending order.",
      "title": "IOrderByField"
    },
    "WebChartLabelBehavior": {
      "type": "string",
      "enum": [
        "hide",
        "rotate",
        "stagger",
        "wrap"
      ],
      "description": "Represents the different types of behaviors that can applied to a chart axis.",
      "title": "WebChartLabelBehavior"
    },
    "WebChartStackedKinds": {
      "type": "string",
      "enum": [
        "sideBySide",
        "stacked",
        "stacked100"
      ],
      "title": "WebChartStackedKinds"
    },
    "WebChartOrderSeriesBy": {
      "type": "object",
      "properties": {
        "preferLabel": {
          "type": "boolean",
          "description": "When the value is set to true, we want to order the split-by series based on the series' names (alias, custom label, or description).\n\nWhen the value is set to false, we want to order the split-by series based on the series' split-by values.",
          "default": true
        },
        "orderBy": {
          "$ref": "#/definitions/WebChartSortOrderKinds",
          "description": "The direction of the order.",
          "default": "WebChartSortOrderKinds.Ascending"
        }
      },
      "description": "Order options for split-by series.",
      "title": "WebChartOrderSeriesBy"
    },
    "WebChartSortOrderKinds": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "title": "WebChartSortOrderKinds"
    },
    "WebChartDirectionalDataOrder": {
      "type": "object",
      "properties": {
        "orderType": {
          "$ref": "#/definitions/WebChartOrderDataByTypes",
          "description": "The type of order, eg by category, by mean, by median, or by y value."
        },
        "orderBy": {
          "$ref": "#/definitions/WebChartSortOrderKinds",
          "description": "The direction of the order, either ascending or descending."
        },
        "preferLabel": {
          "type": "boolean",
          "description": "Indicates whether to order data by the label or the value.\n\nFor example, when a field has domain coded values or supbtypes, setting this property to `false` will order the data by the field value. Otherwise the domain description, subtypes description, or the alias of the field will be used to sort the data.",
          "default": true
        }
      },
      "required": [
        "orderType",
        "orderBy"
      ],
      "description": "A data order option that the items are to be ordered either ascending or descending. It can be used for any type of order, like by category, by mean, by median, etc.",
      "title": "WebChartDirectionalDataOrder"
    },
    "WebChartOrderDataByTypes": {
      "type": "string",
      "enum": [
        "arcgis-charts-y-value",
        "arcgis-charts-mean",
        "arcgis-charts-median",
        "arcgis-charts-category"
      ],
      "description": "The types of order assocated with chart data.",
      "title": "WebChartOrderDataByTypes"
    },
    "WebChartPredefinedLabelsDataOrder": {
      "type": "object",
      "properties": {
        "orderType": {
          "type": "string",
          "const": "arcgis-charts-category",
          "description": "The type of order, which is by category."
        },
        "orderBy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The predefined list of labels to order the data by.\n\nWhen the value of the `preferLabel` property is set to `false`, the `orderBy` list should be a list of coded domain values or field names; otherwise, it should be a list of domain descriptions, subtypes descriptions, or field aliases."
        },
        "preferLabel": {
          "type": "boolean",
          "description": "Indicates whether to order data by the label or the value.\n\nFor example, when a field has domain coded values or supbtypes, setting this property to `false` will order the data by the field value. Otherwise the domain description, subtypes description, or the alias of the field will be used to sort the data.\n\nWhen the value is set to `true` or undefined, the `orderBy` property should contain a list of labels like domain descriptions, subtypes descriptions, or field aliases. When the value is set to `false`, the `orderBy` property should contain a list of coded domain values or field names, in order for the data to be sorted correctly.",
          "default": true
        }
      },
      "required": [
        "orderType",
        "orderBy"
      ],
      "description": "A data order option for the items to be ordered by `category` based on a predefined list of labels.",
      "title": "WebChartPredefinedLabelsDataOrder"
    },
    "WebGaugeChart": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "const": "23.2.0",
          "description": "Version of the specification. Used to identify when a saved config was created."
        },
        "type": {
          "type": "string",
          "const": "chart",
          "description": "Represents a unique string identifier for the Chart object. For Chart object, it is **chart**."
        },
        "id": {
          "type": "string",
          "description": "Can be used to uniquely identify a chart. The consumer app can choose whether to use it or not."
        },
        "iLayer": {
          "$ref": "#/definitions/IFeatureLayer",
          "description": "Property representing the layer to be used by the chart. If not provided we expect a layer object to be set on the component."
        },
        "dataFilters": {
          "$ref": "#/definitions/WebChartDataFilters",
          "description": "Used to filter the chart's data while in Layer mode."
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies heading/title of the chart."
        },
        "subtitle": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies sub-heading/subtitle of the chart."
        },
        "footer": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies footer of the chart"
        },
        "background": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the background color of the chart.",
          "default": [
            255,
            255,
            255,
            255
          ]
        },
        "cursorCrosshair": {
          "$ref": "#/definitions/WebChartCursorCrosshair",
          "description": "Specifies cursor's crosshair information for the chart. Only for XY charts."
        },
        "legend": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartLegend"
            },
            {
              "$ref": "#/definitions/WebChartPieChartLegend"
            }
          ],
          "description": "Specifies the Legend information for the chart."
        },
        "axes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartGaugeAxis"
          },
          "minItems": 1,
          "maxItems": 1,
          "description": "Array of one WebChartGaugeAxis"
        },
        "horizontalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the horizontal axis can't display them all. The available options are: \"none\", \"rotate\", \"stagger\" and \"wrap\". For XY Chart only. Histogram can handle \"none\" and \"rotate\" only. The default value for the horizontal axis is \"rotate\" except for Histogram, where the default is none.",
          "default": "rotate"
        },
        "verticalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the vertical axis can't display them all. For XY Chart only. The available options are: \"none\" and \"wrap\". The default value for the vertical axis is \"wrap\".",
          "default": "wrap"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartSeriesType"
          },
          "description": "Represents an array of various chart series to be plot inside the chart. Empty array is not allowed.",
          "minItems": 1
        },
        "rotated": {
          "type": "boolean",
          "description": "Specifies whether or not the chart is rotated. Applied to Bar, Line, and Combo Bar and Line charts.",
          "default": false
        },
        "stackedType": {
          "$ref": "#/definitions/WebChartStackedKinds",
          "description": "Specifies how the bars/lines should be placed when multiple series are rendered in the same chart, say when \"split by\" operation is executed on any field or when multiple attributes/fields corresponding to the same set of classes are to be visualized.\n\nCurrently this property is only used for bar and line series.",
          "default": "sideBySide"
        },
        "colorMatch": {
          "type": "boolean",
          "description": "Specifies whether to first try matching the colors from the layer renderer or the chart renderer for coloring the chart elements, like markers, line segments, columns, etc.\n\nTo do so, this property needs to be set to `true`.\n\nWhen there is no matching color found (for when `colorMatch = true`) or when `colorMatch = false`, the colors from the config, and then from the color ramps will be used, in that order.",
          "default": false
        },
        "chartRenderer": {
          "description": "Renderer to use to style the series when the chart uses the color match mode. Considered before the layer's renderer."
        },
        "orderOptions": {
          "type": "object",
          "properties": {
            "series": {
              "$ref": "#/definitions/WebChartOrderSeriesBy",
              "description": "How series should be ordered and displayed in a multi-series chart. If not provided the series will be displayed as they are ordered in the config."
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WebChartDirectionalDataOrder"
                },
                {
                  "$ref": "#/definitions/WebChartPredefinedLabelsDataOrder"
                }
              ],
              "description": "How data for a chart should be ordered. It is recommended to use this property over its sibling `orderByFields` to order the chart data.\n\nIf not provided, the data will be displayed as it was retrieved from the server. No additional ordering will be applied."
            },
            "orderByFields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The orderByFields to be sent with the query when retrieving data for the chart.  It represents the desired sorting order of the output result from the server.\n\nMore info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields). The format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending"
            }
          },
          "description": "Chart order options (data and series)"
        },
        "innerRadius": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents the size of the hole in middle of the chart. The number is used as a percentage rather than a fixed value.",
          "default": 50
        },
        "startAngle": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents where is the chart's starting point",
          "default": -180
        },
        "endAngle": {
          "type": [
            "number",
            "null"
          ],
          "description": "Represents where is the chart's ending point. To be related with startAngle. If endAngle-startAngle is 360 the chart will render as full circle.",
          "default": 180
        },
        "subType": {
          "$ref": "#/definitions/GaugeChartSubTypes",
          "description": "The type of Gauge, like FeatureGauge and StatisticGauge.\n\nWhen this property is not specified, it will be defaulted to `GaugeChartSubTypes.StatisticGauge`."
        }
      },
      "required": [
        "axes",
        "series",
        "type",
        "version"
      ],
      "description": "JSON representation of Gauge chart.",
      "title": "WebGaugeChart"
    },
    "GaugeChartSubTypes": {
      "type": "string",
      "enum": [
        "featureGauge",
        "statisticGauge"
      ],
      "description": "Represents the different types of gauge charts.",
      "title": "GaugeChartSubTypes"
    },
    "WebBoxPlot": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "const": "23.2.0",
          "description": "Version of the specification. Used to identify when a saved config was created."
        },
        "type": {
          "type": "string",
          "const": "chart",
          "description": "Represents a unique string identifier for the Chart object. For Chart object, it is **chart**."
        },
        "id": {
          "type": "string",
          "description": "Can be used to uniquely identify a chart. The consumer app can choose whether to use it or not."
        },
        "iLayer": {
          "$ref": "#/definitions/IFeatureLayer",
          "description": "Property representing the layer to be used by the chart. If not provided we expect a layer object to be set on the component."
        },
        "dataFilters": {
          "$ref": "#/definitions/WebChartDataFilters",
          "description": "Used to filter the chart's data while in Layer mode."
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies heading/title of the chart."
        },
        "subtitle": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies sub-heading/subtitle of the chart."
        },
        "footer": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies footer of the chart"
        },
        "background": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the background color of the chart.",
          "default": [
            255,
            255,
            255,
            255
          ]
        },
        "cursorCrosshair": {
          "$ref": "#/definitions/WebChartCursorCrosshair",
          "description": "Specifies cursor's crosshair information for the chart. Only for XY charts."
        },
        "legend": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartLegend"
            },
            {
              "$ref": "#/definitions/WebChartPieChartLegend"
            }
          ],
          "description": "Specifies the Legend information for the chart."
        },
        "axes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartAxis"
          },
          "minItems": 1,
          "maxItems": 3,
          "description": "Represents an array of **at least 1 or at most 3** Chart Axis accompanying the chart. The axes property is optional because Pie chart does not use any axis. The third axis config is used when a series `assignToSecondValueAxis` is set to `true`. Some of the axis features won't apply to the third axis (e.g. labels behaviors)."
        },
        "horizontalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the horizontal axis can't display them all. The available options are: \"none\", \"rotate\", \"stagger\" and \"wrap\". For XY Chart only. Histogram can handle \"none\" and \"rotate\" only. The default value for the horizontal axis is \"rotate\" except for Histogram, where the default is none.",
          "default": "rotate"
        },
        "verticalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the vertical axis can't display them all. For XY Chart only. The available options are: \"none\" and \"wrap\". The default value for the vertical axis is \"wrap\".",
          "default": "wrap"
        },
        "series": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/WebChartBoxPlotSeries"
              },
              {
                "$ref": "#/definitions/WebChartLineChartSeries"
              }
            ]
          },
          "description": "The box plot series can be of type \"boxPlotSeries\" or \"lineSeries\"."
        },
        "rotated": {
          "type": "boolean",
          "description": "Specifies whether or not the chart is rotated. Applied to Bar, Line, and Combo Bar and Line charts.",
          "default": false
        },
        "stackedType": {
          "$ref": "#/definitions/WebChartStackedKinds",
          "description": "Specifies how the bars/lines should be placed when multiple series are rendered in the same chart, say when \"split by\" operation is executed on any field or when multiple attributes/fields corresponding to the same set of classes are to be visualized.\n\nCurrently this property is only used for bar and line series.",
          "default": "sideBySide"
        },
        "colorMatch": {
          "type": "boolean",
          "description": "Specifies whether to first try matching the colors from the layer renderer or the chart renderer for coloring the chart elements, like markers, line segments, columns, etc.\n\nTo do so, this property needs to be set to `true`.\n\nWhen there is no matching color found (for when `colorMatch = true`) or when `colorMatch = false`, the colors from the config, and then from the color ramps will be used, in that order.",
          "default": false
        },
        "chartRenderer": {
          "description": "Renderer to use to style the series when the chart uses the color match mode. Considered before the layer's renderer."
        },
        "orderOptions": {
          "type": "object",
          "properties": {
            "series": {
              "$ref": "#/definitions/WebChartOrderSeriesBy",
              "description": "How series should be ordered and displayed in a multi-series chart. If not provided the series will be displayed as they are ordered in the config."
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WebChartDirectionalDataOrder"
                },
                {
                  "$ref": "#/definitions/WebChartPredefinedLabelsDataOrder"
                }
              ],
              "description": "How data for a chart should be ordered. It is recommended to use this property over its sibling `orderByFields` to order the chart data.\n\nIf not provided, the data will be displayed as it was retrieved from the server. No additional ordering will be applied."
            },
            "orderByFields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The orderByFields to be sent with the query when retrieving data for the chart.  It represents the desired sorting order of the output result from the server.\n\nMore info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields). The format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending"
            }
          },
          "description": "Chart order options (data and series)"
        },
        "showOutliers": {
          "type": "boolean",
          "description": "Whether to show the outliers on the chart"
        },
        "standardizeValues": {
          "type": "boolean",
          "description": "Whether to standardize the values by calculating the series z-score"
        },
        "showMean": {
          "type": "boolean",
          "description": "Whether to show the mean lines on the chart. Applies only if a split-by field is set. Additionally the chart will render with that option enabled only if the the series array contains one box plot series and N lines series.",
          "default": false
        }
      },
      "required": [
        "series",
        "type",
        "version"
      ],
      "description": "JSON representation of Gauge",
      "title": "WebBoxPlot"
    },
    "WebRadarChart": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "const": "23.2.0",
          "description": "Version of the specification. Used to identify when a saved config was created."
        },
        "type": {
          "type": "string",
          "const": "chart",
          "description": "Represents a unique string identifier for the Chart object. For Chart object, it is **chart**."
        },
        "id": {
          "type": "string",
          "description": "Can be used to uniquely identify a chart. The consumer app can choose whether to use it or not."
        },
        "iLayer": {
          "$ref": "#/definitions/IFeatureLayer",
          "description": "Property representing the layer to be used by the chart. If not provided we expect a layer object to be set on the component."
        },
        "dataFilters": {
          "$ref": "#/definitions/WebChartDataFilters",
          "description": "Used to filter the chart's data while in Layer mode."
        },
        "title": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies heading/title of the chart."
        },
        "subtitle": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies sub-heading/subtitle of the chart."
        },
        "footer": {
          "$ref": "#/definitions/WebChartText",
          "description": "Specifies footer of the chart"
        },
        "background": {
          "$ref": "#/definitions/Color",
          "description": "Specifies the background color of the chart.",
          "default": [
            255,
            255,
            255,
            255
          ]
        },
        "cursorCrosshair": {
          "$ref": "#/definitions/WebChartCursorCrosshair",
          "description": "Specifies cursor's crosshair information for the chart. Only for XY charts."
        },
        "legend": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartLegend"
            },
            {
              "$ref": "#/definitions/WebChartPieChartLegend"
            }
          ],
          "description": "Specifies the Legend information for the chart."
        },
        "axes": {
          "type": "array",
          "minItems": 2,
          "items": [
            {
              "$ref": "#/definitions/WebChartRadarChartAxis"
            },
            {
              "$ref": "#/definitions/WebChartAxis"
            }
          ],
          "maxItems": 2,
          "description": "Array of two axes, one specific to the radar chart and the other one common to all charts"
        },
        "horizontalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the horizontal axis can't display them all. The available options are: \"none\", \"rotate\", \"stagger\" and \"wrap\". For XY Chart only. Histogram can handle \"none\" and \"rotate\" only. The default value for the horizontal axis is \"rotate\" except for Histogram, where the default is none.",
          "default": "rotate"
        },
        "verticalAxisLabelsBehavior": {
          "$ref": "#/definitions/WebChartLabelBehavior",
          "description": "Represents the way the labels should behave when the vertical axis can't display them all. For XY Chart only. The available options are: \"none\" and \"wrap\". The default value for the vertical axis is \"wrap\".",
          "default": "wrap"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartRadarChartSeries"
          },
          "description": "The radar chart series",
          "minItems": 1
        },
        "rotated": {
          "type": "boolean",
          "description": "Specifies whether or not the chart is rotated. Applied to Bar, Line, and Combo Bar and Line charts.",
          "default": false
        },
        "stackedType": {
          "$ref": "#/definitions/WebChartStackedKinds",
          "description": "Specifies how the bars/lines should be placed when multiple series are rendered in the same chart, say when \"split by\" operation is executed on any field or when multiple attributes/fields corresponding to the same set of classes are to be visualized.\n\nCurrently this property is only used for bar and line series.",
          "default": "sideBySide"
        },
        "colorMatch": {
          "type": "boolean",
          "description": "Specifies whether to first try matching the colors from the layer renderer or the chart renderer for coloring the chart elements, like markers, line segments, columns, etc.\n\nTo do so, this property needs to be set to `true`.\n\nWhen there is no matching color found (for when `colorMatch = true`) or when `colorMatch = false`, the colors from the config, and then from the color ramps will be used, in that order.",
          "default": false
        },
        "chartRenderer": {
          "description": "Renderer to use to style the series when the chart uses the color match mode. Considered before the layer's renderer."
        },
        "orderOptions": {
          "type": "object",
          "properties": {
            "series": {
              "$ref": "#/definitions/WebChartOrderSeriesBy",
              "description": "How series should be ordered and displayed in a multi-series chart. If not provided the series will be displayed as they are ordered in the config."
            },
            "data": {
              "anyOf": [
                {
                  "$ref": "#/definitions/WebChartDirectionalDataOrder"
                },
                {
                  "$ref": "#/definitions/WebChartPredefinedLabelsDataOrder"
                }
              ],
              "description": "How data for a chart should be ordered. It is recommended to use this property over its sibling `orderByFields` to order the chart data.\n\nIf not provided, the data will be displayed as it was retrieved from the server. No additional ordering will be applied."
            },
            "orderByFields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The orderByFields to be sent with the query when retrieving data for the chart.  It represents the desired sorting order of the output result from the server.\n\nMore info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields). The format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending"
            }
          },
          "description": "Chart order options (data and series)"
        }
      },
      "required": [
        "axes",
        "series",
        "type",
        "version"
      ],
      "description": "Gives a JSON representation of the Radar Chart object.",
      "title": "WebRadarChart"
    },
    "SupportedLayer": {
      "anyOf": [
        {
          "$ref": "#/definitions/__esri.FeatureLayer"
        },
        {
          "$ref": "#/definitions/__esri.SubtypeSublayer"
        }
      ],
      "description": "Supported layer type for ArcGIS charts.",
      "title": "SupportedLayer"
    },
    "__esri.FeatureLayer": {
      "type": "object",
      "properties": {
        "useViewTime": {
          "type": "boolean"
        },
        "maxScale": {
          "type": "number"
        },
        "minScale": {
          "type": "number"
        },
        "publishingInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.PublishingInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "persistenceEnabled": {
          "type": "boolean"
        },
        "capabilities": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Capabilities"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "copyright": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "dateFieldsTimeZone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "datesInUnknownTimezone": {
          "type": "boolean"
        },
        "definitionExpression": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "displayField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "editFieldsInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.EditFieldsInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "editingInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.EditingInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "effectiveCapabilities": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Capabilities"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "effectiveEditingEnabled": {
          "type": "boolean"
        },
        "fieldsIndex": {
          "$ref": "#/definitions/__esri.FieldsIndex"
        },
        "gdbVersion": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "geometryFieldsInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.GeometryFieldsInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "geometryType": {
          "anyOf": [
            {
              "type": "string",
              "const": "point"
            },
            {
              "type": "string",
              "const": "multipoint"
            },
            {
              "type": "string",
              "const": "polyline"
            },
            {
              "type": "string",
              "const": "polygon"
            },
            {
              "type": "string",
              "const": "multipatch"
            },
            {
              "type": "string",
              "const": "mesh"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "globalIdField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "hasM": {
          "type": "boolean"
        },
        "hasZ": {
          "type": "boolean"
        },
        "isTable": {
          "type": "boolean"
        },
        "layerId": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "objectIdField": {
          "type": "string"
        },
        "preferredTimeZone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "relationships": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/__esri.Relationship"
              }
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "returnM": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "returnZ": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "serviceDefinitionExpression": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "serviceItemId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "sourceJSON": {
          "anyOf": [
            {},
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "subtypeField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "subtypes": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/__esri.Subtype"
              }
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "version": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "displayFilterEnabled": {
          "type": "boolean"
        },
        "displayFilterInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.DisplayFilterInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "customParameters": {
          "anyOf": [
            {},
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "blendMode": {
          "type": "string",
          "enum": [
            "average",
            "color-burn",
            "color-dodge",
            "color",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "invert",
            "lighten",
            "lighter",
            "luminosity",
            "minus",
            "multiply",
            "normal",
            "overlay",
            "plus",
            "reflect",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "vivid-light",
            "xor"
          ]
        },
        "effect": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Effect"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "apiKey": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "uid": {
          "type": "string"
        },
        "loadError": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Error"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "loadStatus": {
          "type": "string",
          "enum": [
            "not-loaded",
            "loading",
            "failed",
            "loaded"
          ]
        },
        "loadWarnings": {
          "type": "array",
          "items": {}
        },
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "apiKey",
        "blendMode",
        "capabilities",
        "copyright",
        "customParameters",
        "dateFieldsTimeZone",
        "datesInUnknownTimezone",
        "declaredClass",
        "definitionExpression",
        "destroyed",
        "displayField",
        "displayFilterEnabled",
        "displayFilterInfo",
        "editFieldsInfo",
        "editingInfo",
        "effect",
        "effectiveCapabilities",
        "effectiveEditingEnabled",
        "fieldsIndex",
        "gdbVersion",
        "geometryFieldsInfo",
        "geometryType",
        "globalIdField",
        "hasM",
        "hasZ",
        "initialized",
        "isTable",
        "layerId",
        "loadError",
        "loadStatus",
        "loadWarnings",
        "maxScale",
        "minScale",
        "objectIdField",
        "persistenceEnabled",
        "preferredTimeZone",
        "publishingInfo",
        "relationships",
        "returnM",
        "returnZ",
        "serviceDefinitionExpression",
        "serviceItemId",
        "sourceJSON",
        "subtypeField",
        "subtypes",
        "title",
        "uid",
        "url",
        "useViewTime",
        "version"
      ],
      "title": "__esri.FeatureLayer"
    },
    "__esri.Layer": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "loadError": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Error"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "loadStatus": {
          "type": "string",
          "enum": [
            "not-loaded",
            "loading",
            "failed",
            "loaded"
          ]
        },
        "loadWarnings": {
          "type": "array",
          "items": {}
        },
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized",
        "loadError",
        "loadStatus",
        "loadWarnings",
        "uid"
      ],
      "title": "__esri.Layer"
    },
    "__esri.Accessor": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "destroyed",
        "initialized",
        "declaredClass"
      ],
      "title": "__esri.Accessor"
    },
    "__esri.Loadable": {
      "type": "object",
      "properties": {
        "loadError": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Error"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "loadStatus": {
          "type": "string",
          "enum": [
            "not-loaded",
            "loading",
            "failed",
            "loaded"
          ]
        },
        "loadWarnings": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "loadError",
        "loadStatus",
        "loadWarnings"
      ],
      "title": "__esri.Loadable"
    },
    "__esri.Error": {
      "type": "object",
      "properties": {
        "details": {
          "anyOf": [
            {},
            {
              "$ref": "#/definitions/nullish"
            }
          ],
          "description": "The details object provides additional details specific to the error, giving more information about why the error was raised.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html#details Read more... }"
        },
        "message": {
          "type": "string",
          "description": "A message describing the details of the error.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html#message Read more... }"
        },
        "name": {
          "type": "string",
          "description": "A unique error name.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-core-Error.html#name Read more... }"
        }
      },
      "required": [
        "details",
        "message",
        "name"
      ],
      "title": "__esri.Error"
    },
    "nullish": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "not": {}
        }
      ],
      "title": "nullish"
    },
    "__esri.Evented": {
      "type": "object",
      "title": "__esri.Evented"
    },
    "__esri.Identifiable": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        }
      },
      "required": [
        "uid"
      ],
      "title": "__esri.Identifiable"
    },
    "__esri.APIKeyMixin": {
      "type": "object",
      "properties": {
        "apiKey": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "apiKey"
      ],
      "title": "__esri.APIKeyMixin"
    },
    "__esri.BlendLayer": {
      "type": "object",
      "properties": {
        "blendMode": {
          "type": "string",
          "enum": [
            "average",
            "color-burn",
            "color-dodge",
            "color",
            "darken",
            "destination-atop",
            "destination-in",
            "destination-out",
            "destination-over",
            "difference",
            "exclusion",
            "hard-light",
            "hue",
            "invert",
            "lighten",
            "lighter",
            "luminosity",
            "minus",
            "multiply",
            "normal",
            "overlay",
            "plus",
            "reflect",
            "saturation",
            "screen",
            "soft-light",
            "source-atop",
            "source-in",
            "source-out",
            "vivid-light",
            "xor"
          ]
        },
        "effect": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Effect"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "blendMode",
        "effect"
      ],
      "title": "__esri.BlendLayer"
    },
    "__esri.Effect": {
      "anyOf": [
        {
          "type": "array",
          "items": {}
        },
        {
          "type": "string"
        }
      ],
      "description": "Effect provides various filter functions that can be performed on a layer or a layerView to achieve different visual effects similar to how image filters (photo apps) work.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-FeatureEffect.html#Effect Read more... }",
      "title": "__esri.Effect"
    },
    "__esri.Clonable": {
      "type": "object",
      "title": "__esri.Clonable"
    },
    "__esri.CustomParametersMixin": {
      "type": "object",
      "properties": {
        "customParameters": {
          "anyOf": [
            {},
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "customParameters"
      ],
      "title": "__esri.CustomParametersMixin"
    },
    "__esri.DisplayFilteredLayer": {
      "type": "object",
      "properties": {
        "displayFilterEnabled": {
          "type": "boolean"
        },
        "displayFilterInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.DisplayFilterInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "displayFilterEnabled",
        "displayFilterInfo"
      ],
      "title": "__esri.DisplayFilteredLayer"
    },
    "__esri.DisplayFilterInfo": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized"
      ],
      "title": "__esri.DisplayFilterInfo"
    },
    "__esri.JSONSupport": {
      "type": "object",
      "title": "__esri.JSONSupport"
    },
    "__esri.FeatureEffectLayer": {
      "type": "object",
      "title": "__esri.FeatureEffectLayer"
    },
    "__esri.FeatureLayerBase": {
      "type": "object",
      "properties": {
        "capabilities": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Capabilities"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "copyright": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "dateFieldsTimeZone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "datesInUnknownTimezone": {
          "type": "boolean"
        },
        "definitionExpression": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "displayField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "editFieldsInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.EditFieldsInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "editingInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.EditingInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "effectiveCapabilities": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Capabilities"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "effectiveEditingEnabled": {
          "type": "boolean"
        },
        "fieldsIndex": {
          "$ref": "#/definitions/__esri.FieldsIndex"
        },
        "gdbVersion": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "geometryFieldsInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.GeometryFieldsInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "geometryType": {
          "anyOf": [
            {
              "type": "string",
              "const": "point"
            },
            {
              "type": "string",
              "const": "multipoint"
            },
            {
              "type": "string",
              "const": "polyline"
            },
            {
              "type": "string",
              "const": "polygon"
            },
            {
              "type": "string",
              "const": "multipatch"
            },
            {
              "type": "string",
              "const": "mesh"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "globalIdField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "hasM": {
          "type": "boolean"
        },
        "hasZ": {
          "type": "boolean"
        },
        "isTable": {
          "type": "boolean"
        },
        "layerId": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "objectIdField": {
          "type": "string"
        },
        "preferredTimeZone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "relationships": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/__esri.Relationship"
              }
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "returnM": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "returnZ": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "serviceDefinitionExpression": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "serviceItemId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "sourceJSON": {
          "anyOf": [
            {},
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "subtypeField": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "subtypes": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/__esri.Subtype"
              }
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "version": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "capabilities",
        "copyright",
        "dateFieldsTimeZone",
        "datesInUnknownTimezone",
        "definitionExpression",
        "displayField",
        "editFieldsInfo",
        "editingInfo",
        "effectiveCapabilities",
        "effectiveEditingEnabled",
        "fieldsIndex",
        "gdbVersion",
        "geometryFieldsInfo",
        "geometryType",
        "globalIdField",
        "hasM",
        "hasZ",
        "isTable",
        "layerId",
        "objectIdField",
        "preferredTimeZone",
        "relationships",
        "returnM",
        "returnZ",
        "serviceDefinitionExpression",
        "serviceItemId",
        "sourceJSON",
        "subtypeField",
        "subtypes",
        "title",
        "url",
        "version"
      ],
      "title": "__esri.FeatureLayerBase"
    },
    "__esri.Capabilities": {
      "type": "object",
      "properties": {
        "analytics": {
          "$ref": "#/definitions/__esri.CapabilitiesAnalytics"
        },
        "attachment": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.CapabilitiesAttachment"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/__esri.CapabilitiesData"
        },
        "editing": {
          "$ref": "#/definitions/__esri.CapabilitiesEditing"
        },
        "metadata": {
          "$ref": "#/definitions/__esri.CapabilitiesMetadata"
        },
        "operations": {
          "$ref": "#/definitions/__esri.CapabilitiesOperations"
        },
        "query": {
          "$ref": "#/definitions/__esri.CapabilitiesQuery"
        },
        "queryAttributeBins": {
          "$ref": "#/definitions/__esri.CapabilitiesQueryAttributeBins"
        },
        "queryRelated": {
          "$ref": "#/definitions/__esri.CapabilitiesQueryRelated"
        },
        "queryTopFeatures": {
          "$ref": "#/definitions/__esri.CapabilitiesQueryTopFeatures"
        }
      },
      "required": [
        "analytics",
        "attachment",
        "data",
        "editing",
        "metadata",
        "operations",
        "query",
        "queryAttributeBins",
        "queryRelated",
        "queryTopFeatures"
      ],
      "description": "Describes the layer's supported capabilities.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#Capabilities Read more... }",
      "title": "__esri.Capabilities"
    },
    "__esri.CapabilitiesAnalytics": {
      "type": "object",
      "properties": {
        "supportsCacheHint": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsCacheHint"
      ],
      "title": "__esri.CapabilitiesAnalytics"
    },
    "__esri.CapabilitiesAttachment": {
      "type": "object",
      "properties": {
        "supportsCacheHint": {
          "type": "boolean"
        },
        "supportsContentType": {
          "type": "boolean"
        },
        "supportsExifInfo": {
          "type": "boolean"
        },
        "supportsKeywords": {
          "type": "boolean"
        },
        "supportsOrderByFields": {
          "type": "boolean"
        },
        "supportsName": {
          "type": "boolean"
        },
        "supportsSize": {
          "type": "boolean"
        },
        "supportsResize": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsCacheHint",
        "supportsContentType",
        "supportsExifInfo",
        "supportsKeywords",
        "supportsOrderByFields",
        "supportsName",
        "supportsSize",
        "supportsResize"
      ],
      "title": "__esri.CapabilitiesAttachment"
    },
    "__esri.CapabilitiesData": {
      "type": "object",
      "properties": {
        "isVersioned": {
          "type": "boolean"
        },
        "isBranchVersioned": {
          "type": "boolean"
        },
        "supportsAttachment": {
          "type": "boolean"
        },
        "supportsM": {
          "type": "boolean"
        },
        "supportsZ": {
          "type": "boolean"
        }
      },
      "required": [
        "isVersioned",
        "isBranchVersioned",
        "supportsAttachment",
        "supportsM",
        "supportsZ"
      ],
      "title": "__esri.CapabilitiesData"
    },
    "__esri.CapabilitiesEditing": {
      "type": "object",
      "properties": {
        "supportsDeleteByAnonymous": {
          "type": "boolean"
        },
        "supportsDeleteByOthers": {
          "type": "boolean"
        },
        "supportsGeometryUpdate": {
          "type": "boolean"
        },
        "supportsGlobalId": {
          "type": "boolean"
        },
        "supportsRollbackOnFailure": {
          "type": "boolean"
        },
        "supportsUpdateByAnonymous": {
          "type": "boolean"
        },
        "supportsUpdateByOthers": {
          "type": "boolean"
        },
        "supportsUploadWithItemId": {
          "type": "boolean"
        },
        "supportsUpdateWithoutM": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsDeleteByAnonymous",
        "supportsDeleteByOthers",
        "supportsGeometryUpdate",
        "supportsGlobalId",
        "supportsRollbackOnFailure",
        "supportsUpdateByAnonymous",
        "supportsUpdateByOthers",
        "supportsUploadWithItemId",
        "supportsUpdateWithoutM"
      ],
      "title": "__esri.CapabilitiesEditing"
    },
    "__esri.CapabilitiesMetadata": {
      "type": "object",
      "properties": {
        "supportsAdvancedFieldProperties": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsAdvancedFieldProperties"
      ],
      "title": "__esri.CapabilitiesMetadata"
    },
    "__esri.CapabilitiesOperations": {
      "type": "object",
      "properties": {
        "supportsAdd": {
          "type": "boolean"
        },
        "supportsCalculate": {
          "type": "boolean"
        },
        "supportsDelete": {
          "type": "boolean"
        },
        "supportsEditing": {
          "type": "boolean"
        },
        "supportsQuery": {
          "type": "boolean"
        },
        "supportsQueryAttachments": {
          "type": "boolean"
        },
        "supportsResizeAttachments": {
          "type": "boolean"
        },
        "supportsQueryTopFeatures": {
          "type": "boolean"
        },
        "supportsUpdate": {
          "type": "boolean"
        },
        "supportsValidateSql": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsAdd",
        "supportsCalculate",
        "supportsDelete",
        "supportsEditing",
        "supportsQuery",
        "supportsQueryAttachments",
        "supportsResizeAttachments",
        "supportsQueryTopFeatures",
        "supportsUpdate",
        "supportsValidateSql"
      ],
      "title": "__esri.CapabilitiesOperations"
    },
    "__esri.CapabilitiesQuery": {
      "type": "object",
      "properties": {
        "maxRecordCount": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "maxUniqueIDCount": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "supportsCacheHint": {
          "type": "boolean"
        },
        "supportsCentroid": {
          "type": "boolean"
        },
        "supportsDisjointSpatialRelationship": {
          "type": "boolean"
        },
        "supportsDistance": {
          "type": "boolean"
        },
        "supportsDistinct": {
          "type": "boolean"
        },
        "supportsExtent": {
          "type": "boolean"
        },
        "supportsGeometryProperties": {
          "type": "boolean"
        },
        "supportsHavingClause": {
          "type": "boolean"
        },
        "supportsHistoricMoment": {
          "type": "boolean"
        },
        "supportsMaxRecordCountFactor": {
          "type": "boolean"
        },
        "supportsOrderBy": {
          "type": "boolean"
        },
        "supportsPagination": {
          "type": "boolean"
        },
        "supportsPercentileStatistics": {
          "type": "boolean"
        },
        "supportsQuantization": {
          "type": "boolean"
        },
        "supportsQuantizationEditMode": {
          "type": "boolean"
        },
        "supportsQueryGeometry": {
          "type": "boolean"
        },
        "supportsResultType": {
          "type": "boolean"
        },
        "supportsReturnMesh": {
          "type": "boolean"
        },
        "supportsStandardizedQueriesOnly": {
          "type": "boolean"
        },
        "supportsStatistics": {
          "type": "boolean"
        },
        "supportsSqlExpression": {
          "type": "boolean"
        },
        "supportsSpatialAggregationStatistics": {
          "type": "boolean"
        },
        "supportsTrueCurve": {
          "type": "boolean"
        },
        "supportedSpatialAggregationStatistics": {
          "$ref": "#/definitions/__esri.CapabilitiesQuerySupportedSpatialAggregationStatistics"
        }
      },
      "required": [
        "maxRecordCount",
        "maxUniqueIDCount",
        "supportsCacheHint",
        "supportsCentroid",
        "supportsDisjointSpatialRelationship",
        "supportsDistance",
        "supportsDistinct",
        "supportsExtent",
        "supportsGeometryProperties",
        "supportsHavingClause",
        "supportsHistoricMoment",
        "supportsMaxRecordCountFactor",
        "supportsOrderBy",
        "supportsPagination",
        "supportsPercentileStatistics",
        "supportsQuantization",
        "supportsQuantizationEditMode",
        "supportsQueryGeometry",
        "supportsResultType",
        "supportsReturnMesh",
        "supportsStandardizedQueriesOnly",
        "supportsStatistics",
        "supportsSqlExpression",
        "supportsSpatialAggregationStatistics",
        "supportsTrueCurve",
        "supportedSpatialAggregationStatistics"
      ],
      "title": "__esri.CapabilitiesQuery"
    },
    "__esri.CapabilitiesQuerySupportedSpatialAggregationStatistics": {
      "type": "object",
      "properties": {
        "centroid": {
          "type": "boolean"
        },
        "envelope": {
          "type": "boolean"
        },
        "convexHull": {
          "type": "boolean"
        }
      },
      "required": [
        "centroid",
        "envelope",
        "convexHull"
      ],
      "title": "__esri.CapabilitiesQuerySupportedSpatialAggregationStatistics"
    },
    "__esri.CapabilitiesQueryAttributeBins": {
      "type": "object",
      "properties": {
        "supportsDate": {
          "type": "boolean"
        },
        "supportsFixedInterval": {
          "type": "boolean"
        },
        "supportsAutoInterval": {
          "type": "boolean"
        },
        "supportsFixedBoundaries": {
          "type": "boolean"
        },
        "supportsStackBy": {
          "type": "boolean"
        },
        "supportsSplitBy": {
          "type": "boolean"
        },
        "supportsSnapToData": {
          "type": "boolean"
        },
        "supportsReturnFullIntervalBin": {
          "type": "boolean"
        },
        "supportsFirstDayOfWeek": {
          "type": "boolean"
        },
        "supportsNormalization": {
          "type": "boolean"
        },
        "supportedNormalizationTypes": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.CapabilitiesQueryAttributeBinsSupportedNormalizationTypes"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "supportedStatistics": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.CapabilitiesQueryAttributeBinsSupportedStatistics"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "supportsDate",
        "supportsFixedInterval",
        "supportsAutoInterval",
        "supportsFixedBoundaries",
        "supportsStackBy",
        "supportsSplitBy",
        "supportsSnapToData",
        "supportsReturnFullIntervalBin",
        "supportsFirstDayOfWeek",
        "supportsNormalization"
      ],
      "title": "__esri.CapabilitiesQueryAttributeBins"
    },
    "__esri.CapabilitiesQueryAttributeBinsSupportedNormalizationTypes": {
      "type": "object",
      "properties": {
        "field": {
          "type": "boolean"
        },
        "log": {
          "type": "boolean"
        },
        "naturalLog": {
          "type": "boolean"
        },
        "percentOfTotal": {
          "type": "boolean"
        },
        "squareRoot": {
          "type": "boolean"
        }
      },
      "title": "__esri.CapabilitiesQueryAttributeBinsSupportedNormalizationTypes"
    },
    "__esri.CapabilitiesQueryAttributeBinsSupportedStatistics": {
      "type": "object",
      "properties": {
        "count": {
          "type": "boolean"
        },
        "sum": {
          "type": "boolean"
        },
        "avg": {
          "type": "boolean"
        },
        "var": {
          "type": "boolean"
        },
        "stddev": {
          "type": "boolean"
        },
        "min": {
          "type": "boolean"
        },
        "max": {
          "type": "boolean"
        },
        "percentileContinuous": {
          "type": "boolean"
        },
        "percentileDiscrete": {
          "type": "boolean"
        }
      },
      "title": "__esri.CapabilitiesQueryAttributeBinsSupportedStatistics"
    },
    "__esri.CapabilitiesQueryRelated": {
      "type": "object",
      "properties": {
        "supportsCacheHint": {
          "type": "boolean"
        },
        "supportsCount": {
          "type": "boolean"
        },
        "supportsOrderBy": {
          "type": "boolean"
        },
        "supportsPagination": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsCacheHint",
        "supportsCount",
        "supportsOrderBy",
        "supportsPagination"
      ],
      "title": "__esri.CapabilitiesQueryRelated"
    },
    "__esri.CapabilitiesQueryTopFeatures": {
      "type": "object",
      "properties": {
        "supportsCacheHint": {
          "type": "boolean"
        }
      },
      "required": [
        "supportsCacheHint"
      ],
      "title": "__esri.CapabilitiesQueryTopFeatures"
    },
    "__esri.EditFieldsInfo": {
      "type": "object",
      "properties": {
        "creatorField": {
          "type": "string"
        },
        "creationDateField": {
          "type": "string"
        },
        "editorField": {
          "type": "string"
        },
        "editDateField": {
          "type": "string"
        }
      },
      "required": [
        "creatorField",
        "creationDateField",
        "editorField",
        "editDateField"
      ],
      "description": "The fields that record who adds or edits data in the feature service and when the edit is made.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#EditFieldsInfo Read more... }",
      "title": "__esri.EditFieldsInfo"
    },
    "__esri.EditingInfo": {
      "type": "object",
      "properties": {
        "lastEditDate": {
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "lastEditDate"
      ],
      "description": "Specifies information about editing.\n\n {@link  https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-FeatureLayer.html#EditingInfo Read more... }",
      "title": "__esri.EditingInfo"
    },
    "__esri.FieldsIndex": {
      "type": "object",
      "properties": {
        "dateFields": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/__esri.Field"
              }
            },
            {
              "type": "array",
              "items": {}
            }
          ],
          "description": "An array of date fields or field json objects.",
          "default": "[]\n\n{@link https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-FieldsIndex.html#dateFields Read more...}"
        }
      },
      "required": [
        "dateFields"
      ],
      "title": "__esri.FieldsIndex"
    },
    "__esri.Field": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized"
      ],
      "title": "__esri.Field"
    },
    "__esri.GeometryFieldsInfo": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized"
      ],
      "title": "__esri.GeometryFieldsInfo"
    },
    "__esri.Relationship": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized"
      ],
      "title": "__esri.Relationship"
    },
    "__esri.Subtype": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized"
      ],
      "title": "__esri.Subtype"
    },
    "__esri.FeatureReductionLayer": {
      "type": "object",
      "title": "__esri.FeatureReductionLayer"
    },
    "__esri.OperationalLayer": {
      "type": "object",
      "properties": {
        "persistenceEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "persistenceEnabled"
      ],
      "title": "__esri.OperationalLayer"
    },
    "__esri.OrderedLayer": {
      "type": "object",
      "title": "__esri.OrderedLayer"
    },
    "__esri.PortalLayer": {
      "type": "object",
      "title": "__esri.PortalLayer"
    },
    "__esri.PublishableLayer": {
      "type": "object",
      "properties": {
        "publishingInfo": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.PublishingInfo"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        }
      },
      "required": [
        "publishingInfo"
      ],
      "title": "__esri.PublishableLayer"
    },
    "__esri.PublishingInfo": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            "unavailable",
            "publishing",
            "published"
          ],
          "description": "Layer's publishing status while the layer is being published to the portal.",
          "default": "\"unknown\"\n\n{@link https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-PublishingInfo.html#status Read more...}"
        },
        "updating": {
          "type": "boolean",
          "description": "Indicates if the layer's status is still being updated.",
          "default": "false\n\n{@link https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-PublishingInfo.html#updating Read more...}"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized",
        "status",
        "updating"
      ],
      "title": "__esri.PublishingInfo"
    },
    "__esri.ScaleRangeLayer": {
      "type": "object",
      "properties": {
        "maxScale": {
          "type": "number"
        },
        "minScale": {
          "type": "number"
        }
      },
      "required": [
        "maxScale",
        "minScale"
      ],
      "title": "__esri.ScaleRangeLayer"
    },
    "__esri.TemporalLayer": {
      "type": "object",
      "properties": {
        "useViewTime": {
          "type": "boolean"
        }
      },
      "required": [
        "useViewTime"
      ],
      "title": "__esri.TemporalLayer"
    },
    "__esri.TrackableLayer": {
      "type": "object",
      "title": "__esri.TrackableLayer"
    },
    "__esri.SubtypeSublayer": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "loadError": {
          "anyOf": [
            {
              "$ref": "#/definitions/__esri.Error"
            },
            {
              "$ref": "#/definitions/nullish"
            }
          ]
        },
        "loadStatus": {
          "type": "string",
          "enum": [
            "not-loaded",
            "loading",
            "failed",
            "loaded"
          ]
        },
        "loadWarnings": {
          "type": "array",
          "items": {}
        },
        "destroyed": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "declaredClass": {
          "type": "string"
        }
      },
      "required": [
        "declaredClass",
        "destroyed",
        "initialized",
        "loadError",
        "loadStatus",
        "loadWarnings",
        "uid"
      ],
      "title": "__esri.SubtypeSublayer"
    },
    "RGBObject": {
      "type": "object",
      "properties": {
        "r": {
          "type": "number"
        },
        "g": {
          "type": "number"
        },
        "b": {
          "type": "number"
        },
        "a": {
          "type": "number",
          "default": 1
        }
      },
      "required": [
        "r",
        "g",
        "b"
      ],
      "description": "JSON representation of the color object",
      "title": "RGBObject"
    },
    "IRendererSymbol": {
      "type": "object",
      "properties": {
        "style": {
          "type": "string"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol"
        },
        "label": {
          "type": "string"
        },
        "uniqueValue": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/SymbolType"
        }
      },
      "required": [
        "color",
        "type"
      ],
      "title": "IRendererSymbol"
    },
    "WebChartDataItemColor": {
      "anyOf": [
        {
          "$ref": "#/definitions/Color"
        },
        {
          "$ref": "#/definitions/RGBArray"
        },
        {
          "$ref": "#/definitions/RGBObject"
        },
        {
          "type": "string"
        }
      ],
      "title": "WebChartDataItemColor"
    },
    "RGBArray": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 3,
      "maxItems": 3,
      "title": "RGBArray"
    },
    "WebChartDataItemValue": {
      "anyOf": [
        {
          "type": "string",
          "format": "date-time"
        },
        {
          "$ref": "#/definitions/IExtent"
        },
        {
          "$ref": "#/definitions/IRendererSymbol"
        },
        {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        },
        {
          "$ref": "#/definitions/WebChartDataItemColor"
        },
        {
          "type": "boolean"
        },
        {
          "type": "number"
        },
        {
          "type": "string"
        },
        {
          "type": "null"
        },
        {
          "not": {}
        }
      ],
      "title": "WebChartDataItemValue"
    },
    "WebChartDataItem": {
      "$ref": "#/definitions/Record%3Cstring%2CWebChartDataItemValue%3E",
      "description": "JSON representation of a typical data item",
      "title": "WebChartDataItem"
    },
    "Record<string,WebChartDataItemValue>": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/WebChartDataItemValue"
      },
      "title": "Record<string,WebChartDataItemValue>"
    },
    "WebChartBoxPlotDataItem": {
      "type": "object",
      "properties": {
        "dataItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        },
        "outliers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        },
        "meanLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        }
      },
      "required": [
        "dataItems"
      ],
      "description": "JSON representation of the processed data for a Box Plot",
      "title": "WebChartBoxPlotDataItem"
    },
    "ScatterplotTrendLineData": {
      "type": "object",
      "properties": {
        "r2": {
          "type": "number"
        },
        "trendLinePoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          },
          "minItems": 2,
          "maxItems": 2
        }
      },
      "description": "JSON representation of the processed data for a Scatter plot trend line",
      "title": "ScatterplotTrendLineData"
    },
    "WebChartScatterplotDataItem": {
      "type": "object",
      "properties": {
        "r2": {
          "type": "number"
        },
        "trendLinePoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          },
          "minItems": 2,
          "maxItems": 2
        },
        "dataItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        }
      },
      "required": [
        "dataItems"
      ],
      "description": "JSON representation of the processed data for a Scatter plot",
      "title": "WebChartScatterplotDataItem"
    },
    "WebChartGenericDataItem": {
      "type": "object",
      "properties": {
        "dataItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartDataItem"
          }
        },
        "timeIntervalInfo": {
          "$ref": "#/definitions/TimeIntervalInfo",
          "description": "Time interval information, only for line charts"
        }
      },
      "required": [
        "dataItems"
      ],
      "description": "JSON representation of the generic data structure for bar, line bar-line, gauge and pie chart",
      "title": "WebChartGenericDataItem"
    },
    "WebChartBin": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "minValue": {
          "type": "number",
          "description": "Min value in the bin"
        },
        "maxValue": {
          "type": "number",
          "description": "Max value in the bin"
        },
        "symbol": {
          "$ref": "#/definitions/WebChartDataItem",
          "description": "Symbol associated with the bin."
        },
        "isLastBin": {
          "type": "boolean",
          "description": "Whether this is the last bin."
        }
      },
      "required": [
        "count",
        "minValue",
        "maxValue"
      ],
      "description": "JSON representation of a Histogram bin",
      "title": "WebChartBin"
    },
    "WebChartHistogramDataItem": {
      "type": "object",
      "properties": {
        "mean": {
          "type": "number"
        },
        "median": {
          "type": "number"
        },
        "stddev": {
          "type": "number"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "sum": {
          "type": "number",
          "description": "Sum of the values of all the points"
        },
        "count": {
          "type": "number",
          "description": "Number of all the points/features in un-binned data (including only non-null entries)"
        },
        "nulls": {
          "type": "number",
          "description": "Number of null entries in the pool of points"
        },
        "bins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartBin"
          }
        }
      },
      "required": [
        "mean",
        "median",
        "stddev",
        "max",
        "min",
        "bins"
      ],
      "description": "JSON representation of the processed data for a Histogram",
      "title": "WebChartHistogramDataItem"
    },
    "WebChartDataTypes": {
      "anyOf": [
        {
          "$ref": "#/definitions/WebChartBoxPlotDataItem"
        },
        {
          "$ref": "#/definitions/WebChartGenericDataItem"
        },
        {
          "$ref": "#/definitions/WebChartHistogramDataItem"
        },
        {
          "$ref": "#/definitions/WebChartScatterplotDataItem"
        }
      ],
      "title": "WebChartDataTypes"
    },
    "WebChartTypes": {
      "type": "string",
      "enum": [
        "chart",
        "chartText",
        "chartOverlay",
        "chartOverlays",
        "chartLegend",
        "cursorCrosshair",
        "chartAxis",
        "gaugeAxisTick",
        "gaugeNeedle",
        "category",
        "number",
        "date",
        "chartGuide",
        "scatterSeries",
        "pieSeries",
        "pieTick",
        "gaugeSeries",
        "lineSeries",
        "barSeries",
        "histogramSeries",
        "boxPlotSeries",
        "radarSeries",
        "comboLineAndBarSeries",
        "buffer",
        "sizeScale"
      ],
      "title": "WebChartTypes"
    },
    "WebChartStatisticType": {
      "type": "string",
      "enum": [
        "count",
        "sum",
        "min",
        "max",
        "avg",
        "stddev",
        "var",
        "percentile-continuous",
        "percentile-discrete",
        "envelope-aggregate",
        "centroid-aggregate",
        "convex-hull-aggregate",
        "no_aggregation"
      ],
      "title": "WebChartStatisticType"
    },
    "WebChartColoringPatterns": {
      "type": "string",
      "enum": [
        "singleColor",
        "colorMatch"
      ],
      "title": "WebChartColoringPatterns"
    },
    "WebChartBoxPlotMultipleSeriesKinds": {
      "type": "string",
      "enum": [
        "sideBySide",
        "meanLines"
      ],
      "title": "WebChartBoxPlotMultipleSeriesKinds"
    },
    "WebChartLineSmoothedKinds": {
      "type": "string",
      "enum": [
        "bezier",
        "monotoneX",
        "monotoneY"
      ],
      "description": "Represents the different types of smoothing that can be applied to a line chart when the `lineSmoothed` property is set to `true`.",
      "title": "WebChartLineSmoothedKinds"
    },
    "WebChartTemporalBinningTypes": {
      "type": "string",
      "enum": [
        "fixedDateBased",
        "calendarBased"
      ],
      "description": "Represents the different types of temporal binning that can be applied to a chart.",
      "title": "WebChartTemporalBinningTypes"
    },
    "WebChartVersionStatus": {
      "type": "string",
      "enum": [
        "same",
        "newer",
        "older",
        "unrecognized"
      ],
      "title": "WebChartVersionStatus"
    },
    "WebChartAxisTypes": {
      "type": "string",
      "enum": [
        "value",
        "date",
        "category"
      ],
      "description": "Represents the different types of axes that can be used in a chart.",
      "title": "WebChartAxisTypes"
    },
    "RESTFieldType": {
      "type": "string",
      "enum": [
        "esriFieldTypeBlob",
        "esriFieldTypeDate",
        "esriFieldTypeDateOnly",
        "esriFieldTypeTimestampOffset",
        "esriFieldTypeDouble",
        "esriFieldTypeGeometry",
        "esriFieldTypeGlobalID",
        "esriFieldTypeGUID",
        "esriFieldTypeInteger",
        "esriFieldTypeSmallInteger",
        "esriFieldTypeBigInteger",
        "esriFieldTypeOID",
        "esriFieldTypeRaster",
        "esriFieldTypeSingle",
        "esriFieldTypeString",
        "esriFieldTypeXML"
      ],
      "title": "RESTFieldType"
    },
    "RESTSimpleLineSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSLSDash",
        "esriSLSDashDot",
        "esriSLSDashDotDot",
        "esriSLSDot",
        "esriSLSNull",
        "esriSLSSolid"
      ],
      "title": "RESTSimpleLineSymbolStyle"
    },
    "RESTSimpleMarkerSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSMSCircle",
        "esriSMSCross",
        "esriSMSDiamond",
        "esriSMSSquare",
        "esriSMSX",
        "esriSMSTriangle"
      ],
      "title": "RESTSimpleMarkerSymbolStyle"
    },
    "RESTSimpleFillSymbolStyle": {
      "type": "string",
      "enum": [
        "esriSFSBackwardDiagonal",
        "esriSFSCross",
        "esriSFSDiagonalCross",
        "esriSFSForwardDiagonal",
        "esriSFSHorizontal",
        "esriSFSNull",
        "esriSFSSolid",
        "esriSFSVertical"
      ],
      "title": "RESTSimpleFillSymbolStyle"
    },
    "RESTHorizontalAlignment": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "center",
        "justify"
      ],
      "title": "RESTHorizontalAlignment"
    },
    "RESTVerticalAlignment": {
      "type": "string",
      "enum": [
        "baseline",
        "top",
        "middle",
        "bottom"
      ],
      "title": "RESTVerticalAlignment"
    },
    "RESTSymbolType": {
      "type": "string",
      "enum": [
        "esriSLS",
        "esriSMS",
        "esriSFS",
        "esriPMS",
        "esriPFS",
        "esriTS"
      ],
      "title": "RESTSymbolType"
    },
    "RESTFontStyle": {
      "type": "string",
      "enum": [
        "italic",
        "normal",
        "oblique"
      ],
      "title": "RESTFontStyle"
    },
    "RESTFontWeight": {
      "type": "string",
      "enum": [
        "bold",
        "bolder",
        "lighter",
        "normal"
      ],
      "title": "RESTFontWeight"
    },
    "RESTFontDecoration": {
      "type": "string",
      "enum": [
        "line-through",
        "underline",
        "none"
      ],
      "title": "RESTFontDecoration"
    },
    "RESTRendererType": {
      "type": "string",
      "enum": [
        "unique-value",
        "simple",
        "class-breaks",
        "heatmap",
        "dot-density",
        "dictionary",
        "pie-chart"
      ],
      "title": "RESTRendererType"
    },
    "OverlayTerms": {
      "type": "string",
      "enum": [
        "Mean",
        "Median",
        "Standard Deviation",
        "Normal Distribution",
        "Trendline"
      ],
      "title": "OverlayTerms"
    },
    "CalculatedMinMaxBoundsPayload": {
      "type": "object",
      "properties": {
        "isXAxis": {
          "type": "boolean"
        },
        "isSecondValueAxis": {
          "type": "boolean"
        },
        "minimum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The minimum value which the axis should represent, when it is not defined or null, then the minimum value for the corresponding axis is automatically calculated."
        },
        "maximum": {
          "type": [
            "number",
            "null"
          ],
          "description": "The maximum value which the axis should represent, when it is not defined or null, then the maximum value for the corresponding axis is automatically calculated."
        }
      },
      "required": [
        "isXAxis"
      ],
      "description": "+ Represents a subset of the event payload carrying the chart's axes bounds. See event `arcgisChartsAxesMinMaxChange`.",
      "title": "CalculatedMinMaxBoundsPayload"
    },
    "ChartDeletePayload": {
      "type": "object",
      "properties": {
        "chartId": {
          "type": "string"
        }
      },
      "required": [
        "chartId"
      ],
      "description": "Represents the payload of the event sent when a chart is removed from the chart list (component arcgis-charts-config-view-charts).",
      "title": "ChartDeletePayload"
    },
    "LegendItemVisibility": {
      "type": "object",
      "properties": {
        "visible": {
          "type": "boolean"
        },
        "seriesId": {
          "type": "string"
        },
        "overlayType": {
          "$ref": "#/definitions/OverlayTerms"
        },
        "sliceId": {
          "type": "string"
        },
        "sliceData": {
          "$ref": "#/definitions/WebChartDataItem"
        }
      },
      "required": [
        "visible"
      ],
      "description": "Represents the payload of the event sent when an item is toggled in the chart's legend (slice or series).",
      "title": "LegendItemVisibility"
    },
    "IFeatureSet": {
      "type": "object",
      "properties": {
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "objectIdFieldName": {
          "type": "string"
        },
        "globalIdFieldName": {
          "type": "string"
        },
        "displayFieldName": {
          "type": "string"
        },
        "geometryType": {
          "$ref": "#/definitions/GeometryType"
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IField"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IFeature"
          }
        },
        "fieldAliases": {
          "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
        }
      },
      "required": [
        "features"
      ],
      "description": "`IFeatureSet` can also be imported from the following packages:\n\n```js import { IFeatureSet } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IFeatureSet"
    },
    "Record<string,string>": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "title": "Record<string,string>"
    },
    "ILocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "lat": {
          "type": "number"
        },
        "long": {
          "type": "number"
        },
        "z": {
          "type": "number"
        }
      },
      "description": "`ILocation` can also be imported from the following packages:\n\n```js import { ILocation } from \"@esri/arcgis-rest-routing\"; import { ILocation } from \"@esri/arcgis-rest-geocoding\"; ```",
      "title": "ILocation"
    },
    "IPolylineWithCurves": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "curvePaths": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/JsonCurve"
                },
                {
                  "$ref": "#/definitions/Position"
                }
              ]
            }
          }
        }
      },
      "required": [
        "curvePaths"
      ],
      "title": "IPolylineWithCurves"
    },
    "ElipticArc": {
      "$ref": "#/definitions/IArc",
      "title": "ElipticArc"
    },
    "SpatialRelationship": {
      "type": "string",
      "enum": [
        "esriSpatialRelContains",
        "esriSpatialRelCrosses",
        "esriSpatialRelEnvelopeIntersects",
        "esriSpatialRelIndexIntersects",
        "esriSpatialRelIntersects",
        "esriSpatialRelOverlaps",
        "esriSpatialRelTouches",
        "esriSpatialRelWithin"
      ],
      "description": "The spatial relationship used to compare input geometries\n\n`SpatialRelationship` can also be imported from the following packages:\n\n```js import { SpatialRelationship } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "SpatialRelationship"
    },
    "IMultipoint": {
      "type": "object",
      "properties": {
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "hasZ": {
          "type": "boolean"
        },
        "hasM": {
          "type": "boolean"
        },
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Position"
          }
        }
      },
      "required": [
        "points"
      ],
      "description": "A multipoint contains an array of points.",
      "title": "IMultipoint"
    },
    "Units": {
      "type": "string",
      "enum": [
        "esriSRUnit_Foot",
        "esriSRUnit_Kilometer",
        "esriSRUnit_Meter",
        "esriSRUnit_NauticalMile",
        "esriSRUnit_StatuteMile",
        "esriSRUnit_USNauticalMile"
      ],
      "description": "`Units` can also be imported from the following packages:\n\n```js import { Units } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "Units"
    },
    "GroupMembership": {
      "type": "string",
      "enum": [
        "admin",
        "member",
        "none",
        "owner"
      ],
      "description": "`GroupMembership` can also be imported from the following packages:\n\n```js import { GroupMembership } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "GroupMembership"
    },
    "IGroupAdd": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "access": {
          "type": "string",
          "enum": [
            "org",
            "private",
            "public"
          ]
        },
        "owner": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "sortField": {
          "type": "string",
          "enum": [
            "avgrating",
            "created",
            "modified",
            "numviews",
            "owner",
            "title"
          ]
        },
        "sortOrder": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "isViewOnly": {
          "type": "boolean"
        },
        "isInvitationOnly": {
          "type": "boolean"
        },
        "thumbnail": {
          "type": "string"
        },
        "autoJoin": {
          "type": "boolean"
        },
        "snippet": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "access"
      ],
      "description": "A [Group](https://developers.arcgis.com/rest/users-groups-and-items/common-parameters.htm) that has not been created yet.\n\n`IGroupAdd` can also be imported from the following packages:\n\n```js import { IGroupAdd } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IGroupAdd"
    },
    "IGroup": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "access": {
          "type": "string",
          "enum": [
            "org",
            "private",
            "public"
          ]
        },
        "owner": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "sortField": {
          "type": "string",
          "enum": [
            "avgrating",
            "created",
            "modified",
            "numviews",
            "owner",
            "title"
          ]
        },
        "sortOrder": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "isViewOnly": {
          "type": "boolean"
        },
        "isInvitationOnly": {
          "type": "boolean"
        },
        "thumbnail": {
          "type": "string"
        },
        "autoJoin": {
          "type": "boolean"
        },
        "snippet": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "created": {
          "type": "number"
        },
        "modified": {
          "type": "number"
        },
        "protected": {
          "type": "boolean"
        },
        "isOpenData": {
          "type": "boolean"
        },
        "isFav": {
          "type": "boolean"
        },
        "userMembership": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "memberType": {
              "$ref": "#/definitions/GroupMembership"
            },
            "applications": {
              "type": "number"
            }
          }
        },
        "hasCategorySchema": {
          "type": "boolean"
        }
      },
      "required": [
        "access",
        "autoJoin",
        "created",
        "id",
        "isFav",
        "isInvitationOnly",
        "isViewOnly",
        "modified",
        "owner",
        "protected",
        "tags",
        "title"
      ],
      "description": "Existing Portal [Group](https://developers.arcgis.com/rest/users-groups-and-items/group.htm).\n\n`IGroup` can also be imported from the following packages:\n\n```js import { IGroup } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IGroup"
    },
    "IItemAdd": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "typeKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "snippet": {
          "type": "string"
        },
        "documentation": {
          "type": "string"
        },
        "extent": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "culture": {
          "type": "string"
        },
        "properties": {},
        "url": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "title",
        "type"
      ],
      "description": "A Portal [Item](https://developers.arcgis.com/rest/users-groups-and-items/common-parameters.htm) that has not been created yet.\n\n`IItemAdd` can also be imported from the following packages:\n\n```js import { IItemAdd } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IItemAdd"
    },
    "IItemUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "description": "A Portal [Item](https://developers.arcgis.com/rest/users-groups-and-items/common-parameters.htm) to be updated.\n\n`IItemUpdate` can also be imported from the following packages:\n\n```js import { IItemUpdate } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IItemUpdate"
    },
    "IItem": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "typeKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "snippet": {
          "type": "string"
        },
        "documentation": {
          "type": "string"
        },
        "extent": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference"
        },
        "culture": {
          "type": "string"
        },
        "properties": {},
        "url": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "created": {
          "type": "number"
        },
        "modified": {
          "type": "number"
        },
        "numViews": {
          "type": "number"
        },
        "size": {
          "type": "number"
        },
        "protected": {
          "type": "boolean"
        }
      },
      "required": [
        "created",
        "id",
        "modified",
        "numViews",
        "owner",
        "size",
        "tags",
        "title",
        "type"
      ],
      "description": "Existing Portal [Item](https://developers.arcgis.com/rest/users-groups-and-items/item.htm).\n\n`IItem` can also be imported from the following packages:\n\n```js import { IItem } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IItem"
    },
    "IFolder": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created": {
          "type": "number"
        }
      },
      "required": [
        "username",
        "id",
        "title"
      ],
      "description": "Used for organizing content. See [Create Folder](https://developers.arcgis.com/rest/users-groups-and-items/create-folder.htm) for more details.\n\n`IFolder` can also be imported from the following packages:\n\n```js import { IFolder } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IFolder"
    },
    "IFeatureServiceDefinition": {
      "type": "object",
      "properties": {
        "currentVersion": {
          "type": "number"
        },
        "serviceDescription": {
          "type": "string"
        },
        "hasVersionedData": {
          "type": "boolean"
        },
        "supportsDisconnectedEditing": {
          "type": "boolean"
        },
        "supportsReturnDeleteResults": {
          "type": "boolean"
        },
        "hasStaticData": {
          "type": "boolean",
          "description": "Boolean value indicating whether data changes. True if it does not."
        },
        "maxRecordCount": {
          "type": "number",
          "description": "Numeric value indicating tbe maximum number of records that will be returned at once for a query."
        },
        "supportedQueryFormats": {
          "type": "string",
          "description": "String value indicating the output formats that are supported in a query."
        },
        "supportsRelationshipsResource": {
          "type": "boolean"
        },
        "capabilities": {
          "type": "string",
          "description": "A comma separated list of supported capabilities, e.g. Query,Editing."
        },
        "description": {
          "type": "string",
          "description": "String value of the layer as defined in the map service."
        },
        "copyrightText": {
          "type": "string",
          "description": "String value for the copyright text information for the layer."
        },
        "advancedEditingCapabilities": {
          "$ref": "#/definitions/Record%3Cstring%2Cboolean%3E"
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference",
          "description": "An object containing the WKID or WKT identifying the spatial reference of the layer's geometry."
        },
        "initialExtent": {
          "$ref": "#/definitions/IExtent"
        },
        "fullExtent": {
          "$ref": "#/definitions/IExtent"
        },
        "allowGeometryUpdates": {
          "type": "boolean",
          "description": "Boolean value indicating whether the geometry of the features in the layer can be edited."
        },
        "units": {
          "type": "string"
        },
        "syncEnabled": {
          "type": "boolean"
        },
        "returnServiceEditsHaveSR": {
          "type": "boolean"
        },
        "validationSystemLayers": {
          "type": "object",
          "properties": {
            "validationPointErrorlayerId": {
              "type": "number"
            },
            "validationLineErrorlayerId": {
              "type": "number"
            },
            "validationPolygonErrorlayerId": {
              "type": "number"
            },
            "validationObjectErrortableId": {
              "type": "number"
            }
          },
          "required": [
            "validationPointErrorlayerId",
            "validationLineErrorlayerId",
            "validationPolygonErrorlayerId",
            "validationObjectErrortableId"
          ]
        },
        "extractChangesCapabilities": {
          "type": "object",
          "properties": {
            "supportsReturnIdsOnly": {
              "type": "boolean"
            },
            "supportsReturnExtentOnly": {
              "type": "boolean"
            },
            "supportsReturnAttachments": {
              "type": "boolean"
            },
            "supportsLayerQueries": {
              "type": "boolean"
            },
            "supportsSpatialFilter": {
              "type": "boolean"
            },
            "supportsReturnFeature": {
              "type": "boolean"
            }
          },
          "required": [
            "supportsReturnIdsOnly",
            "supportsReturnExtentOnly",
            "supportsReturnAttachments",
            "supportsLayerQueries",
            "supportsSpatialFilter",
            "supportsReturnFeature"
          ]
        },
        "syncCapabilities": {
          "type": "object",
          "properties": {
            "supportsASync": {
              "type": "boolean"
            },
            "supportsRegisteringExistingData": {
              "type": "boolean"
            },
            "supportsSyncDirectionControl": {
              "type": "boolean"
            },
            "supportsPerLayerSync": {
              "type": "boolean"
            },
            "supportsPerReplicaSync": {
              "type": "boolean"
            },
            "supportsRollbackOnFailure": {
              "type": "boolean"
            },
            "supportedSyncDataOptions": {
              "type": "number"
            }
          },
          "required": [
            "supportsASync",
            "supportsRegisteringExistingData",
            "supportsSyncDirectionControl",
            "supportsPerLayerSync",
            "supportsPerReplicaSync",
            "supportsRollbackOnFailure",
            "supportedSyncDataOptions"
          ]
        },
        "editorTrackingInfo": {
          "type": "object",
          "properties": {
            "enableEditorTracking": {
              "type": "boolean"
            },
            "enableOwnershipAccessControl": {
              "type": "boolean"
            },
            "allowOthersToUpdate": {
              "type": "boolean"
            },
            "allowOthersToDelete": {
              "type": "boolean"
            }
          },
          "required": [
            "enableEditorTracking",
            "enableOwnershipAccessControl",
            "allowOthersToUpdate",
            "allowOthersToDelete"
          ]
        },
        "documentInfo": {
          "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ILayerDefinition"
          }
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITable"
          }
        },
        "relationships": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "backwardPathLabel": {
                "type": "string"
              },
              "originLayerId": {
                "type": "number"
              },
              "originPrimaryKey": {
                "type": "string"
              },
              "forwardPathLabel": {
                "type": "string"
              },
              "destinationLayerId": {
                "type": "number"
              },
              "originForeignKey": {
                "type": "string"
              },
              "relationshipTableId": {
                "type": "number"
              },
              "destinationPrimaryKey": {
                "type": "string"
              },
              "destinationForeignKey": {
                "type": "string"
              },
              "rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ruleID": {
                      "type": "number"
                    },
                    "originSubtypeCode": {
                      "type": "number"
                    },
                    "originMinimumCardinality": {
                      "type": "number"
                    },
                    "originMaximumCardinality": {
                      "type": "number"
                    },
                    "destinationSubtypeCode": {
                      "type": "number"
                    },
                    "destinationMinimumCardinality": {
                      "type": "number"
                    },
                    "destinationMaximumCardinality": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "ruleID",
                    "originSubtypeCode",
                    "originMinimumCardinality",
                    "originMaximumCardinality",
                    "destinationSubtypeCode",
                    "destinationMinimumCardinality",
                    "destinationMaximumCardinality"
                  ]
                },
                "minItems": 1,
                "maxItems": 1
              },
              "cardinality": {
                "type": "string",
                "enum": [
                  "esriRelCardinalityManyToMany",
                  "esriRelCardinalityOneToMany",
                  "esriRelCardinalityOneToOne"
                ]
              },
              "attributed": {
                "type": "boolean"
              },
              "composite": {
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "name",
              "backwardPathLabel",
              "originLayerId",
              "originPrimaryKey",
              "forwardPathLabel",
              "destinationLayerId",
              "originForeignKey",
              "relationshipTableId",
              "destinationPrimaryKey",
              "destinationForeignKey",
              "rules",
              "cardinality",
              "attributed",
              "composite"
            ]
          },
          "minItems": 1,
          "maxItems": 1
        },
        "enableZDefaults": {
          "type": "boolean"
        },
        "isLocationTrackingService": {
          "type": "boolean"
        },
        "isLocationTrackingView": {
          "type": "boolean"
        },
        "zDefault": {
          "type": "number"
        }
      },
      "required": [
        "serviceDescription",
        "hasVersionedData",
        "supportsDisconnectedEditing",
        "supportsReturnDeleteResults",
        "maxRecordCount",
        "supportedQueryFormats",
        "supportsRelationshipsResource",
        "capabilities",
        "description",
        "copyrightText",
        "advancedEditingCapabilities",
        "spatialReference",
        "initialExtent",
        "fullExtent",
        "allowGeometryUpdates",
        "units",
        "syncEnabled",
        "validationSystemLayers",
        "extractChangesCapabilities",
        "syncCapabilities",
        "editorTrackingInfo",
        "layers",
        "tables",
        "relationships",
        "isLocationTrackingService",
        "isLocationTrackingView"
      ],
      "description": "`IFeatureServiceDefinition` can also be imported from the following packages:\n\n```js import { IFeatureServiceDefinition } from \"@esri/arcgis-rest-service-admin\"; import { IFeatureServiceDefinition } from \"@esri/arcgis-rest-feature-layer\"; ```",
      "title": "IFeatureServiceDefinition"
    },
    "Record<string,boolean>": {
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      },
      "title": "Record<string,boolean>"
    },
    "ITable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Table name"
        },
        "capabilities": {
          "type": "string",
          "description": "A comma-separated string listing which editing operations are allowed on an editable feature service. Available operations include: 'Create', 'Delete', 'Query', 'Update', and 'Editing'."
        },
        "definitionEditor": {
          "$ref": "#/definitions/IDefinitionEditor",
          "description": "Object indicating the definitionEditor used as a layer's interactive filter."
        },
        "id": {
          "type": "number",
          "description": "Unique identifier for the table."
        },
        "itemId": {
          "type": "string",
          "description": "Unique string value indicating an item registered in ArcGIS Online or your organization's portal."
        },
        "layerDefinition": {
          "$ref": "#/definitions/ILayerDefinition",
          "description": "A layerDefinition object defining a definition expression for the table."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "An object defining the content of popup windows when you query a record and the sort option for child related records."
        },
        "title": {
          "type": "string",
          "description": "String value for the title of the table."
        },
        "url": {
          "type": "string",
          "description": "String value indicating the URL reference of the hosted table."
        }
      },
      "description": "Root element in the web map specifying an array of table objects.\n\n`ITable` can also be imported from the following packages:\n\n```js import { ITable } from \"@esri-arcgis-rest-service-admin\" ```",
      "title": "ITable"
    },
    "IServiceInfo": {
      "type": "object",
      "properties": {
        "adminServiceInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "database": {
              "type": "object",
              "properties": {
                "datasource": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "datasource"
              ]
            }
          },
          "required": [
            "name",
            "type",
            "status",
            "database"
          ]
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Record%3Cstring%2Cunknown%3E"
          }
        }
      },
      "required": [
        "adminServiceInfo",
        "layers"
      ],
      "description": "Very generic structure representing the return value from the /arcgis/rest/admin/services/<service-name>/FeatureServer?f=json response",
      "title": "IServiceInfo"
    },
    "Record<string,unknown>": {
      "type": "object",
      "additionalProperties": {},
      "title": "Record<string,unknown>"
    },
    "IViewServiceSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "serviceItemId": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "url",
        "serviceItemId"
      ],
      "description": "Individual View Source entry",
      "title": "IViewServiceSource"
    },
    "IViewServiceSources": {
      "type": "object",
      "properties": {
        "currentVersion": {
          "type": "number"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IViewServiceSource"
          }
        }
      },
      "required": [
        "currentVersion",
        "services"
      ],
      "description": "Response from the /sources end-point of a view service",
      "title": "IViewServiceSources"
    },
    "IServiceNameAvailable": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        }
      },
      "required": [
        "available"
      ],
      "description": "Response from the portals/Self/isServiceNameAvailable request",
      "title": "IServiceNameAvailable"
    },
    "IPictureSourced": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "imageData": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        }
      },
      "title": "IPictureSourced"
    },
    "IPictureFillSymbol": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "imageData": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "const": "esriPFS"
        },
        "style": {
          "type": "string"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol"
        },
        "xscale": {
          "type": "number"
        },
        "yscale": {
          "type": "number"
        }
      },
      "required": [
        "type"
      ],
      "title": "IPictureFillSymbol"
    },
    "IPictureMarkerSymbol": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "imageData": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "const": "esriPMS"
        },
        "style": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "IPictureMarkerSymbol"
    },
    "ITextSymbol": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "esriTS"
        },
        "style": {
          "type": "string"
        },
        "angle": {
          "type": "number"
        },
        "xoffset": {
          "type": "number"
        },
        "yoffset": {
          "type": "number"
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "backgroundColor": {
          "$ref": "#/definitions/Color"
        },
        "borderLineSize": {
          "type": "number"
        },
        "borderLineColor": {
          "$ref": "#/definitions/Color"
        },
        "haloSize": {
          "type": "number"
        },
        "haloColor": {
          "$ref": "#/definitions/Color"
        },
        "verticalAlignment": {
          "type": "string",
          "enum": [
            "baseline",
            "bottom",
            "middle",
            "top"
          ]
        },
        "horizontalAlignment": {
          "type": "string",
          "enum": [
            "center",
            "justify",
            "left",
            "right"
          ]
        },
        "rightToLeft": {
          "type": "boolean"
        },
        "kerning": {
          "type": "boolean"
        },
        "font": {
          "$ref": "#/definitions/IFont"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ITextSymbol"
    },
    "IUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "availableCredits": {
          "type": "number"
        },
        "assignedCredits": {
          "type": "number"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "preferredView": {},
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "idpUsername": {
          "type": "string"
        },
        "favGroupId": {
          "type": "string"
        },
        "lastLogin": {
          "type": "number"
        },
        "mfaEnabled": {
          "type": "boolean"
        },
        "access": {
          "type": "string"
        },
        "storageUsage": {
          "type": "number"
        },
        "storageQuota": {
          "type": "number"
        },
        "orgId": {
          "type": "string"
        },
        "cOrgId": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "org_admin",
            "org_publisher",
            "org_user"
          ]
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roleId": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "units": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "culture": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "created": {
          "type": "number"
        },
        "modified": {
          "type": "number"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IGroup"
          }
        },
        "provider": {
          "type": "string",
          "enum": [
            "arcgis",
            "enterprise",
            "facebook",
            "google"
          ]
        }
      },
      "description": "An ArcGIS Online or Enterprise user\n\n`IUser` can also be imported from the following packages:\n\n```js import { IUser } from \"@esri/arcgis-rest-auth\"; import { IUser } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IUser"
    },
    "IPagingParams": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number"
        },
        "num": {
          "type": "number"
        }
      },
      "description": "Params for paging operations\n\n`IPagingParams` can also be imported from the following packages:\n\n```js import { IPagingParams } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IPagingParams"
    },
    "IPagedResponse": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number"
        },
        "num": {
          "type": "number"
        },
        "total": {
          "type": "number",
          "description": "total number of object across all pages"
        },
        "nextStart": {
          "type": "number",
          "description": "next entry index or -1 for the last page"
        }
      },
      "required": [
        "total",
        "nextStart"
      ],
      "description": "Paging properties for paged responses.\n\n`IPagedResponse` can also be imported from the following packages:\n\n```js import { IPagedResponse } from \"@esri/arcgis-rest-portal\"; ```",
      "title": "IPagedResponse"
    },
    "IWebMapBackground": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/Color",
          "description": "To define the color of the background of the map (which is shown when no data is shown)."
        }
      },
      "required": [
        "color"
      ],
      "description": "Defines the appearance for the background of the map.",
      "examples": [
        {
          "background": {
            "color": [
              255,
              255,
              255,
              255
            ]
          }
        }
      ],
      "title": "IWebMapBackground"
    },
    "IBookmark": {
      "type": "object",
      "properties": {
        "extent": {
          "$ref": "#/definitions/IExtent",
          "description": "An extent object containing a spatial reference, a lower left coordinate, and an upper right coordinate defining the rectangular area of the bookmark. The spatial reference must be the same as the map spatial reference. Documentation for the envelope is in the Geometry Objects topic of the ArcGIS REST API help."
        },
        "name": {
          "type": "string",
          "description": "A string name for the bookmark."
        }
      },
      "required": [
        "extent",
        "name"
      ],
      "description": "Predefined bookmarks for use by the application. A bookmark is a saved map extent that allows end users to quickly navigate to a particular area of interest.",
      "title": "IBookmark"
    },
    "IMapRangeInfo": {
      "type": "object",
      "properties": {
        "activeRangeName": {
          "type": "string",
          "description": "Active range ID that slider/picker acts upon."
        },
        "currentRangeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Current range for the active range."
        },
        "fullRangeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Full range extent for the active range to be presented in the UI."
        }
      },
      "description": "Map range information",
      "examples": [
        {
          "mapRangeInfo": {
            "activeRangeName": "floors",
            "currentRangeExtent": [
              -2,
              10
            ],
            "fullRangeExtent": [
              -2,
              100
            ]
          }
        }
      ],
      "title": "IMapRangeInfo"
    },
    "IMapLocation": {
      "type": "object",
      "properties": {
        "centerPoint": {
          "$ref": "#/definitions/IPoint",
          "description": "The center of the map specified using X/Y coordinates."
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference",
          "description": "Well-known ID (WKID) or well-known text (WKT)."
        }
      },
      "required": [
        "centerPoint",
        "spatialReference"
      ],
      "description": "Contains location information within a presentation slide.",
      "title": "IMapLocation"
    },
    "IVisibleLayer": {
      "type": "object",
      "properties": {
        "featureVisibility": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {}
          },
          "description": "An array of arrays."
        },
        "id": {
          "type": "number",
          "description": "The id of the layer as listed on the operational layer."
        },
        "subLayerIds": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of integers."
        }
      },
      "description": "An array of numbers indicating layer visibility.",
      "examples": [
        {
          "visibleLayer": {
            "featureVisibility": [
              [
                1
              ],
              [],
              [],
              [
                0
              ]
            ],
            "id": "73128eb3-05ee-46a7-8c22-0c385a0b1827"
          }
        }
      ],
      "title": "IVisibleLayer"
    },
    "IVisiblePopup": {
      "type": "object",
      "properties": {
        "anchorPoint": {
          "$ref": "#/definitions/IPoint",
          "description": "Object with spatialReference, x, and y."
        },
        "featureId": {
          "type": "number",
          "description": "An integer specifying the feature's id."
        },
        "layerId": {
          "type": "string",
          "description": "A string specifying the layer id."
        },
        "subLayerId": {
          "type": "number",
          "description": "An integer specifying the sublayer id."
        }
      },
      "description": "A presentation slide's visiblePopup which contains anchorPoint, featureId, layerId, and subLayerId.",
      "title": "IVisiblePopup"
    },
    "ISlide": {
      "type": "object",
      "properties": {
        "baseMap": {
          "$ref": "#/definitions/IBaseMap",
          "description": "Basemaps give the web map a geographic context."
        },
        "extent": {
          "$ref": "#/definitions/IExtent",
          "description": "The standard Esri extent object with spatialReference, xmax, xmin, ymax and ymin."
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the slide should be hidden within the presentation."
        },
        "mapLocation": {
          "$ref": "#/definitions/IMapLocation",
          "description": "An object with a centerPoint object and sometimes a resolution."
        },
        "timeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "minItems": 2,
          "maxItems": 2,
          "description": "An array of two numbers. The first one indicates start time and the second one indicates end time."
        },
        "title": {
          "type": "string",
          "description": "Title including text and formatting for each slide."
        },
        "visibleLayers": {
          "$ref": "#/definitions/IVisibleLayer",
          "description": "An array of objects used to indicate layer visibility."
        },
        "visiblePopup": {
          "$ref": "#/definitions/IVisiblePopup",
          "description": "A presentation slide's visiblePopup which contains anchorPoint, featureId, layerId, and subLayerId."
        }
      },
      "title": "ISlide"
    },
    "IBaseMap": {
      "type": "object",
      "properties": {
        "baseMapLayers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ILayer"
          },
          "description": "An array of baseMapLayer objects defining the basemaps used in the web map."
        },
        "title": {
          "type": "string",
          "description": "Required string title for the basemap that can be used in a table of contents. It takes the title of the first baseMapLayer in the array."
        }
      },
      "required": [
        "baseMapLayers",
        "title"
      ],
      "description": "A basemap layer is a layer that provides geographic context to the map. A web map always contains a basemap. The basemap has a title and is the combination of each baseMapLayer. It is required that a baseMap be saved within the web map.",
      "title": "IBaseMap"
    },
    "IPresentation": {
      "type": "object",
      "properties": {
        "displayTimeSlider": {
          "type": "boolean",
          "description": "Indicates whether to display the time slider (if accessible)."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Indicates whether to display a legend on all slides."
        },
        "slideAdvancementInterval": {
          "type": "number",
          "description": "Number of seconds to show slide before proceeding to the next slide."
        },
        "slides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISlide"
          },
          "description": "Array of slide objects."
        },
        "useTimeExtentOfSlide": {
          "type": "boolean",
          "description": "Indicates whether to use the time extent (if applicable) of a slide."
        }
      },
      "title": "IPresentation"
    },
    "IWebmap": {
      "type": "object",
      "properties": {
        "applicationProperties": {
          "$ref": "#/definitions/IApplicationProperties",
          "description": "Viewing and editing properties of the webmap"
        },
        "authoringApp": {
          "type": "string",
          "description": "String value indicating the application which authored the webmap"
        },
        "authoringAppVersion": {
          "type": "string",
          "description": "String value indicating the authoring App's version number"
        },
        "background": {
          "$ref": "#/definitions/IWebMapBackground",
          "description": "Defines the appearance for the background of the map."
        },
        "baseMap": {
          "$ref": "#/definitions/IBaseMap",
          "description": "[Required] Basemaps give the web map a geographic context"
        },
        "bookmarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IBookmark"
          },
          "description": "A bookmark is a saved geographic extent that allows end users to quickly navigate to a particular area of interest"
        },
        "mapRangeInfo": {
          "$ref": "#/definitions/IMapRangeInfo",
          "description": "Map Range Information"
        },
        "operationalLayers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ILayer"
          },
          "description": "Operational layers contain business data which are used to make thematic maps"
        },
        "presentation": {
          "description": "A presentation consists of multiple slides. Each slide has a different title, extent, basemap, layers etc"
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference",
          "description": "[Required] An object used to specify the spatial reference of the given geometry."
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITable"
          },
          "description": "Root element in the web map specifying an array of table objects. (optional)"
        },
        "version": {
          "type": "string",
          "description": "[Required] Root element in the web map specifying a string value indicating the web map version."
        },
        "widgets": {
          "description": "The widgets object contains widgets that should be exposed to the user"
        }
      },
      "required": [
        "baseMap",
        "spatialReference",
        "version"
      ],
      "description": "The web map data lists the basemap, operational layers, and bookmarks to be used in the web map. It also contains information about popup windows and layer styling overrides to be used in the web map. A version property allows you to supply the version of the web map JSON format being used.",
      "title": "IWebmap"
    },
    "IApplicationProperties": {
      "type": "object",
      "properties": {
        "editing": {
          "anyOf": [
            {
              "$ref": "#/definitions/IEditingProperties"
            },
            {
              "type": "null"
            }
          ],
          "description": "If locationTracking is set and enabled, the Collector application will update the feature service at the defined interval with the current location of the user logged into the Collector app."
        },
        "offline": {
          "anyOf": [
            {
              "$ref": "#/definitions/IOfflineInfo"
            },
            {
              "type": "null"
            }
          ],
          "description": "Use if working with offline maps."
        },
        "viewing": {
          "anyOf": [
            {
              "$ref": "#/definitions/IViewingInfo"
            },
            {
              "type": "null"
            }
          ],
          "description": "An object containing all the viewing properties of the web map. If this is null or not defined, the client should assume a logical default."
        }
      },
      "description": "The applicationProperties object is one of the objects at the top level of the JSON web map JSON schema. This is responsible for containing the viewing and editing properties of the web map. There are specific objects within this object that are applicable only to Collector and are explained within the property descriptions.",
      "title": "IApplicationProperties"
    },
    "IEditingProperties": {
      "type": "object",
      "properties": {
        "locationTracking": {
          "$ref": "#/definitions/ILocationTracking",
          "description": "If locationTracking is set and enabled, the collector app will update the feature service at the defined interval with the current location of the user logged into the collector application."
        }
      },
      "required": [
        "locationTracking"
      ],
      "description": "An object containing all the editing properties within the web map.",
      "title": "IEditingProperties"
    },
    "ILocationTracking": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A boolean value indicating whether or not location tracking is enabled on the webmap."
        },
        "info": {
          "$ref": "#/definitions/ILocationTrackingInfo",
          "description": "An object of additional information specifying layer and update interval time."
        }
      },
      "required": [
        "enabled",
        "info"
      ],
      "description": "If locationTracking is set and enabled, the collector app will update the feature service at the defined interval with the current location of the user logged into the collector application.",
      "title": "ILocationTracking"
    },
    "ILocationTrackingInfo": {
      "type": "object",
      "properties": {
        "layerId": {
          "description": "A string value indicating the given layer id specified in the web map."
        },
        "updateInterval": {
          "description": "A numeric value indicating the time interval used to update the feature service. Default value is 300 seconds."
        }
      },
      "required": [
        "layerId"
      ],
      "description": "An object containing additional information specifying layer and update interval time used in the locationTracking object.",
      "title": "ILocationTrackingInfo"
    },
    "IOfflineInfo": {
      "type": "object",
      "properties": {
        "editableLayers": {
          "$ref": "#/definitions/IEditableLayers",
          "description": "Object detailing the available offline editing options."
        },
        "readonlyLayers": {
          "$ref": "#/definitions/IReadOnlyLayers",
          "description": "Object indicating what to do with attachments in read-only layers."
        }
      },
      "required": [
        "editableLayers",
        "readonlyLayers"
      ],
      "description": "Use if working with offline maps.",
      "title": "IOfflineInfo"
    },
    "IEditableLayers": {
      "type": "object",
      "properties": {
        "download": {
          "type": "string",
          "enum": [
            "featuers",
            "featuresAndAttachments",
            "none"
          ],
          "description": "When editing layers, the edits are always sent to the server. This string value indicates which data is retrieved. For example, none indicates that only the schema is written since neither the features nor attachments are retrieved. For a full sync without downloading attachments, indicate features. Lastly, the default behavior is to have a full sync using featuresAndAttachments where both features and attachments are retrieved."
        },
        "sync": {
          "type": "string",
          "enum": [
            "syncFeaturesAndAttachments",
            "syncFeaturesUploadAttachments",
            "uploadFeaturesAndAttachments"
          ],
          "description": "This string value indicates how the data is synced."
        }
      },
      "required": [
        "download",
        "sync"
      ],
      "description": "Object detailing the available offline editing options.",
      "title": "IEditableLayers"
    },
    "IReadOnlyLayers": {
      "type": "object",
      "properties": {
        "downloadAttachments": {
          "type": "boolean",
          "description": "Indicates whether to include attachments with the read-only data."
        }
      },
      "required": [
        "downloadAttachments"
      ],
      "description": "Read-only layers as the features are always retrieved from the server.",
      "title": "IReadOnlyLayers"
    },
    "IViewingInfo": {
      "type": "object",
      "properties": {
        "basemapGallery": {
          "$ref": "#/definitions/IEnableable",
          "description": "The basemap tool which will use the basemap group defined in the Portal."
        },
        "measure": {
          "$ref": "#/definitions/IEnableable",
          "description": "Measure tool."
        },
        "routing": {
          "$ref": "#/definitions/IEnableable",
          "description": "The route tool which will leverage the Portals defined route service."
        },
        "search": {
          "$ref": "#/definitions/ISearch",
          "description": "An object specifying search parameters within the webmap."
        }
      },
      "description": "An object containing all the viewing properties of the web map. If this is null or not defined, the client should assume a logical default.",
      "title": "IViewingInfo"
    },
    "IEnableable": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "IEnableable"
    },
    "ISearch": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "disablePlaceFinder": {
          "description": "A boolean value indicating whether or not to disable the place finder."
        },
        "hintText": {
          "description": "A string value used to indicate the hint provided with the search dialog."
        },
        "layers": {
          "description": "An array of layer objects defining the styling, geometry, and attribute information for the features."
        }
      },
      "required": [
        "enabled"
      ],
      "description": "An object specifying the search parameters set within the web map.",
      "title": "ISearch"
    },
    "IRange": {
      "type": "object",
      "properties": {
        "interactionMode": {
          "type": "string",
          "enum": [
            "picker",
            "slider"
          ],
          "description": "Indicates the mode in which the active range should be presented to the user. Must be one of the following values:    slider,    picker"
        },
        "numberOfStops": {
          "description": "This is used to generate the activeRangeValues if activeRangeValues are not specified."
        },
        "stopInterval": {
          "type": "number",
          "description": "Interval in which stops should be generated."
        }
      },
      "description": "Range object.",
      "title": "IRange"
    },
    "IWidget": {
      "type": "object",
      "properties": {
        "range": {
          "$ref": "#/definitions/IRange",
          "description": "Active range."
        },
        "timeSlider": {
          "$ref": "#/definitions/ITimeSliderProperties",
          "description": "Time animation is controlled by a configurable time slider. The time slider widget will act upon all the time aware layers in the map."
        }
      },
      "description": "The widgets object contains widgets that should be exposed to the user.",
      "title": "IWidget"
    },
    "ITimeSliderProperties": {
      "type": "object",
      "properties": {
        "currentTimeExtent": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An optional array of numbers indicating the slider's start to end time extent."
        },
        "endTime": {
          "type": "number",
          "description": "The optional end of the time slider. If not specified, the slider defaults to the full time extent of all time-enabled layers."
        },
        "numberOfStops": {
          "type": "number",
          "description": "Number of stops within the timeSlider widget."
        },
        "startTime": {
          "type": "number",
          "description": "The optional start of the time slider. If not specified, the slider defaults to the full time extent of all time-enabled layers."
        },
        "thumbCount": {
          "type": "number",
          "description": "The default value for the thumbCount is 1."
        },
        "thumbMovingRate": {
          "type": "number",
          "description": "Rate at which the time animation plays. Units are in milliseconds. Default is 1000."
        },
        "timeStopInterval": {
          "type": "number",
          "description": "The interval which has been defined for the time slider."
        }
      },
      "description": "Configurable properties used within the TimeSlider widget.",
      "title": "ITimeSliderProperties"
    },
    "ITimeSlider": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ITimeSliderProperties",
          "description": "Configurable properties used within the TimeSlider widget."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Time animation is controlled by a configurable time slider. Those configurations are saved to the web map as a timeSlider widget.",
      "title": "ITimeSlider"
    },
    "IBingLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "enum": [
            "BingMapsAerial",
            "BingMapsHybrid",
            "BingMapsRoad"
          ],
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "bingKey": {
          "type": "string",
          "description": "String value that unlocks the use of Bing layers in a web map."
        },
        "canShareBingPublic": {
          "type": "boolean",
          "description": "Boolean value indicating whether the Bing key can be shared to the public."
        },
        "portalUrl": {
          "type": "string",
          "description": "A string value representing the URL to the Portal/organization Self resource. Calls should be made to this property to retrieve the Bing key. If the key is not made accessible to the public or if canShareBingPublic is false, any web maps using Bing layers will not work."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IBingLayer"
    },
    "IImageServiceLayer": {
      "type": "object",
      "properties": {
        "timeAnimation": {
          "type": "boolean",
          "description": "This property is applicable to layers that support time. If 'true', timeAnimation is enabled."
        },
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISImageServiceLayer",
          "description": "String indicating the layer type. Value of this property must be ArcGISImageServiceLayer"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "bandIds": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of bandIds that are visible, can specify bands to export or rearrange band order(from image service)."
        },
        "compressionQuality": {
          "description": "Controls how much loss the image will be subjected to by the compression algorithm (from image service)."
        },
        "definitionEditor": {
          "description": "Stores interactive filters."
        },
        "disablePopup": {
          "type": "boolean",
          "description": "Boolean property indicating whether to ignore popups defined by the service item."
        },
        "format": {
          "type": "string",
          "enum": [
            "bmp",
            "gif",
            "jpg",
            "jpgpng",
            "png",
            "png8",
            "png24",
            "png32",
            "tiff"
          ],
          "description": "String value representing image format."
        },
        "interpolation": {
          "type": "string",
          "enum": [
            "RSP_BilinearInterpolation",
            "RSP_CubicConvolution",
            "RSP_Majority",
            "RSP_NearestNeighbor"
          ],
          "description": "The algorithm used for interpolation."
        },
        "isReference": {
          "type": "boolean",
          "description": "This is applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "layerDefinition": {
          "description": "A layerDefinition object defining the attribute schema and drawing information for the layer."
        },
        "mosaicRule": {
          "description": "Specifies the mosaic rule when defining how individual images should be mosaicked."
        },
        "noData": {
          "description": "The pixel value that represents no information."
        },
        "noDataInterpretation": {
          "type": "string",
          "enum": [
            "esriNoDataMatchAll",
            "esriNoDataMatchAny"
          ],
          "description": "A string value of interpretation of noData setting. Default is 'esriNoDataMatchAny' when noData is a number, and 'esriNoDataMatchAll' when noData is an array."
        },
        "pixelType": {
          "type": "string",
          "enum": [
            "C64",
            "C128",
            "F32",
            "F64",
            "S8",
            "S16",
            "S32",
            "U1",
            "U2",
            "U4",
            "U8",
            "U16",
            "U32",
            "UNKNOWN"
          ],
          "description": "Pertains to the type of values stored in the raster, such as signed integer, unsigned integer, or floating point."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the content of popup windows when you click or query a feature."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        },
        "renderingRule": {
          "description": "Specifies the rendering rule for how the requested image should be rendered."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IImageServiceLayer"
    },
    "IImageVectorLayer": {
      "type": "object",
      "properties": {
        "timeAnimation": {
          "type": "boolean",
          "description": "This property is applicable to layers that support time. If 'true', timeAnimation is enabled."
        },
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISImageServiceVectorLayer",
          "description": "String indicating the layer type. Value of this property must be ArcGISImageServiceVectorLayer"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "definitionEditor": {
          "description": "Stores interactive filters."
        },
        "disablePopup": {
          "description": "Boolean property indicating whether to ignore popups defined by the service item."
        },
        "isReference": {
          "type": "boolean",
          "description": "This is applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "layerDefinition": {
          "description": "A layerDefinition object defining the attribute schema and drawing information for the layer."
        },
        "mosaicRule": {
          "description": "Specifies the mosaic rule when defining how individual images should be mosaicked."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the content of popup windows when you click or query a feature."
        },
        "symbolTileSize": {
          "description": "Number describing the size of the tile."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IImageVectorLayer"
    },
    "IChildLayer": {
      "type": "object",
      "properties": {
        "defaultVisibility": {
          "description": "Default visibility of the layers in the map service."
        },
        "definitionEditor": {
          "$ref": "#/definitions/IDefinitionEditor",
          "description": "An object that provides interactive filters."
        },
        "featureSet": {
          "$ref": "#/definitions/IFeatureSet",
          "description": "A featureSet object containing the geometry and attributes of the features in the layer. Used with feature collections only."
        },
        "field": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IField"
          },
          "description": "Information about each field in a layer. Used with feature collections."
        },
        "id": {
          "type": "string",
          "description": "A string indicating the index position of the layer in the map service or feature collection."
        },
        "layerDefinition": {
          "description": "The layerDefinition object defines the attribute schema and drawing information for the layer."
        },
        "layerUrl": {
          "description": "A string URL to a service that should be used for all queries against the layer. Used with hosted tiled map services on ArcGIS Online when there is an associated feature service that allows for queries."
        },
        "maxScale": {
          "description": "Represents the maximum scale at which the layer definition will be applied."
        },
        "minScale": {
          "description": "Represents the minimum scale at which the layer definition will be applied."
        },
        "nextObjectId": {
          "description": "Iterates within a featureset. Number objectId value is incremented +1 based on last Object ID defined for the feature in a featureset. Used with feature collections."
        },
        "parentLayerId": {
          "description": "If working with nested layers, this is the numeric value indicating the layer id of the next layer (parent) directly above the current referenced layer."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the popup window content for the layer."
        },
        "showLegend": {
          "description": "Indicates whether to allow map authors the ability to control what layers should be shown in a client's legend."
        },
        "subLayer": {
          "description": "Array of numeric values indicating the layer index for layers nested directly under the parent layer."
        },
        "subLayerIds": {
          "description": "If the layer is a parent layer, it will have one or more sub layers included in an array."
        },
        "title": {
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        }
      },
      "description": "A layer object may allow overrides on popup content and drawing behavior for individual layers of a web service. This object also contains geographic features and their attributes when used in a feature collection.",
      "title": "IChildLayer"
    },
    "IMapServiceLayer": {
      "type": "object",
      "properties": {
        "timeAnimation": {
          "type": "boolean",
          "description": "This property is applicable to layers that support time. If 'true', timeAnimation is enabled."
        },
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISMapServiceLayer",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "isReference": {
          "description": "This is applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IChildLayer"
          },
          "description": "An array of layer objects defining the styling, geometry, and attribute information for the features."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        },
        "thematicGroup": {
          "$ref": "#/definitions/IThematicGroup",
          "description": "(Optional) A thematicGroup object used in ArcGISMapServiceLayer layers."
        },
        "visibleLayers": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "An array of sublayer ids that should appear visible. Used with map service layers that are not tiled."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IMapServiceLayer"
    },
    "IThematicGroup": {
      "type": "object",
      "properties": {
        "fieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of string values indicating all the fields used within the webmap. All other fields can be disregarded and should not display in any field selection list."
        },
        "layerIds": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "A zero-based array of integers indicating the layers to be used in the webmap. NOTE: All other layers should not be added to the TOC and may or may not be visible on the map as reference layers."
        },
        "name": {
          "type": "string",
          "description": "String property indicating the name for the thematic grouping of layers."
        }
      },
      "title": "IThematicGroup"
    },
    "IDrawingInfo": {
      "type": "object",
      "properties": {
        "fixedSymbols": {
          "description": "Only used for feature collections with a renderer. The feature's symbol is defined by the layer's renderer."
        },
        "labelingInfo": {
          "description": "An object defining the properties used for labeling the layer."
        },
        "renderer": {
          "description": "An object defined which provides the symbology for the layer."
        },
        "scaleSymbols": {
          "description": "Boolean property indicating whether symbols should stay the same size in screen units as you zoom in. A value of true means the symbols stay the same size in screen units regardless of the map scale."
        },
        "showLabels": {
          "type": "boolean",
          "description": "Defines whether labels should be shown or not. This is only valid for sublayers."
        },
        "transparency": {
          "type": "number",
          "description": "Number value ranging between 0 (no transparency) to 100 (completely transparent)."
        }
      },
      "title": "IDrawingInfo"
    },
    "ITypeInfoDomain": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "ITypeInfoDomain"
    },
    "ITypeInfo": {
      "type": "object",
      "properties": {
        "domains": {
          "$ref": "#/definitions/Record%3Cstring%2CITypeInfoDomain%3E",
          "description": "A comma-delimited series of domain objects for each domain in the type."
        },
        "id": {
          "type": [
            "number",
            "string"
          ],
          "description": "A unique string or numerical ID for the type."
        },
        "name": {
          "type": "string",
          "description": "A user-friendly name for the type."
        },
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITemplate"
          },
          "description": "Defined as a property of the layer definition when there are no types defined; otherwise, templates are defined as properties of the types."
        }
      },
      "title": "ITypeInfo"
    },
    "Record<string,ITypeInfoDomain>": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ITypeInfoDomain"
      },
      "title": "Record<string,ITypeInfoDomain>"
    },
    "IOpenStreetMapLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "OpenStreetMap",
          "description": "String indicating the layer type. Value of this property must be OpenStreetMap"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "OpenStreetMap",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "description": "Allows use of OpenStreetMap data for use in basemaps only.",
      "title": "IOpenStreetMapLayer"
    },
    "ITiledImageServiceLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISTiledImageServiceLayer",
          "description": "String indicating the layer type. Value of this property must be ArcGISTiledImageServiceLayer"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "isReference": {
          "type": "boolean",
          "description": "Applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "ITiledImageServiceLayer"
    },
    "IExclusionArea": {
      "type": "object",
      "properties": {
        "geometry": {
          "$ref": "#/definitions/IGeometry",
          "description": "The geometry defining the area where no data will be fetched. Only extent is supported."
        },
        "maxScale": {
          "type": "number",
          "description": "The zoom level where the exclusion ends."
        },
        "maxZoom": {
          "type": "number",
          "description": "The zoom level where the exclusion ends."
        },
        "minScale": {
          "type": "number",
          "description": "The zoom level where the exclusion starts."
        },
        "minZoom": {
          "type": "number",
          "description": "The zoom level where the exclusion starts."
        }
      },
      "description": "Exclusion areas define extent areas where no data will be fetched for a layer.",
      "title": "IExclusionArea"
    },
    "ITiledMapServiceLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISTiledMapServiceLayer",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "displayLevels": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "type": "number"
            }
          ],
          "description": "NOTE: Applicable if used as a baseMapLayer. Integer value(s) indicating the display levels of the basemap layer. Only applicable for TiledMapService layers. All tiled map service layers should share the same tiling scheme. This property cannot be set via the Map Viewer UI."
        },
        "exclusionAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IExclusionArea"
          },
          "description": "NOTE: Applicable if used as a baseMapLayer. An array of exclusionArea objects defining the layer exclusions."
        },
        "isReference": {
          "description": "This property is applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IChildLayer"
          },
          "description": "An array of layer objects defining a URL for queries and the popup window content."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "description": "An ArcGIS Tiled Map Service layer displays map content from an ArcGIS Server Map service that has been cached (tiled).",
      "title": "ITiledMapServiceLayer"
    },
    "IVectorTileLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "VectorTileLayer",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "VectorTileLayer",
          "description": "Deprecated. User layerType instead."
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "styleUrl": {
          "type": "string",
          "description": "A url to a JSON file containing the stylesheet information used to render the layer. You may also pass an object containing the stylesheet information identical to the JSON file."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "description": "A vector tile layer references a set of web-accessible vector tiles and the corresponding style for how those tiles should be drawn.",
      "title": "IVectorTileLayer"
    },
    "ILod": {
      "type": "object",
      "properties": {
        "level": {
          "type": "number",
          "description": "ID for each level."
        },
        "levelValue": {
          "type": "string",
          "description": "String to be used when constructing URL to access a tile from this LOD."
        },
        "resolution": {
          "type": "number",
          "description": "Resolution in map units of each pixel in a tile for each level."
        },
        "scale": {
          "type": "number",
          "description": "Scale for each level."
        }
      },
      "title": "ILod"
    },
    "ITileInfo": {
      "type": "object",
      "properties": {
        "cols": {
          "description": "Requested tile's column."
        },
        "compressionQuality": {
          "description": "Compression quality of the tile."
        },
        "dpi": {
          "description": "The dpi of the tiling scheme."
        },
        "format": {
          "type": "string",
          "enum": [
            "bmp",
            "emf",
            "gif",
            "jpg",
            "lerc",
            "mixed",
            "pdf",
            "png",
            "png8",
            "png24",
            "png32",
            "ps",
            "svg",
            "svgz"
          ],
          "description": "Image format of the cached tiles."
        },
        "lods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ILod"
          },
          "description": "An array of levels of detail that define the tiling scheme."
        },
        "origin": {
          "$ref": "#/definitions/IPoint",
          "description": "The tiling scheme origin."
        },
        "rows": {
          "description": "Requested tile's row."
        },
        "spatialReference": {
          "$ref": "#/definitions/ISpatialReference",
          "description": "The spatial reference of the tiling schema."
        }
      },
      "description": "Tile information, returned from the WMTS OGC Web Service. The tileInfo will contain the spatial reference of the layer. tileInfo is the same json representation as the ArcGIS Map/Image service tileInfo except that it may contain a levelValue on the lod objects that should be used instead of the level in the templateUrl.",
      "title": "ITileInfo"
    },
    "IWebMapTileServiceInfo": {
      "type": "object",
      "properties": {
        "customLayerParameters": {
          "description": "A sequence of parameters used to append different custom parameters to a WMTS tile request. These parameters are applied to GetTile. The customLayerParameters property takes precedence if customParameters is also present."
        },
        "customParameters": {
          "description": "A sequence of parameters used to append custom parameters to all WMTS requests. These parameters are applied to GetCapabilities and GetTile. If used with the customLayerParameters property, customParameters will not take precedence."
        },
        "layerIdentifier": {
          "type": "string",
          "description": "Identifier for the specific layer used in the WMTS service. Required input by the user."
        },
        "tileMatrixSet": {
          "description": "Tiling schema, set by the WMTS service."
        },
        "url": {
          "type": "string",
          "description": "URL to the WMTS web service. Required input by the user."
        }
      },
      "required": [
        "layerIdentifier",
        "url"
      ],
      "description": "Object defines and provides information about layers in a WMTSLayer service.",
      "title": "IWebMapTileServiceInfo"
    },
    "IWebTiledLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "WebTiledLayer",
          "description": "String indicating the layer type. Value of this property must be WebTiledLayer"
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "WebTiledLayer",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "copyright": {
          "description": "Attribution to the Web Tiled Layer provider. It is displayed in the attribution on the web map. Input required by the user when the layer is added to the web map."
        },
        "fullExtent": {
          "$ref": "#/definitions/IExtent",
          "description": "An extent object representing the full extent envelope for the layer."
        },
        "isReference": {
          "description": "This is applicable if used as a baseMapLayer. A boolean value indicating whether or not the baseMapLayer draws on top (true) of other layers, including operationalLayers , or below (false)."
        },
        "refreshInterval": {
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        },
        "subDomains": {
          "description": "If subdomains are detected, they must be specified. The map viewer detects if the Web Tiled Layer has subdomains by parsing the templateURL value for {subDomain}."
        },
        "templateUrl": {
          "description": "URL to the Web Tiled Layer. Input required by the user when the layer is added to the web map. The template URL contains a parameterized URL. The URL can contain the following templated parameters: 'level', 'col', 'row', and 'subDomain'."
        },
        "tileInfo": {
          "$ref": "#/definitions/ITileInfo",
          "description": "Contains the spatial reference and the tiling scheme of the layer. Typically retrieved from a WMTS OGC Web Service. If missing the layer must be in the WGS 1984 Web Mercator (Auxiliary Sphere) tiling scheme."
        },
        "wmtsInfo": {
          "$ref": "#/definitions/IWebMapTileServiceInfo",
          "description": "Object containing information about the chosen WMTS service layer and tiling schema."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IWebTiledLayer"
    },
    "ICsvLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "CSV",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "CSV",
          "description": "Deprecated, use layerType instead."
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "columnDelimiter": {
          "type": "string",
          "enum": [
            " ",
            ",",
            ";",
            "\t",
            "|"
          ],
          "description": "A string defining the character used to separate columns in a CSV file."
        },
        "layerDefinition": {
          "$ref": "#/definitions/ILayerDefinition",
          "description": "A layerDefinition object defining the attribute schema and drawing information for the layer."
        },
        "locationInfo": {
          "description": "A locationInfo object defining how location information will be retrieved from a CSV file."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the content of popup windows when you click or query a feature."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "description": "The CSV layer type references a CSV or TXT file from a publically-accessible web server. It then dynamically loads into the map at run time. The CSV layer will maintain a reference to the CSV resource.",
      "title": "ICsvLayer"
    },
    "IGeoRssLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "GeoRSS",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "GeoRSS",
          "description": "Deprecated, please use layerType.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "description": "Defined by the GeoRSS to JSON request service. If the GeoRSS feed does not have lines, this property is not added to the layer JSON."
        },
        "pointSymbol": {
          "$ref": "#/definitions/IPictureMarkerSymbol",
          "description": "Defined by the GeoRSS to JSON request service. If the GeoRSS feed does not have points, this property is not added to the layer JSON."
        },
        "polygonSymbol": {
          "$ref": "#/definitions/ISimpleFillSymbol",
          "description": "Defined by the GeoRSS to JSON request service. If the GeoRSS feed does not have polygons, this property is not added to the layer JSON."
        },
        "refreshInterval": {
          "type": "number",
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IGeoRssLayer"
    },
    "IKmlLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "KML",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "description": "A number representing the maximum scale at which the layer will be visible. The number is the scale's denominator."
        },
        "minScale": {
          "description": "A number representing the minimum scale at which the layer will be visible. The number is the scale's denominator."
        },
        "opacity": {
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "description": "Indicates whether to allow map authors the ability to control what layers should be shown in a client's legend."
        },
        "title": {
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "const": "KML",
          "description": "Deprecated, use layerType instead.",
          "deprecated": "Use layerType instead."
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "refreshInterval": {
          "description": "Refresh interval of the layer in minutes. Non-zero value indicates automatic layer refresh at the specified interval. Value of 0 indicates auto refresh is not enabled."
        },
        "visibleFolders": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Array of numeric IDs of folders that will be made visible."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IKmlLayer"
    },
    "IArcGisStreamLayer": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifying string for the layer."
        },
        "name": {
          "type": "string",
          "description": "Layer name"
        },
        "itemId": {
          "type": "string",
          "description": "Optional string containing the item ID of the service if it's registered on ArcGIS Online or your organization's portal."
        },
        "layerType": {
          "type": "string",
          "const": "ArcGISStreamLayer",
          "description": "String indicating the layer type."
        },
        "maxScale": {
          "type": "number",
          "description": "Integer property used to determine the maximum scale at which the layer is displayed."
        },
        "minScale": {
          "type": "number",
          "description": "Integer property used to determine the minimum scale at which the layer is displayed."
        },
        "opacity": {
          "type": "number",
          "description": "The degree of transparency applied to the layer on the client side, where 0 is full transparency and 1 is no transparency."
        },
        "showLegend": {
          "type": "boolean",
          "description": "Boolean property indicating whether to display in the legend."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly string title for the layer that can be used in a table of contents."
        },
        "type": {
          "type": "string",
          "description": "Deprecated, use layerType instead.",
          "deprecated": true
        },
        "visibility": {
          "type": "boolean",
          "description": "Boolean property determining whether the layer is initially visible in the web map."
        },
        "url": {
          "type": "string",
          "description": "The URL to the layer. Not applicable to all layer types."
        },
        "definitionEditor": {
          "$ref": "#/definitions/IDefinitionEditor",
          "description": "Stores interactive filters."
        },
        "disablePopup": {
          "type": "boolean",
          "description": "Indicates whether to ignore popups defined by the service item."
        },
        "layerDefinition": {
          "$ref": "#/definitions/ILayerDefinition",
          "description": "A layerDefinition object defining the attribute schema and drawing information for the layer."
        },
        "popupInfo": {
          "$ref": "#/definitions/IPopupInfo",
          "description": "A popupInfo object defining the content of pop-up windows when you click or query a feature."
        }
      },
      "required": [
        "id",
        "layerType"
      ],
      "title": "IArcGisStreamLayer"
    }
  },
  "$ref": "#/definitions/WebChart"
}