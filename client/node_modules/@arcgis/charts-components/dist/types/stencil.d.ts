/// <reference types="../index.d.ts" />
import type { ArcgisChart } from "../components/arcgis-chart";
import type { ArcgisChartsActionBar } from "../components/arcgis-charts-action-bar";
import { JSXBase as StencilJsx } from "@stencil/core/internal";
import type { EventHandler } from "@arcgis/lumina";

interface StencilArcgisChart extends Partial<Pick<ArcgisChart, 'actionMode' | 'autoDisposeChart' | 'chartLimits' | 'chartWillRender' | 'componentVersion' | 'cursorRange' | 'dataLabelFormatter' | 'disableTogglingLegendItems' | 'enableConfiguration' | 'enableResponsiveFeatures' | 'errorPolicy' | 'featureIndex' | 'filterByExtent' | 'filterBySelection' | 'gaugeInnerLabelFormatter' | 'guideTooltipFormatter' | 'hideEmptySeries' | 'hideLicenseWatermark' | 'hideLoaderAnimation' | 'ignoreSmoothRenderingLimit' | 'ignoreViewExtent' | 'layer' | 'layerFieldsChangePolicy' | 'layerFilterChangePolicy' | 'layerRendererChangePolicy' | 'legendPosition' | 'legendValueLabelFormatter' | 'legendVisibility' | 'loaderColors' | 'messageOptions' | 'model' | 'placeholder' | 'queueChartCreation' | 'replaceNoValueCategoryWithZero' | 'returnFeaturesExtent' | 'returnSelectionIndexes' | 'returnSelectionOIDs' | 'rotation' | 'runtimeDataFilters' | 'secondaryYAxisLabelFormatter' | 'selectionData' | 'selectionTheme' | 'setTimeBinningInfoWhenNotProvided' | 'syncSelection' | 'syncSelectionsBetweenChartAndLayerViewPolicy' | 'timeZone' | 'tooltipFormatter' | 'updateSplitBySeries' | 'useAnimatedCharts' | 'usePopupTemplateFieldsInfo' | 'view' | 'viewTimeExtentChangePolicy' | 'xAxisLabelFormatter' | 'yAxisLabelFormatter'>>, ArcgisChartSetterTypes, StencilJsx.HTMLAttributes<HTMLArcgisChartElement> {
  onArcgisAxesMinMaxChange?: EventHandler<HTMLArcgisChartElement["arcgisAxesMinMaxChange"]>;
  onArcgisBadDataWarningRaise?: EventHandler<HTMLArcgisChartElement["arcgisBadDataWarningRaise"]>;
  onArcgisConfigChange?: EventHandler<HTMLArcgisChartElement["arcgisConfigChange"]>;
  onArcgisDataFetchComplete?: EventHandler<HTMLArcgisChartElement["arcgisDataFetchComplete"]>;
  onArcgisDataProcessComplete?: EventHandler<HTMLArcgisChartElement["arcgisDataProcessComplete"]>;
  onArcgisDataProcessError?: EventHandler<HTMLArcgisChartElement["arcgisDataProcessError"]>;
  onArcgisLegendItemVisibilityChange?: EventHandler<HTMLArcgisChartElement["arcgisLegendItemVisibilityChange"]>;
  onArcgisNoRenderPropChange?: EventHandler<HTMLArcgisChartElement["arcgisNoRenderPropChange"]>;
  onArcgisRuntimeError?: EventHandler<HTMLArcgisChartElement["arcgisRuntimeError"]>;
  onArcgisSelectionComplete?: EventHandler<HTMLArcgisChartElement["arcgisSelectionComplete"]>;
  onArcgisSeriesColorChange?: EventHandler<HTMLArcgisChartElement["arcgisSeriesColorChange"]>;
  onArcgisSeriesOrder?: EventHandler<HTMLArcgisChartElement["arcgisSeriesOrder"]>;
  onArcgisUpdateComplete?: EventHandler<HTMLArcgisChartElement["arcgisUpdateComplete"]>;
}
type ArcgisChartSetterTypes = ArcgisChart["_setterTypes"]

interface StencilArcgisChartsActionBar extends Partial<Pick<ArcgisChartsActionBar, 'actionBarSelectionMode' | 'chartElement' | 'chartType' | 'clearSelectionState' | 'clearSelectionTitle' | 'clearSelectionToggle' | 'disableCSVExportForChartTypes' | 'disabledExportAction' | 'editChartState' | 'editChartTitle' | 'editChartToggle' | 'expanded' | 'exportAsCSVState' | 'exportAsCSVTitle' | 'exportAsImageState' | 'exportAsImageTitle' | 'filterByExtentState' | 'filterByExtentTitle' | 'filterByExtentToggle' | 'filterBySelectionState' | 'filterBySelectionTitle' | 'filterBySelectionToggle' | 'forceDisableActions' | 'fullExtentState' | 'fullExtentTitle' | 'fullExtentToggle' | 'hiddenActions' | 'legendState' | 'legendTitle' | 'legendToggle' | 'messageOverrides' | 'rotateChartState' | 'rotateChartTitle' | 'rotateChartToggle' | 'selectionState' | 'selectionTitle' | 'selectionToggle' | 'switchSelectionState' | 'switchSelectionTitle' | 'switchSelectionToggle' | 'zoomState' | 'zoomTitle' | 'zoomToggle'>>, StencilJsx.HTMLAttributes<HTMLArcgisChartsActionBarElement> {
  onArcgisActionBarToggle?: EventHandler<HTMLArcgisChartsActionBarElement["arcgisActionBarToggle"]>;
  onArcgisDefaultActionSelect?: EventHandler<HTMLArcgisChartsActionBarElement["arcgisDefaultActionSelect"]>;
}

interface ExposedElements {
  "arcgis-chart": StencilArcgisChart;
  "arcgis-charts-action-bar": StencilArcgisChartsActionBar;
}

export namespace JSX {
  export interface IntrinsicElements extends ExposedElements {}
}

declare module "@stencil/core/internal/stencil-public-runtime" {
  export namespace h.JSX {
    interface IntrinsicElements extends ExposedElements {}
  }
}