/// <reference types="../../index.d.ts" />
import { ChartTypes, ActionModes, ActionState, ActionToggle, DefaultChartActions } from '../../utils';
import { DefaultActionSelectPayload } from '../../utils/components/event-payloads';
import { JsxNode, PublicLitElement as LitElement, TargetedEvent } from '@arcgis/lumina';
import { WebChartTypes } from '@arcgis/charts-spec';
import { ArcgisChart } from '../arcgis-chart/customElement.js';

/**
 * The ArcGIS charts action bar component enhances chart functionality by offering context-specific actions such as rotation, zooming, and filtering.
 * It also supports general actions like exporting the chart as an image or CSV.
 * This component is designed to be used with a chart component and is not intended for standalone use.
 *
 * See also:
 * - [Tutorial: Charts components with Map components using charts action bar](https://developers.arcgis.com/javascript/latest/tutorials/charts-components-with-map-components/)
 *
 * [Read more...](https://developers.arcgis.com/javascript/latest/references/charts-components/arcgis-charts-action-bar/)
 *
 * @slot [custom-action-top] - A slot for adding custom `calcite-action` to the top of the default actions.
 * @slot [custom-action-below] - A slot for adding custom `calcite-action` to the bottom of the default actions.
 */
export declare class ArcgisChartsActionBar extends LitElement {
    /** Overwrite localized strings for this component */
    messageOverrides?: typeof this._messages._overrides;
    /**
     * Chart type used to determine which default actions to display.
     *
     * @category Public
     * @type {SupportedCharts | undefined}
     * @default undefined
     */
    chartType?: ChartTypes | undefined;
    /**
     * Chart element reference with which the action bar is associated.
     *
     * @category Public
     * @type {HTMLArcgisChartElement}
     * @default undefined
     */
    chartElement?: HTMLArcgisChartElement;
    /**
     * When `true`, overrides the individual settings for each action to instead force disable them all.
     *
     * @category Public
     * @type {boolean}
     * @default false
     */
    forceDisableActions: boolean;
    /**
     * When active, the edit chart action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    editChartToggle: ActionToggle;
    /**
     * When disabled, interaction with the edit chart action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "disabled"
     */
    editChartState: ActionState;
    /**
     * Custom title for the edit chart action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    editChartTitle?: string | undefined;
    /**
     * When active, the legend action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    legendToggle: ActionToggle;
    /**
     * When disabled, interaction with the legend action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    legendState: ActionState;
    /**
     * Custom title for the legend action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    legendTitle?: string | undefined;
    /**
     * When active, the rotate chart action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    rotateChartToggle: ActionToggle;
    /**
     * When disabled, interaction with the rotate chart action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    rotateChartState: ActionState;
    /**
     * Custom title for the rotate chart action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    rotateChartTitle?: string | undefined;
    /**
     * When active, the filter by selection action is highlighted.
     *
     * @category
     * Public
     * type {ActionToggle}
     * @default "inactive"
     */
    filterBySelectionToggle: ActionToggle;
    /**
     * When disabled, interaction with the filter by selection action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    filterBySelectionState: ActionState;
    /**
     * Custom title for the filter by selection action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    filterBySelectionTitle?: string | undefined;
    /**
     * When active, the filter by extent action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    filterByExtentToggle: ActionToggle;
    /**
     * When disabled, interaction with the filter by extent action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    filterByExtentState: ActionState;
    /**
     * Custom title for the filter by extent action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    filterByExtentTitle?: string | undefined;
    /**
     * Action bar selection mode. Defines which selection mode the slotted action bar should use.
     *
     * @category Public
     * @type {Extract<ActionModes, "monoSelection" | "multiSelection" | "multiSelectionWithCtrlKey">}
     * @default "multiSelectionWithCtrlKey"
     */
    actionBarSelectionMode?: Extract<ActionModes, "monoSelection" | "multiSelection" | "multiSelectionWithCtrlKey">;
    /**
     * When active, the selection action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    selectionToggle: ActionToggle;
    /**
     * When disabled, interaction with the selection action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    selectionState: ActionState;
    /**
     * Custom title for the selection action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    selectionTitle?: string | undefined;
    /**
     * When active, the zoom action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    zoomToggle: ActionToggle;
    /**
     * When disabled, interaction with the zoom action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    zoomState: ActionState;
    /**
     * Custom title for the zoom action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    zoomTitle?: string | undefined;
    /**
     * When active, the full extent action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    fullExtentToggle: ActionToggle;
    /**
     * When disabled, interaction with the full extent action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    fullExtentState: ActionState;
    /**
     * Custom title for the full extent action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    fullExtentTitle?: string | undefined;
    /**
     * When active, the clear selection action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    clearSelectionToggle: ActionToggle;
    /**
     * When disabled, interaction with the clear selection action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    clearSelectionState: ActionState;
    /**
     * Custom title for the clear selection action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    clearSelectionTitle?: string | undefined;
    /**
     * When active, the switch selection action is highlighted.
     *
     * @category Public
     * @type {ActionToggle}
     * @default "inactive"
     */
    switchSelectionToggle: ActionToggle;
    /**
     * When disabled, interaction with the switch selection action is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    switchSelectionState: ActionState;
    /**
     * Custom title for the switch selection action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    switchSelectionTitle?: string | undefined;
    /**
     * When disabled, interaction with the download image is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    exportAsImageState: ActionState;
    /**
     * Custom title for the download chart action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    exportAsImageTitle?: string | undefined;
    /**
     * When disabled, interaction with the download CSV is prevented and the component is displayed with lower opacity.
     *
     * @category Public
     * @type {ActionState}
     * @default "enabled"
     */
    exportAsCSVState: ActionState;
    /**
     * Custom title for the download CSV action.
     *
     * @category Public
     * @type {string | undefined}
     * @default undefined
     */
    exportAsCSVTitle?: string | undefined;
    /**
     * The CSV export action is disabled for certain chart types.
     *
     * Modify this property to add or remove chart types from the list of disabled types.
     *
     * @category Public
     * @type {WebChartTypes[]}
     * @default [WebChartTypes.ScatterSeries, WebChartTypes.BoxPlotSeries]
     */
    disableCSVExportForChartTypes: WebChartTypes[];
    /**
     * When `true`, the export action is disabled.
     *
     * @category Public
     * @type {boolean}
     * @default false
     */
    disabledExportAction: boolean;
    /**
     * When `true`, the action bar is expanded.
     *
     * @category Public
     * @type {boolean}
     * @default false
     */
    expanded: boolean;
    /**
     * Holds a list of actions to hide from the action bar.
     *
     * **Note:** The edit chart action is hidden by default. To show it, remove its value from this array.
     *
     * @category Public
     * @type {DefaultChartActions[]}
     * @default ["editChart"]
     */
    hiddenActions: DefaultChartActions[];
    /**
     * Event triggered once action bar expand is toggled
     *
     * @type {EventEmitter<boolean>}
     * @event
     */
    readonly arcgisActionBarToggle: TargetedEvent<this, boolean>;
    /**
     * Event triggered once a default action is selected
     *
     * @type {EventEmitter<DefaultActionSelectPayload>}
     * @event
     */
    readonly arcgisDefaultActionSelect: TargetedEvent<this, DefaultActionSelectPayload>;
    private _messages;
}
