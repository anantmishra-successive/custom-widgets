import { Label } from '@amcharts/amcharts5';
import { Axis, AxisRenderer } from '@amcharts/amcharts5/xy.js';
import { WebChartAxis, WebChartText, WebChartLabelBehavior, WebChartTypes } from '@arcgis/charts-spec';
import { ChartTypes } from '../../../../../utils';
/**
 * Updates the axis min grid distance. It represents the minimum distance in pixels between the grid elements
 * and its labels.
 * Used to control density of the grid/labels on the axis.element.
 * Works differently according to the axis labels behavior.
 *
 * @param props.axis The axis
 * @param props.chartType The chart type
 * @param props.labelConfig The config for the axis labels
 * @param props.horizontalAxisLabelsBehavior Instruction about how the axis labels should behave
 * @param props.isSecondValueAxis Whether the axis to create is the second value axis (in dual axis mode)
 * @param props.tickSpacing The desired minimum distance between two adjacent axis ticks - overrides all logic set in the function
 */
export declare function updateAxisMinGridDistance(props: {
    axis: Axis<AxisRenderer>;
    chartType?: ChartTypes;
    labelConfig: WebChartText;
    horizontalAxisLabelsBehavior?: WebChartLabelBehavior;
    isSecondValueAxis?: boolean;
    tickSpacing?: number;
}): void;
/**
 * Update the axis labels
 *
 * @param props.axis The axis
 * @param props.axisConfig The axis configuration
 * @param props.chartType The chart type
 * @param props.horizontalAxisLabelsBehavior The horizontal axis labels behavior
 * @param props.verticalAxisLabelsBehavior The vertical axis labels behavior
 * @param props.axisLabelsBehaviorChanged Whether the axis labels behavior has changed
 */
export declare function updateAxisLabel(props: {
    axis: Axis<AxisRenderer>;
    axisConfig: WebChartAxis;
    chartType?: WebChartTypes;
    horizontalAxisLabelsBehavior?: WebChartLabelBehavior;
    verticalAxisLabelsBehavior?: WebChartLabelBehavior;
    axisLabelsBehaviorChanged?: [boolean, boolean];
}): void;
/**
 * Allows a axis label to automatically adjusts its max width or height according to either a fixed size or its container's size
 *
 * @param props.axis The chart
 * @param props.label The label to wrap
 * @param props.isHorizontalAxis Whether the axis is horizontal
 */
export declare function autoAdjustAxisLabelDimension(props: {
    axis: Axis<AxisRenderer>;
    isHorizontalAxis: boolean;
    label: Label;
}): void;
