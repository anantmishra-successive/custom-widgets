import { c as g } from "../../chunks/runtime.js";
import { RESTSymbolType as C } from "@arcgis/charts-spec";
import { isEqual as f } from "lodash-es";
import "d3-array";
import { P as m } from "../../chunks/interfaces.js";
import "@arcgis/core/geometry/support/jsonUtils.js";
import "@arcgis/core/rest/support/AttributeBinsQuery.js";
import "@arcgis/core/rest/support/Query.js";
import "@arcgis/core/rest/support/StatisticDefinition.js";
import "@arcgis/core/time/TimeExtent.js";
import "@arcgis/core/core/promiseUtils.js";
import "@arcgis/core/request.js";
import { e as v } from "../../chunks/popover-ui-utils.js";
import { U as u } from "../../chunks/chart-ui-utils2.js";
import { u as y } from "../../chunks/useT9n.js";
import { html as n } from "lit";
import { createRef as b, ref as S } from "lit-html/directives/ref.js";
import { LitElement as P, createEvent as a, safeClassMap as l } from "@arcgis/lumina";
import { css as x } from "@lit/reactive-element/css-tag.js";
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
const c = {
  jsAppFlyout: "js-app-flyout",
  panelChildrenContainer: "panel-children-container"
}, $ = x`.hide{display:none}.am5-modal{width:100%;height:100%;position:absolute;z-index:100000;top:0;left:0}.am5-modal-curtain{top:0;left:0;width:100%;height:100%;position:absolute;background:#fff!important;z-index:100}.am5-modal-wrapper{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;white-space:nowrap;background:#ffffff80;z-index:101}.am5-modal-content{display:inline-block;padding:1.2em;vertical-align:middle;text-align:start;white-space:normal;background:#fff;border-radius:4px;box-shadow:#00000073 0 0 36px;color:#000}.am5-layer-1000{z-index:1000!important}.arcgis-charts-modal{box-shadow:none!important}.arcgis-charts-modal-header{background-color:#0000000d;font-weight:700;padding:4px;align-content:center}.show{display:block}.notifyPanel{flex:0 1 auto}.disable-interactions{pointer-events:none}.dim-text{color:var(--arcgis-charts-dim-text)}:host{overflow-y:auto;width:min-content}.panel-children-container{display:flex;padding:0 1rem;margin-top:1rem}.panel-children-container calcite-label{flex:1 1 0px;display:flex;width:0px}`;
class L extends P {
  constructor() {
    super(...arguments), this._messages = y(), this.popoverElement = b(), this.isLineSymbol = !1, this.arcgisChartsConfigPopoverClose = a(), this.arcgisChartsConfigPopoverOpenChange = a(), this.arcgisChartsConfigSeriesPopoverColorChange = a(), this.arcgisChartsConfigSeriesPopoverLineStyleChange = a(), this.arcgisChartsConfigSeriesPopoverLineWidthChange = a(), this.arcgisChartsConfigSeriesPopoverNameChange = a();
  }
  static {
    this.properties = { messageOverrides: 0, referenceElement: 2, selectedName: 3, selectedColor: 2, selectedLineStyle: 3, selectedLineWidth: 11, isLineSymbol: 7, placement: 3, open: 7, labelCanBeConfigured: 7 };
  }
  static {
    this.styles = $;
  }
  async reposition() {
    await this.popoverElement.value?.reposition();
  }
  willUpdate(e) {
    e.has("open") && (this.hasUpdated || !this.open) && this.openChange();
  }
  updated() {
    v(this.popoverElement.value, this.open), this.hasUpdated || setTimeout(() => {
      this.popoverElement.value?.reposition();
    }, u.PopoverTimer);
  }
  loaded() {
    this.openChange();
  }
  openChange() {
    this.arcgisChartsConfigPopoverOpenChange.emit({ open: this.open });
  }
  seriesNameChange(e) {
    const t = e.target.value;
    this.selectedName !== t && (this.selectedName = t, this.arcgisChartsConfigSeriesPopoverNameChange.emit({ name: t }));
  }
  closePopover() {
    this.open = !1, this.arcgisChartsConfigPopoverClose.emit();
  }
  colorChange(e) {
    const t = e instanceof CustomEvent ? e.detail : e, [s, i, o] = t, r = m * 255;
    this.selectedColor = [s, i, o, r], this.arcgisChartsConfigSeriesPopoverColorChange.emit({ color: [s, i, o, r] });
  }
  lineSymbolChange(e) {
    const { lineStyle: t } = e.target, { color: s, style: i, width: o } = t;
    if (s !== void 0 && !f(s, this.selectedColor)) {
      const [r, h, p] = s, d = m * 255;
      this.selectedColor = [r, h, p, d], this.arcgisChartsConfigSeriesPopoverColorChange.emit({ color: [r, h, p, d] });
    }
    i !== void 0 && i !== this.selectedLineStyle && (this.selectedLineStyle = i, this.arcgisChartsConfigSeriesPopoverLineStyleChange.emit({ style: i })), o !== void 0 && o !== this.selectedLineWidth && (this.selectedLineWidth = o, this.arcgisChartsConfigSeriesPopoverLineWidthChange.emit({ width: o }));
  }
  render() {
    const e = this.selectedColor;
    return n`<div class=${l({
      [c.jsAppFlyout]: !0
    })}><calcite-popover .referenceElement=${this.referenceElement ?? document.body} .placement=${this.placement} .open=${this.open} @calcitePopoverClose=${this.closePopover} label ${S(this.popoverElement)}><calcite-panel .heading=${this._messages.seriesElement} closable .closed=${!this.open} @calcitePanelClose=${this.closePopover}>${this.labelCanBeConfigured ? n`<div class=${l(c.panelChildrenContainer)}><calcite-label>${this._messages.label}<calcite-input type=text .value=${this.selectedName} @calciteInputInput=${this.seriesNameChange}></calcite-input></calcite-label></div>` : null}<div class=${l(c.panelChildrenContainer)}>${this.isLineSymbol ? n`<arcgis-charts-config-line-style .open=${this.open} enable-close .lineStyle=${{
      type: C.SLS,
      style: this.selectedLineStyle,
      width: this.selectedLineWidth,
      color: e
    }} @arcgisChartsConfigLineStyleClose=${this.closePopover} @arcgisChartsConfigLineStyleChange=${this.lineSymbolChange}></arcgis-charts-config-line-style>` : n`<arcgis-charts-config-colors .heading=${this._messages.symbolColor} .rgba=${e} @colorSelect=${this.colorChange}></arcgis-charts-config-colors>`}</div></calcite-panel></calcite-popover></div>`;
  }
}
g("arcgis-charts-config-box-plot-series-popover", L);
export {
  L as ArcgisChartsConfigBoxPlotSeriesPopover
};
