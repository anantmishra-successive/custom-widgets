import { ChartConfig } from '../../utils';
import { IFeatureLayer, SupportedLayer } from '@arcgis/charts-spec';
import { ModelOfType, ModelTypes } from '../interfaces/common';
declare namespace CreateModelPropsOptions {
    /**
     * Properties used by the `createModel` function to create a new model based on the provided `layer` and `chartType`.
     *
     * A new model of the specified type will be created using default values.
     */
    type LayerAndType<T extends ModelTypes> = {
        layer: SupportedLayer;
        chartType: T;
    };
    /**
     * Properties used by the `createModel` function to create a new model based on the provided `iLayer` and `chartType`.
     *
     * A new model of the specified type will be created using default values.
     */
    type ILayerAndType<T extends ModelTypes> = {
        iLayer: IFeatureLayer;
        chartType: T;
    };
    /**
     * Properties used by the `createModel` function to create a new model based on the provided `iLayer` and `config`.
     *
     * The `config` is considered "sourceless" since its `iLayer` property is not required.
     */
    type LayerAndSourcelessConfig<T extends ModelTypes> = {
        layer: SupportedLayer;
        config: ChartConfig<T>;
    };
    /**
     * Properties used by the `createModel` function to create a new model based on the provided `iLayer` and `config`.
     *
     * The `config` is considered "sourceless" since its `iLayer` property is not required.
     */
    type ILayerAndSourcelessConfig<T extends ModelTypes> = {
        iLayer: IFeatureLayer;
        config: ChartConfig<T>;
    };
    /**
     * Properties used by the `createModel` function to create a new model based on the provided `config`.
     *
     * **Note: The `config` must have its `iLayer` property (source) defined.**
     */
    type SourcedConfig<T extends ModelTypes> = {
        config: ChartConfig<T>;
    };
}
/**
 * Properties used by the `createModel` function to create a new model.
 *
 * Various combinations of `layer`, `iLayer`, `chartType`, and `config` are supported.
 */
type CreateModelProps<T extends ModelTypes> = CreateModelPropsOptions.ILayerAndSourcelessConfig<T> | CreateModelPropsOptions.ILayerAndType<T> | CreateModelPropsOptions.LayerAndSourcelessConfig<T> | CreateModelPropsOptions.LayerAndType<T> | CreateModelPropsOptions.SourcedConfig<T>;
/**
 * Creates a new chart model for config interaction based on the provided properties.
 *
 * Various combinations of properties `layer`, `iLayer`, `chartType`, and `config` are supported.
 *
 * @param {CreateModelProps} props - The properties used to set up the chart.
 */
export declare function createModel<T extends ModelTypes>(props: CreateModelProps<T>): Promise<ModelOfType<T>>;
export {};
