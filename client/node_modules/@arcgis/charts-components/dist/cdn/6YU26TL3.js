/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
v4.33.19 */
import l from"./JSQB64BT.js";import k from"./WTWWOGJZ.js";import j from"./BQL6MU4B.js";import i from"./PRGEUPP3.js";import h from"./VQ33UHMK.js";import g from"./53DAH35C.js";import f from"./UP2W23ZO.js";import e from"./IODBG2AO.js";import d from"./UHUEI4NU.js";import c from"./3RODMSQG.js";import b from"./PDDPZQ7S.js";import"./TJWJSZZ6.js";import{a}from"./IYCX42AE.js";import"./YG7SBKS5.js";export default $arcgis.t(([,,,,,,,{Ga:l,Ja:c,Qa:d},{i:r,k:n,l:g},,,,,,,{b:h,c:S},{a:m,b:_,c:b,d:p,e:y,f:u,g:C,h:k,i:L,j:v,k:I,l:B,m:M,n:f,o:U,p:V,q:z,t:F,u:j},{a:w,b:D,c:O,d:T}])=>{var A=class extends S{constructor(){super(...arguments),this._chartType=a.ComboLineAndBarSeries}getConfig(){return this._config}async setup(e){await this.loadConfigFromLayer(e),e.config!==void 0&&(g(e.config?.series)&&await this.initDefaultSeries(),await this.updateSeriesFromLayerFilter()),this.resolveSetup()}async generateDefaultConfig(){let e=await d();return e.series=[await c({objectIDField:this.layerInfo?.objectIdField})],e}async initDefaultSeries(){this.defaultSeries=await l({objectIDField:this.layerInfo?.objectIdField})}async setSeriesType(e,i){if(e<this._config.series.length&&e>=0){let s=this._config.series[e],o;if(i===a.BarSeries&&r(s)){let t={...s};delete t.lineSymbol,delete t.markerSymbol,delete t.lineSmoothed,delete t.markerVisible,delete t.areaColor,delete t.stackNegativeValuesToBaseline,o={...await c({objectIDField:this.layerInfo?.objectIdField}),...t,type:a.BarSeries,y:[s.y].flat()[0]},o.fillSymbol&&(o.fillSymbol={...o.fillSymbol,color:s.lineSymbol?.color})}else if(i===a.LineSeries&&n(s)){let t={...s};delete t.fillSymbol,delete t.hideOversizedStackedLabels,delete t.hideOversizedSideBySideLabels,o={...await l({objectIDField:this.layerInfo?.objectIdField}),...t,type:a.LineSeries},o.lineSymbol&&(o.lineSymbol={...o.lineSymbol,color:s.fillSymbol?.color})}o!==void 0&&(this._config.series[e]=o,this.emitConfigUpdate("setDataType"))}}getSeriesLineStyle(e){return m(e,this._config)}setSeriesLineStyle(e,i){let s=this._config.series?.[i];r(s)&&(_(e,i,this._config),this.emitConfigUpdate("setSeriesLineStyle"))}getSeriesLineWidth(e){return b(e,this._config)}setSeriesLineWidth(e,i){let s=this._config.series?.[i];r(s)&&(p(e,i,this._config),this.emitConfigUpdate("setSeriesLineWidth"))}getSeriesMarkerColor(e){return y(e,this._config)}setSeriesMarkerColor(e,i){let s=this._config.series?.[i];r(s)&&(u(e,i,this._config),this.emitConfigUpdate("setSeriesMarkerColor"))}getSeriesMarkerStyle(e){return C(e,this._config)}setSeriesMarkerStyle(e,i){let s=this._config.series?.[i];r(s)&&(k(e,i,this._config),this.emitConfigUpdate("setSeriesMarkerStyle"))}getSeriesMarkerSize(e){return L(e,this._config)}setSeriesMarkerSize(e,i){let s=this._config.series?.[i];r(s)&&(v(e,i,this._config),this.emitConfigUpdate("setSeriesMarkerSize"))}isLineSmoothed(e){return I(e,this._config)}setLineSmoothed(e,i){let s=this._config.series?.[i];r(s)&&(B({smoothed:e,seriesIndex:i,config:this._config}),this.emitConfigUpdate("setLineSmoothed"))}isAreaVisible(e){return M(e,this._config)}setAreaVisible(e,i){let s=this._config.series?.[i];r(s)&&(f({visible:e,seriesIndex:i,config:this._config}),this.emitConfigUpdate("setAreaVisible"))}isMarkerVisible(e){return U(e,this._config)}setMarkerVisible(e,i){let s=this._config.series?.[i];r(s)&&(V({visible:e,seriesIndex:i,config:this._config}),this.emitConfigUpdate("setMarkerVisible"))}getAreaColor(e){return z(e,this._config)}setAreaColor(e,i){let s=this._config.series?.[i];r(s)&&(f({visible:!0,seriesIndex:i,config:this._config}),h(e,i,this._config),this.emitConfigUpdate("setAreaColor"))}isNegativeValuesStackedToBaseline(e){return F(e,this._config)}setNegativeValuesStackedToBaseline(e,i){let s=this._config.series?.[i];r(s)&&(j({stackNegativeValuesToBaseline:e,seriesIndex:i,config:this._config}),this.emitConfigUpdate("setNegativeValuesStackedToBaseline"))}getSeriesHideOversizedSideBySideLabels(e){return w(e,this._config)}setSeriesHideOversizedSideBySideLabels(e,i){let s=this._config.series?.[i];n(s)&&(D(e,i,this._config),this.emitConfigUpdate("setSeriesHideOversizedSideBySideLabels"))}getSeriesHideOversizedStackedLabels(e){return O(e,this._config)}setSeriesHideOversizedStackedLabels(e,i){let s=this._config.series?.[i];n(s)&&(T(e,i,this._config),this.emitConfigUpdate("setSeriesHideOversizedStackedLabels"))}};return A},"geometry/support/jsonUtils","rest/support/AttributeBinsQuery","rest/support/Query","rest/support/StatisticDefinition","time/TimeExtent","core/promiseUtils","request",b,c,d,e,f,g,h,i,j,k,l)